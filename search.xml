<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>uniapp快速实践</title>
      <link href="/2020/04/10/fast-uniapp/"/>
      <url>/2020/04/10/fast-uniapp/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>之前给文保局做了GIS系统和物联网监控系统效果不错，现在想弄个erp，问了一下业务规模，几乎约等于“零”。咋办，单一业务线走到底呗。本来说最近一直在搞flutter，就用flutter给他们弄一个，app和web（beta）一套直接就生成了。方便快速（省事）。结果呢，人家要用微信小程序…哎，甲方是爸爸。<br>结合已有技术经验和业务规模（如果有的话{笑}），还要考虑可能出现的业务平台变更这种吊炸天需求，调研了几个平台，这里我列一下：</p><blockquote><p>1.微信小程序原生：难用的ide，技术栈就是web变种。<br>2.H5+app：原生代码少不了，Android和iOS要单独适配，涉及到兼容性的问题。<br>3.mpvue：美团搞的，基于Vue.js的小程序开发框架，小程序和H5一套搞定型。<br>4.uni-app：Dcloud搞的，也是基于Vue.js的框架，iOS、Android、H5、各种小程序一套搞定型。</p></blockquote><p>对比了一下，微信小程序原生、H5+app，我直接就放弃了，微信小程序那个IDE简直不要太难用，而且改平台就是重写代码；H5+app一个人弄太费事不说，缺少优化可能效果也一般，虽然有原生app的超高天花板，但是谁叫咱就一个人，还要快速出活呢；mpvue本来我是准备选的，小程序+H5，基本上都能干了，后面要改原生app的话，我就套webview的壳，关键是开源免费，怪就怪在开源吧，我上github看了下commits和issues，最近的commit是八个月前了…issues也有点混乱的感觉，加上之前爆出美团的KPI事件，我觉得为了我的KPI和头发，还是算了吧。都说到这了，还有的选吗？最开始我是觉得uniapp商业话太严重（推广），加上不开源，还是有些顾虑的，但是好像现在是（部分）开源了？推广说明官方很重视，那。。还说什么呢，淦</p><h2 id="淦"><a href="#淦" class="headerlink" title="淦"></a>淦</h2><p>因为微信小程序和uniapp都没搞过，花时间分别看了下文档，都是web变种，会web就会开发。主要是熟悉下整体的框架，为啥这样设计，有哪些个组件分别能干啥事，有哪些API。细节千万别看，太花时间，而且你肯定记不住，所以就直接上手吧。<br>uniapp支持Weex，在app端，用vue页面的话就是用webview渲染的，用nvue的话就是用原生渲染。(｡･∀･)ﾉﾞ嗨，等于说码量还是不小啊，坑还是多啊。不过uniapp支持<code>#ifdef #endif</code>条件编译语法，这个没啥好说的，写后端的都知道，赞一个。<br>然后就是写项目了，如果看了微信小程序文档和uniapp的文档，你就会发现，其实就是个web前端的东西，无非就是语法变了一点，配置文件针对多端合并重封装了，写代码的时候要注意兼容，一个ui组件把几个端都同时考虑进来，用条件编译。就行了，就是这么简单，快速实践就介绍完了（其实是不知道说啥了）。（逃）</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> uniapp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页插件</title>
      <link href="/2020/04/03/weatherPlugin/"/>
      <url>/2020/04/03/weatherPlugin/</url>
      
        <content type="html"><![CDATA[<h2 id="天气"><a href="#天气" class="headerlink" title="天气"></a>天气</h2><p>中国天气网：<a href="https://cj.weather.com.cn/plugin/pc" target="_blank" rel="noopener">https://cj.weather.com.cn/plugin/pc</a><br>生成插件放到： themes/matery/layout/layout.ejs</p><h2 id="动态诗词"><a href="#动态诗词" class="headerlink" title="动态诗词"></a>动态诗词</h2><p>今日诗词：<a href="https://www.jinrishici.com/" target="_blank" rel="noopener">https://www.jinrishici.com/</a><br>一言: <a href="https://hitokoto.cn/" target="_blank" rel="noopener">https://hitokoto.cn/</a></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> plugin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客地址</title>
      <link href="/2020/04/03/myblogaddress/"/>
      <url>/2020/04/03/myblogaddress/</url>
      
        <content type="html"><![CDATA[<blockquote><p><del>由于众所周知的原因，单纯把博客部署到一个地方，很可能访问不到，或者访问很慢，所以这里同时部署到github和gitee，提高访问速度</del> [手动狗头]</p></blockquote><ul><li>前置条件：你会搭博客（网站）</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p> 我的两个博客地址：<br> <a href="http://tanghaojie.github.io/">http://tanghaojie.github.io/</a><br> <a href="https://jackie_tang.gitee.io/" target="_blank" rel="noopener">https://jackie_tang.gitee.io/</a><br> <br></p><hr><h2 id="gitee-pages的一个坑"><a href="#gitee-pages的一个坑" class="headerlink" title="gitee pages的一个坑"></a>gitee pages的一个坑</h2><p> 每次远程部署以后，需要手动到gitee pages服务里面去，手动点击更新按钮才能自动更新博客。（想自动更新？gitee pages pro了解一下）</p><h2 id="从github同步方式部署"><a href="#从github同步方式部署" class="headerlink" title="从github同步方式部署"></a>从github同步方式部署</h2><ul><li>在gitee新建仓库:<br><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/gitee_blog.jpg" alt="就像这样配置就好"></li></ul><p> <em>注意点：</em><br> <em>1.仓库名用gitee给你分配的个人地址名，可以到 个人中心–&gt;个人空间地址 中看到，不一定是你的用户名，比如我的地址是：Jackie_Tang，我的用户名是：JackieTang。因为我改过名。。。</em><br> <em>2.下面选择导入已有仓库，然后填入github地址以后，仓库名会自动变成github仓库名，所以又需要你自己去上面改一次</em><br> <br></p><ul><li><p>点击 创建，等待gitee自动导入github仓库。</p><br></li><li><p>导入完成如图配置<br><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/gitee_blog2.jpg" alt="配置gitee pages"></p></li></ul><p> <em>注意点：</em><br> <em>1.选择使用Https，否则会跨域</em></p><p> 以上步骤就完成了，你的博客地址为：{个人地址名}.gitee.io，以后要同步github的数据，只需要这样操作：<br> <img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/gitee_blog3.jpg" alt="同步"></p><hr><h2 id="同步上传"><a href="#同步上传" class="headerlink" title="同步上传"></a>同步上传</h2><p> 我用的hexo，在 <code>_config.yml</code> 文件：</p><pre class="line-numbers language-json"><code class="language-json"> deploy<span class="token operator">:</span>  type<span class="token operator">:</span> git  repo<span class="token operator">:</span>     github<span class="token operator">:</span> https<span class="token operator">:</span>//github.com/tanghaojie/tanghaojie.github.io.git    gitee<span class="token operator">:</span> https<span class="token operator">:</span>//gitee.com/Jackie_Tang/Jackie_Tang.git  branch<span class="token operator">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 加两个repo就好</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中华人民共和国省级行政区域界线标注的小tip</title>
      <link href="/2020/04/01/provincial-boundary/"/>
      <url>/2020/04/01/provincial-boundary/</url>
      
        <content type="html"><![CDATA[<p>如果大段以河道（或其他水体）为省界的，全部以实线标注会影响河流水体的连续呈现时，则用断续线表示。<br>如晋陕、晋豫黄河省界段，川藏、川滇（东段）长江省界段。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>我本人没有找到这个规定的出处，是否是国家规范不做保证。<br>但是百度地图现在看已经是这样做标注了。<br><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/provincialBoundary.jpg" alt="川藏交界"></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> gis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter定位插件location</title>
      <link href="/2020/03/31/flutter-location/"/>
      <url>/2020/03/31/flutter-location/</url>
      
        <content type="html"><![CDATA[<p>iOS没测试，Android需要用到GMS来辅助定位，所以国内不能用！不能用！！不能用！！！</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
          <category> location </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> location </tag>
            
            <tag> 定位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter加载地图的几种方式对比[测试]</title>
      <link href="/2020/03/31/flutter-load-map/"/>
      <url>/2020/03/31/flutter-load-map/</url>
      
        <content type="html"><![CDATA[<p>1.<a href="https://pub.dev/packages/flutter_map" target="_blank" rel="noopener">flutter_map</a>：Leaflet用 Flutter的实现，主要用于加载瓦片地图和简单注记，复杂的几何要素可以用插件的形式，但要自己实现代码。没有自带定位的功能，要自己处理。综合来看，只用瓦片地图，定位这些基础功能的话，可以选这个，团队强大的话，复杂功能也可以自己搞插件。天花板挺高的。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/flutter_map.jpg" alt="flutter_map，自己加了定位"></p><p>2.<a href="https://pub.dev/packages/webview_flutter" target="_blank" rel="noopener">webview_flutter</a>：fluter官方出品的webview插件，没什么好说的，网页能干的事他都能干。最大的问题是目前还是预览版，官方说因为用了新的机制，具体什么机制我也没看，能不能实现官方没说，deadline也没说，有点不让人放心。</p><p>3.<a href="https://pub.dev/packages/flutter_webview_plugin" target="_blank" rel="noopener">flutter_webview_plugin</a>：网上综合推荐比较多的一个插件了，就是调用native webview，稳定性，兼容性肯定没问题。但是由于接入原生，导致webview始终在最上层，会覆盖在所有 Flutter widget之上，灵活性牺牲很大。最新的说明里写了，要把这个插件合并到上面提到的官方插件里面去了。所以基本上不用选了。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/webviewplugin.jpg" alt="flutter_webview_plugin,注意右上角debug标识都被覆盖了"></p><p>4.其他库：比如说高德amap，百度地图，这类就局限平台了。</p><hr><p>目前就测试了这几种地图使用方式，总的来说，有团队，有时间，能自己研发的，可以上。不然的话还是用混合开发吧，flutter还需要给他些时间来成熟。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
          <category> map </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> map </tag>
            
            <tag> webview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter Doctor：Android license status unknown</title>
      <link href="/2020/03/27/post/"/>
      <url>/2020/03/27/post/</url>
      
        <content type="html"><![CDATA[<p>执行：</p><pre><code>flutter doctor --android-licenses</code></pre><p>之后一路同意就好了。</p><p>如果显示：</p><pre><code>&gt; Android sdkmanager tool not found (PATH)</code></pre><p>1.打开Android SDK Manager<br>2.选SDK Tools<br>3.把下面的，Hide Obsolete Packages，取消勾选<br>4.打勾Android SDK Tools (Obsolete)<br>5.确定安装</p><p>Flutter团队知道这个问题，官方建议就是这么处理，后续版本会解决的。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> Android </tag>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office2016零售版转VOL版</title>
      <link href="/2020/03/19/office2016ToVol/"/>
      <url>/2020/03/19/office2016ToVol/</url>
      
        <content type="html"><![CDATA[<p>以下代码复制为：.bat文件</p><pre class="line-numbers language-shell"><code class="language-shell">@ECHO OFF&PUSHD %~DP0setlocal EnableDelayedExpansion&color 3e & cd /d "%~dp0"title office2016 retail转换vol版%1 %2mshta vbscript:createobject("shell.application").shellexecute("%~s0","goto :runas","","runas",1)(window.close)&goto :eof:runasif exist "%ProgramFiles%\Microsoft Office\Office16\ospp.vbs" cd /d "%ProgramFiles%\Microsoft Office\Office16"if exist "%ProgramFiles(x86)%\Microsoft Office\Office16\ospp.vbs" cd /d "%ProgramFiles(x86)%\Microsoft Office\Office16":WHclsecho.echo 选择需要转化的office版本序号echo.echo --------------------------------------------------------------------------------echo 1. 零售版 Office Pro Plus 2016 转化为VOL版echo.echo 2. 零售版 Office Visio Pro 2016 转化为VOL版echo.echo 3. 零售版 Office Project Pro 2016 转化为VOL版echo.echo. --------------------------------------------------------------------------------set /p tsk="请输入需要转化的office版本序号【回车】确认（1-3）: "if not defined tsk goto:errif %tsk%==1 goto:1if %tsk%==2 goto:2if %tsk%==3 goto:3:errgoto:WH:1clsecho 正在安装 KMS 许可证...for /f %%x in ('dir /b ..\root\Licenses16\proplusvl_kms*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulecho 正在安装 MAK 许可证...for /f %%x in ('dir /b ..\root\Licenses16\proplusvl_mak*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:2clsecho 正在安装 KMS 许可证...for /f %%x in ('dir /b ..\root\Licenses16\visio???vl_kms*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulecho 正在安装 MAK 许可证...for /f %%x in ('dir /b ..\root\Licenses16\visio???vl_mak*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:3clsecho 正在安装 KMS 许可证...for /f %%x in ('dir /b ..\root\Licenses16\project???vl_kms*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulecho 正在安装 MAK 许可证...for /f %%x in ('dir /b ..\root\Licenses16\project???vl_mak*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:eecho.echo 转化完成，按任意键退出！pause >nulexit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>让填写秘钥时，输入 XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue use video.js support flash rtmp</title>
      <link href="/2020/03/12/vueVideo/"/>
      <url>/2020/03/12/vueVideo/</url>
      
        <content type="html"><![CDATA[<p>在Vue中使用video.js，兼容flash视频，研究了一天，简单记录一下。<br>1.包安装</p><pre class="line-numbers language-shell"><code class="language-shell">npm install --save videojsnpm install --save videojs-flash //如果需要用flash的话<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.实现vue-video.vue文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>video ref<span class="token operator">=</span><span class="token string">"videoPlayer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"video-js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>video<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> videojs <span class="token keyword">from</span> <span class="token string">'video.js'</span><span class="token keyword">import</span> <span class="token string">'videojs-flash'</span>                                <span class="token comment" spellcheck="true">// if use flash</span><span class="token keyword">import</span> SWF_PATH <span class="token keyword">from</span> <span class="token string">'videojs-swf/dist/video-js.swf'</span>  <span class="token comment" spellcheck="true">// if use flash</span><span class="token keyword">import</span> <span class="token string">'video.js/dist/video-js.min.css'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>      type<span class="token punctuation">:</span> Object<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      player<span class="token punctuation">:</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>flash <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>           <span class="token comment" spellcheck="true">// if use flash</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>flash<span class="token punctuation">.</span>swf <span class="token operator">=</span> SWF_PATH <span class="token comment" spellcheck="true">// if use flash</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> <span class="token function">videojs</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>videoPlayer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.使用</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>vue<span class="token operator">-</span>video <span class="token punctuation">:</span>options<span class="token operator">=</span><span class="token string">"videoOptions"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> vueVideo <span class="token keyword">from</span> <span class="token string">'./path/to/vue-video.vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span>    vueVideo  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// videoOptions标准参考 https://docs.videojs.com/</span>      videoOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        autoplay<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        controls<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        language<span class="token punctuation">:</span> <span class="token string">'zh'</span><span class="token punctuation">,</span>        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>        height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>        sources<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            src<span class="token punctuation">:</span> <span class="token string">'rtmp://*************/live/qq'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'rtmp/flv'</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// techOrder: ['flash']</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>rtmp、mp4已测试没有问题，其他格式就没测试了。<br>需要发布才能进行测试，类似file://C:/test.html这种文件形式的是无法使用的</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> video.js </tag>
            
            <tag> rtmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postgis和EntityFrameworkCore的关系映射，几何字段映射</title>
      <link href="/2019/12/12/entityframeworkcorewithpostgis/"/>
      <url>/2019/12/12/entityframeworkcorewithpostgis/</url>
      
        <content type="html"><![CDATA[<p><code>这篇文章主要讨论Code First模式，其他模式我不怎么用的，不敢保证</code></p><p>  现在搞开发数据库操作基本上都用Orm了吧，但是我们搞GIS的，因为涉及到空间几何字段、空间拓扑运算操作的情况，很多时候传统的Orm就解决不了了，所以很多时候要么就直接用odbc原生Sql操作了；或者是业务部分EF+空间几何Sql这么来操作。这两个方案实现起来确实没什么问题，但前者用起来实在麻烦，很多简单的东西就搞复杂了，要么统一封装一下的话就又回到Orm的路子上；后者是最灵活的一种方案了，任何需求都可以用这个办法来解决，但问题就是整个软件的框架会显得很混乱，新人来了经常问为啥要这样搞，思维切换起来很麻烦，如果要改需求还涉及到空间几何的话，那只能打一架好了…</p><p>  之前的DotnetFramework+Npgsql+EF是不支持使用PostGIS扩展的，官方一直也没明确表态后续规划什么的，直到最近在github上看到开发者说以后应该不会支持了，会把重心放到EF Core上。因此，想要直接映射几何字段几乎变成了不可能的事情。</p><blockquote><p><em>网上有用SharpMap做映射的解决方案，但是我一直没有测试成功过</em><br><em>官方的数据类型映射表里面也写了System.Data.Spatial.DbGeometry可以映射到Geometry类型。这个能在CodeFirst下识别，但生成的字段类型并不是Geometry，而是Byte[]，我也不知道哪错了，诶</em></p></blockquote><p>  直到最近我打算把平台切换到.NetCore，然后去研究了一下，整个人就豁然开朗了啊。1.微软官方明确表态实现几何类型的字段。2.Npgsql的Core版本确实在实现Postgis的东西，而且进度神速。那么，就用呗~</p><p>依赖很简单，就两个包：</p><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span>Npgsql<span class="token punctuation">.</span>EntityFrameworkCore<span class="token punctuation">.</span>PostgreSQL2<span class="token punctuation">.</span>Npgsql<span class="token punctuation">.</span>EntityFrameworkCore<span class="token punctuation">.</span>PostgreSQL<span class="token punctuation">.</span>NetTopologySuite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后是配置，首先数据库里面要启用Postgis，简单：<code>Create Extension Postgis;</code><br>EFCore框架：</p><pre class="line-numbers language-csharp"><code class="language-csharp">dbContextOptions<span class="token punctuation">.</span><span class="token function">UseNpgsql</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">,</span> o <span class="token operator">=</span><span class="token operator">></span> o<span class="token punctuation">.</span><span class="token function">UseNetTopologySuite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这在哪自己找一下</span><span class="token comment" spellcheck="true">//这在你的DbContext里面</span><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">void</span> <span class="token function">OnModelCreating</span><span class="token punctuation">(</span>ModelBuilder builder<span class="token punctuation">)</span><span class="token punctuation">{</span>    builder<span class="token punctuation">.</span><span class="token function">HasPostgresExtension</span><span class="token punctuation">(</span><span class="token string">"postgis"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//启用postgis扩展，需要手动写扩展名也是有原因的哦</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>齐活了，就这么简单。<br>使用的话就很简单了：</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> NetTopologySuite<span class="token punctuation">.</span>Geometries<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestGeometry</span><span class="token punctuation">{</span>  <span class="token punctuation">[</span><span class="token function">Column</span><span class="token punctuation">(</span>TypeName <span class="token operator">=</span> <span class="token string">"geometry (MultiLineString)"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//可以指定类型、维度、坐标系</span>  <span class="token keyword">public</span> MultiLineString Geom <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有了这个后续的操作就简单多了：</p><pre class="line-numbers language-csharp"><code class="language-csharp">Geom<span class="token punctuation">.</span>Area <span class="token comment" spellcheck="true">//面积</span>Geom<span class="token punctuation">.</span><span class="token function">AsBinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//转wkb</span>Geom<span class="token punctuation">.</span><span class="token function">AsText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//同ToString()，转wkt</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就不一一列举了，官方文档很全面的。</p><p><strong>* 补充一下其他的坑吧，转 .Net Core以后，Gdal会成为一个很大的问题，这个需要好好的评估一下，Gdal目前还没有官方做Core的适配，这个影响挺大的。当然Gdal的功能也有相应各个独立的库能替换的，但始终不会像Gdal这么得心应手，一定要注意评估这一点！！！ *</strong></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> gis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gis </tag>
            
            <tag> entityframework </tag>
            
            <tag> .net core </tag>
            
            <tag> postgis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站收录</title>
      <link href="/2019/10/12/website/"/>
      <url>/2019/10/12/website/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://experiments.withgoogle.com/" target="_blank" rel="noopener">Google探索实验室</a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地理信息相关标准</title>
      <link href="/2019/10/12/gisstandard/"/>
      <url>/2019/10/12/gisstandard/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.opengeospatial.org/standards" target="_blank" rel="noopener">OGC</a><blockquote><p>开放地理空间信息联盟(Open Geospatial Consortium),是一个非盈利的国际标准组织，它制定了数据和服务的一系列标准，GIS厂商按照这个标准进行开发可保证空间数据的互操作。</p></blockquote></li></ol><hr><ol start="2"><li><a href="https://spatialreference.org/" target="_blank" rel="noopener">Spatial reference</a><blockquote><p>坐标系统收录、查询、上传、教育。</p></blockquote></li></ol><hr><ol start="3"><li><a href="https://gdal.org/" target="_blank" rel="noopener">GDal</a><blockquote><p>GDAL(Geospatial Data Abstraction Library)是一个在X/MIT许可协议下的开源栅格空间数据转换库。它利用抽象数据模型来表达所支持的各种文件格式。它还有一系列命令行工具来进行数据转换和处理。OGR是GDAL项目的一个分支，功能与GDAL类似，只不过它提供对矢量数据的支持。</p></blockquote></li></ol><hr><ol start="4"><li><a href="http://epsg.io/" target="_blank" rel="noopener">epsg</a><blockquote><p>全球坐标系统</p></blockquote></li></ol><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> gis </category>
          
          <category> tips </category>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> gis </tag>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地理地图数据提供网站</title>
      <link href="/2019/10/12/gisdatawebsites/"/>
      <url>/2019/10/12/gisdatawebsites/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.osgeo.cn/data/" target="_blank" rel="noopener">OSGeo中国</a><blockquote><p>开放地理空间信息科学：技术、数据、知识共享。</p></blockquote></li></ol><hr><ol start="2"><li><a href="http://spatialhadoop.cs.umn.edu/index.html" target="_blank" rel="noopener">spatial hadoop</a><blockquote><p>一个为空间数据设计的map reduce框架，有很多超大的数据集提供下载。</p></blockquote></li></ol><hr><ol start="3"><li><a href="http://www.webmap.cn/main.do?method=index" target="_blank" rel="noopener">全国地理信息资源目录服务</a><blockquote><p>国家基础地理信息中心提供的资源查询和下载服务。</p></blockquote></li></ol><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> gis </category>
          
          <category> tips </category>
          
          <category> website </category>
          
          <category> data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> gis </tag>
            
            <tag> website </tag>
            
            <tag> data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些好玩的地理网站</title>
      <link href="/2019/10/12/gisForFunWebsites/"/>
      <url>/2019/10/12/gisForFunWebsites/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.openstreetmap.org" target="_blank" rel="noopener">Open Street Map</a><blockquote><p>人人都可编辑的世界地图，一个网上地图协作计划的产物。</p></blockquote></li></ol><hr><ol start="2"><li><a href="https://lines.chromeexperiments.com" target="_blank" rel="noopener">Land Lines</a><blockquote><p>Google Creative Lab 提交的一个 Chrome Experiments 项目，基于深度学习。</p></blockquote></li></ol><hr><ol start="3"><li><a href="https://geoguessr.com/" target="_blank" rel="noopener">GeoGuessr</a><blockquote><p>这是一个真实的「情景判断游戏」。开局就是随便把玩家落在 Google 街景中的某一处，你可以在街景地图中一路游走，然后根据周遭信息，判断出身处何处。</p></blockquote></li></ol><hr><ol start="4"><li><a href="https://experiments.withgoogle.com/chrome/globe" target="_blank" rel="noopener">The WebGL Globe</a><blockquote><p>The WebGL Globe 是一个使数据地理可视化的平台。利用这个项目提供的开源代码，我们可以制作属于自己的数据地球。在项目网站上有不少网友提交的实验，根据人口变化、火山活动、各地维基百科篇目等方方面面的数据产生不同的可视化地球。</p></blockquote></li></ol><hr><ol start="5"><li><a href="https://ojack.github.io/ghost-map/" target="_blank" rel="noopener">Ghost Map</a><blockquote><p>Ghost Map收录了各个城市的街道路线，将其隐藏在黑暗中。通过移动鼠标，光亮像细流入川一般流淌到附近街道上，灯火明亮，车水马龙，勾勒出这座城市的建筑与街道规划。当鼠标指针停止移动，万物歇息，一切又沉入黑暗。</p></blockquote></li></ol><hr><ol start="6"><li><a href="https://snazzymaps.com" target="_blank" rel="noopener">SNAZZY MAPS</a><blockquote><p>在线Google Maps配图。自带多种风格自由选择，而且都可以自定义。</p></blockquote></li></ol><hr><ol start="7"><li><a href="http://pixelmap.amcharts.com/" target="_blank" rel="noopener">Pixel Map</a><blockquote><p>在线像素地图生成。</p></blockquote></li></ol><hr><ol start="8"><li><a href="http://www.dituhui.com/" target="_blank" rel="noopener">地图慧</a><blockquote><p>在线地图制作，上传自己的数据，可以做热力图、流向图等等各种专题地图。</p></blockquote></li></ol><hr><ol start="9"><li><a href="https://stamen.com" target="_blank" rel="noopener">stamen</a><blockquote><p>地图与制图、数据可视化。</p></blockquote></li></ol><hr><ol start="10"><li><a href="https://www.mapbox.com/" target="_blank" rel="noopener">Map Box</a><blockquote><p>在线地图制图。</p></blockquote></li></ol><hr><ol start="11"><li><a href="http://mapstack.stamen.com/" target="_blank" rel="noopener">Map Stack</a><blockquote><p>使设计地图免费,简单,有趣。</p></blockquote></li></ol><hr><ol start="12"><li><a href="https://cadmapper.com/" target="_blank" rel="noopener">CAD Mapper</a><blockquote><p>cad su 等格式的模型下载。</p></blockquote></li></ol><hr><ol start="13"><li><a href="https://www.ageeye.cn/" target="_blank" rel="noopener">发现中国</a><blockquote><p>中国历史地图、古地图。</p></blockquote></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> gis </category>
          
          <category> tips </category>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> gis </tag>
            
            <tag> website </tag>
            
            <tag> fun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>News</title>
      <link href="/2019/10/11/News/"/>
      <url>/2019/10/11/News/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-C#"><code class="language-C#">var x = 0;var y=1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><p>版权声明：</p><h2 id="除非注明，本博文章均为原创，转载请以链接形式标明本文地址。"><a href="#除非注明，本博文章均为原创，转载请以链接形式标明本文地址。" class="headerlink" title="除非注明，本博文章均为原创，转载请以链接形式标明本文地址。"></a>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>

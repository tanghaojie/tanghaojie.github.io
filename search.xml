<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>3D Tiles样式数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-styling-specification/"/>
      <url>/2021/04/23/3d-tiles-styling-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification/Styling" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles批处理表(Batch Table)数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-batch-table-specification/"/>
      <url>/2021/04/23/3d-tiles-batch-table-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/BatchTable" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles要素表(Feature Table)数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-feature-table-specification/"/>
      <url>/2021/04/23/3d-tiles-feature-table-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/FeatureTable" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles复合对象(Composite)数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-composite-specification/"/>
      <url>/2021/04/23/3d-tiles-composite-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/Composite" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles点云(Point Cloud)数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-point-cloud-specification/"/>
      <url>/2021/04/23/3d-tiles-point-cloud-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/PointCloud" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles实例3D模型(Instanced 3D Model)数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-instanced-3d-model-specification/"/>
      <url>/2021/04/23/3d-tiles-instanced-3d-model-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/Instanced3DModel" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles批处理3D模型 (Batched 3D Model)数据格式标准规范</title>
      <link href="/2021/04/23/3d-tiles-batched-3d-model-specification/"/>
      <url>/2021/04/23/3d-tiles-batched-3d-model-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p><a href="https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Batched3DModel" target="_blank" rel="noopener">官网文档</a></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文章中超链接打开方式target修改</title>
      <link href="/2021/04/23/artical-a-target-default/"/>
      <url>/2021/04/23/artical-a-target-default/</url>
      
        <content type="html"><![CDATA[<p><a id="reference-1" name="reference-1"></a></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><code>hexo-theme-matery</code>主题默认配置了所有链接都是从新窗口中打开，但自己写的文章锚点，我们肯定希望直接页面内直接跳转就行了，否则的话打开的页面就太多了。</p><hr><p><a id="reference-2" name="reference-2"></a></p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>修改配置的话，在<code>/themes/hexo-theme-matery/source/js/matery.js</code>这个文件下面的：</p><pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token comment" spellcheck="true">/*文章内容详情的一些初始化特性*/</span>  <span class="token keyword">let</span> articleInit <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#articleContent a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'_blank'</span><span class="token punctuation">)</span>   <span class="token operator">...</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="reference-3" name="reference-3"></a></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><p>修改这里的<code>_blank</code>到<code>_self</code>，就可以把默认配置从<code>新页面打开</code>修改为<code>当前页打开</code>了。</p><p>但是修改默认值这种方式会影响到全局，可能引入不必要的错误，所以这里推荐一种更好用的方式。</p><p>在下面添加一行，写上：</p><pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token comment" spellcheck="true">/*文章内容详情的一些初始化特性*/</span>  <span class="token keyword">let</span> articleInit <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#articleContent a'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'_blank'</span><span class="token punctuation">)</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#articleContent a.self'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'target'</span><span class="token punctuation">,</span> <span class="token string">'_self'</span><span class="token punctuation">)</span>   <span class="token operator">...</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之前写的文章会继续按照默认的方式运行，如果想在当前页内跳转的话，就使用 <code>&lt;a class="self" href="跳转的地址"&gt;跳转按钮&lt;/a&gt;</code>，这样的写法，重点是<code>class="self"</code>，就会在当前页内跳转了。</p><hr><p><a id="reference-4" name="reference-4"></a></p><h2 id="如何设置锚点"><a href="#如何设置锚点" class="headerlink" title="如何设置锚点"></a>如何设置锚点</h2><p>设置锚点的话，就是在你想跳转到的地方，插入：</p><pre><code>&lt;a id="自己取一个唯一的名字作为id" name="和左边id里面填写一样的值"&gt;&lt;/a&gt;</code></pre><p>其实设置锚点，只用设置<code>&lt;a&gt;</code>标签里面<code>name</code>属性的值，但是 HTML4.0 修改了标准，任何标签添加了<code>id</code>属性以后，都可以作为锚点来使用。但是注意：matery 主题用其他任意标签设置锚点是能够自动跳转的，但是由于解析后的大小问题，样式有一些问题。所以还是建议使用<code>a</code>标签作为锚点，但同时设置<code>id</code>和<code>name</code>属性来保证兼容性。</p><hr><p><a id="reference-5" name="reference-5"></a></p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><em>当前文章目录</em></p><ul><li><a class="self none-decoration" href="#reference-1"><code>问题（页内跳转）</code></a></li><li><a class="self none-decoration" href="#reference-2"><code>原理（页内跳转）</code></a></li><li><a class="self none-decoration" href="#reference-3"><code>优化（页内跳转）</code></a></li><li><a class="none-decoration" href="#reference-4"><code>如何设置锚点（打开新页面）</code></a></li><li><a class="none-decoration" href="#reference-5"><code>例子（打开新页面）</code></a></li></ul><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>glTF 数据格式标准规范</title>
      <link href="/2021/04/23/glTF-specification/"/>
      <url>/2021/04/23/glTF-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p>glTF (GL Transmission Format) 的创建目的，是为 3D 内容工具和服务定义了一种可扩展的通用发布格式。</p><p><a href="https://github.com/KhronosGroup/glTF/tree/master/specification" target="_blank" rel="noopener">官网文档</a></p><p><em>注意：glTF 已经有版本分支了</em></p><h2 id="To-do"><a href="#To-do" class="headerlink" title="To do"></a>To do</h2><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>3D Tiles数据格式标准规范</title>
      <link href="/2021/04/21/3d-tiles-specification/"/>
      <url>/2021/04/21/3d-tiles-specification/</url>
      
        <content type="html"><![CDATA[<h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><ul><li><p><a href="#写在前面" class="self">写在前面</a></p></li><li><p><a href="#引子glTF" class="self">引子 glTF</a></p></li><li><p><a href="#简介" class="self">简介</a></p></li><li><p><a href="#文件扩展名和MIME类型" class="self">文件扩展名和 MIME 类型</a></p></li><li><p><a href="#JSON编码" class="self">JSON 编码</a></p></li><li><p><a href="#URIs" class="self">URIs</a></p></li><li><p><a href="#单位" class="self">单位</a></p></li><li><p><a href="#坐标参考系统（CRS）" class="self">坐标参考系统（CRS）</a></p></li><li><p><a href="#概念" class="self">概念</a></p><ul><li><p><a href="#Tiles" class="self">Tiles</a></p><ul><li><a href="#几何误差（Geometric error）" class="self">几何误差（Geometric error）</a></li><li><a href="#细化/优化（Refinement）" class="self">细化/优化（Refinement）</a></li><li><a href="#边界盒/边界体（Boundingvolumes）" class="self">边界盒/边界体（Bounding Volumes）</a><ul><li><a href="#边界盒（Box）" class="self">边界盒（Box）</a></li><li><a href="#边界球（Sphere）" class="self">边界球（Sphere）</a></li><li><a href="#边界区（Region）" class="self">边界区（Region）</a></li></ul></li><li><a href="#观察请求盒/体（Viewerrequestvolume）" class="self">观察请求盒/体（Viewer Request Volume）</a></li><li><a href="#变换（Transforms）" class="self">变换（Transforms）</a><ul><li><a href="#瓦片变换（Tiletransforms）" class="self">瓦片变换（Tile Transforms）</a></li><li><a href="#glTF变换（glTFtransforms）" class="self">glTF 变换（glTF Transforms）</a></li><li><a href="#实例" class="self">实例</a></li></ul></li><li><a href="#瓦片JSON" class="self">瓦片 JSON</a></li></ul></li><li><p><a href="#TilesetJSON" class="self">Tileset JSON</a></p><ul><li><a href="#外部数据集（Externaltilesets）" class="self">外部数据集（External Tilesets）</a></li><li><a href="#边界体空间连续性（Boundingvolumespatialcoherence）" class="self">边界体空间连续性（Bounding volume spatial coherence）</a></li><li><a href="#空间数据结构（Spatialdatastructures）" class="self">空间数据结构（Spatial data structures）</a><ul><li><a href="#四叉树（Quadtrees）" class="self">四叉树（Quadtrees）</a></li><li><a href="#K-d树（K-dtrees，K维树）" class="self">K-d 树（K-dtrees，K 维树）</a></li><li><a href="#八叉树（Octrees）" class="self">八叉树（Octrees）</a></li><li><a href="#网格（Grids）" class="self">网格（Grids）</a></li></ul></li></ul></li><li><p><a href="#扩展和附加功能" class="self">扩展和附加功能</a></p><ul><li><a href="#扩展" class="self">扩展</a></li><li><a href="#附加功能" class="self">附加功能</a></li></ul></li></ul></li><li><p><a href="#瓦片格式规范" class="self">瓦片格式规范</a></p></li><li><p><a href="#声明式样式规范" class="self">声明式样式规范</a></p></li><li><p><a href="#属性参考" class="self">属性参考</a></p></li></ul><hr><p><a id="写在前面" name="写在前面"></a></p><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>经常要用 3D Tiles 数据格式，官方文档只有英文的版本，看官网文档对于我这个英渣来说太慢太费时了，还是中文看着最顺眼。故准备翻译归纳总结一个中文版的 3D Tiles 数据格式规范，留着以后查询使用。</p><p>有疑问、异议的地方，还是建议去官网文档看原版的更加准确。</p><p><a href="https://github.com/CesiumGS/3d-tiles/tree/master/specification" target="_blank" rel="noopener">3D Tiles 官网文档</a></p><p>写到这的时候，官网文档的版本：<em><code>Version 1.0, June 6th, 2018</code></em></p><hr><p><a id="引子glTF" name="引子glTF"></a></p><h2 id="引子-glTF"><a href="#引子-glTF" class="headerlink" title="引子 glTF"></a>引子 glTF</h2><p>3D Tiles 规范重点在于解决三维模型 Tile（瓦片、切片）的问题，实际模型是基于 glTF 来构建的，所以了解 3D Tiles 就要先了解 glTF。</p><p>glTF (GL Transmission Format) 的创建目的，是为 3D 内容工具和服务定义了一种可扩展的通用发布格式。具体规范又是一大片文章了，这里先埋坑了，后面再补。</p><p><a href="/2021/04/23/glTF-specification">glTF 数据格式标准规范</a></p><p><em>注意：glTF 已经有版本分支了</em></p><hr><p><a id="简介" name="简介"></a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>3D Tiles 专为流式传输和渲染大量 3D 地理空间内容而设计，例如摄影测量、3D 建筑、BIM / CAD、要素实例和点云。它定义了分层的数据结构和一组可传递渲染内容的切片格式。3D Tiles 没有为可视化的内容明确的定义规则。客户可以视其需要可视化 3D Tiles 的数据。</p><p>在 3D Tiles 中，tileset 是按空间数据结构（tree）组织的一组瓦片(Tile)。tileset 是由至少一个 tileset JSON 文件构成，包括 tileset 元数据和 瓦片(Tile) 对象树，其中每个可渲染内容对象都是以下格式之一：</p><table><thead><tr><th align="center">格式</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center"><a href="/2021/04/23/3d-tiles-batched-3d-model-specification">批处理 3D 模型 (Batched 3D Model (b3dm))</a></td><td align="center">异构 3D 模型。例如带纹理的地形和表面，3D 建筑外部和内部，大型模型。</td></tr><tr><td align="center"><a href="/2021/04/23/3d-tiles-instanced-3d-model-specification">实例 3D 模型 (Instanced 3D Model (i3dm))</a></td><td align="center">3D 模型实例。例如树木，风车，螺栓。</td></tr><tr><td align="center"><a href="/2021/04/23/3d-tiles-point-cloud-specification">点云 (Point Cloud (pnts))</a></td><td align="center">大量的点。</td></tr><tr><td align="center"><a href="/2021/04/23/3d-tiles-composite-specification">复合对象 (Composite (cmpt))</a></td><td align="center">将不同格式的图块合并为一个图块。</td></tr></tbody></table><p>瓦片(Tile)（瓦片格式的一个单独实例）是一个二进制 blob，具有特定的组件格式，包括<a href="/2021/04/23/3d-tiles-feature-table-specification">要素表(Feature Table)</a>和<a href="/2021/04/23/3d-tiles-batch-table-specification">批处理表(Batch Table)</a>。</p><p>内容引用了一组要素，例如表示建筑物/树木的 3D 模型或点云中的点。每个要素的位置和外观属性都存储在瓦片(Tile)的要素表(Feature Table)中，额外附加或应用特定（additional application-specific）的属性存储在批处理表(Batch Table)中。客户端可以在运行时选择要素，并获取其属性以进行可视化或分析。</p><p>批处理 3D 模型(Batched 3D Model)和实例 3D 模型(Instanced 3D Model)格式基于 <a href="/2021/04/23/glTF-specification">glTF</a> 构建，glTF 是一个为高效传输 3D 内容而设计的开放规范。这些格式的瓦片内容嵌入 glTF 资源的二进制主体中，其中包含模型几何和纹理信息。点云格式未嵌入 glTF。</p><p>瓦片(Tile)以树形结构组织，其中结合了详细层次结构（HLOD：Hierarchical Level of Detail）的概念，以实现空间数据的最佳渲染呈现。每个图块都有一个边界盒（bounding volume），即一个对象，该对象定义了一个完全包围其内容的空间范围。树具有<a href="#边界体空间连续性（Boundingvolumespatialcoherence）" class="self">空间连贯性</a>; 子瓦片的内容完整的包含在父级的边界盒之内。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/tree.png" alt=""></p><p>切片集可以使用类似于栅格和矢量切片（如 Web 地图切片服务（WMTS）或 XYZ 方案）的 2D 空间切片方案，该二维空间切片方案以多级别（LOD）（或缩放级别）提供预定义的切片。但是，由于切片集的内容通常是不一致的，很难仅在二维上组织，因此树可以是具有空间一致性的任何<a href="#空间数据结构（Spatialdatastructures）" class="self">空间数据结构</a>，包括 k-d 树，四叉树，八叉树和网格。</p><p>可选地，可以将<a href="/2021/04/23/3d-tiles-styling-specification">3D Tiles 样式</a>或 style 应用于 tileset。样式由表达式来定义其中的每一个要素显示方式。</p><hr><p><a id="文件扩展名和MIME类型" name="文件扩展名和MIME类型"></a></p><h2 id="文件扩展名和-MIME-类型"><a href="#文件扩展名和-MIME-类型" class="headerlink" title="文件扩展名和 MIME 类型"></a>文件扩展名和 MIME 类型</h2><p>3D Tiles 使用以下文件扩展名和 MIME 类型。</p><ul><li>Tileset 文件使用 <code>.json</code> 扩展名和 <code>application/json</code> MIME 类型。</li><li>切片内容文件使用特定于其切片格式<a href="#瓦片格式规范" class="self">规范的文件类型</a>和 MIME 格式。</li><li>Tileset 样式文件使用 <code>.json</code> 扩展名和 <code>application/json</code> MIME 类型。<br>显式文件扩展名是可选的。有效的实现可能会忽略它，并通过其头中的 <code>magic</code> 字段标识内容的格式。</li></ul><hr><p><a id="JSON编码" name="JSON编码"></a></p><h2 id="JSON-编码"><a href="#JSON-编码" class="headerlink" title="JSON 编码"></a>JSON 编码</h2><p>3D Tiles 对 JSON 格式和编码具有以下限制。</p><ol><li>JSON 必须使用没有 BOM 的 UTF-8 编码。</li><li>本规范中定义的所有字符串（属性名称，枚举）仅使用 ASCII 字符集，并且必须以纯文本形式编写。</li><li>JSON 对象中的名称（键）必须唯一，即不允许重复的键。</li></ol><hr><p><a id="URIs" name="URIs"></a></p><h2 id="URIs"><a href="#URIs" class="headerlink" title="URIs"></a>URIs</h2><p>3D Tiles 使用 URI 来引用 tile 内容。这些 URI 可以指向相对外部引用（<a href="https://tools.ietf.org/html/rfc3986#section-4.2" target="_blank" rel="noopener">RFC3986</a>），也可以是将资源嵌入 JSON 的数据 URI。嵌入式资源使用“数据” URI 方案（<a href="https://tools.ietf.org/html/rfc2397" target="_blank" rel="noopener">RFC2397</a>）。</p><p>如果 URI 是相对的，则其根始终相对于引用的 tileet JSON 文件。</p><p>客户端实现需要支持相对的外部引用和嵌入式资源。可选地，客户端实现可以支持其他方案（例如 http://）。所有 URI 必须有效且可解析。</p><hr><p><a id="单位" name="单位"></a></p><h2 id="单位"><a href="#单位" class="headerlink" title="单位"></a>单位</h2><p>所有线性距离的单位是米。</p><p>所有角度均以弧度为单位。</p><hr><p><a id="坐标参考系统（CRS）" name="坐标参考系统（CRS）"></a></p><h2 id="坐标参考系统（CRS）"><a href="#坐标参考系统（CRS）" class="headerlink" title="坐标参考系统（CRS）"></a>坐标参考系统（CRS）</h2><p>3D Tiles 使用右手笛卡尔坐标系；也就是说，x 和 y 的叉积得出 z。3D Tiles 将 z 轴定义为局部笛卡尔坐标系的上方向。一个数据集的全局坐标系通常位于 <a href="http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf" target="_blank" rel="noopener">WGS 84</a> 以地球为中心，固定于地球（ECEF）的参考系（<a href="http://spatialreference.org/ref/epsg/4978/" target="_blank" rel="noopener">EPSG 4978</a>）中，但不必须如此，例如，一个发电厂可以定义在其局部坐标系内，而不使用空间数据内容，仅仅使用模型工具。</p><p>可以应用额外的<a href="#变换（Transforms）" class="self">数据变换（tile transform）</a>来将瓦片的局部坐标系变换为父瓦片的坐标系。</p><p><a href="#边界区（Region）" class="self">边界区（Region）</a>使用地理坐标系（纬度，经度，高度）指定边界，详情 <a href="http://spatialreference.org/ref/epsg/4979/" target="_blank" rel="noopener">EPSG 4979</a>。</p><hr><p><a id="概念" name="概念"></a></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><a id="Tiles" name="Tiles"></a></p><h3 id="Tiles"><a href="#Tiles" class="headerlink" title="Tiles"></a>Tiles</h3><p>瓦片(Tiles)由元数据组成，用于定义瓦片(tile)是否渲染，可渲染内容的引用，以及子瓦片的数组。</p><hr><p><a id="几何误差（Geometric error）" name="几何误差（Geometric error）"></a></p><h4 id="几何误差（Geometric-error）"><a href="#几何误差（Geometric-error）" class="headerlink" title="几何误差（Geometric error）"></a>几何误差（Geometric error）</h4><p>瓦片是树形结构合并构成的详细层次结构<code>Hierarchical Level of Detail (HLOD)</code>，以便客户端在运行时实现 瓦片 是否完全渲染 ， 以及瓦片的内容是否应由高质量的子瓦片来依次完成。一种实现是考虑最大屏幕允许空间误差<code>Screen-Space Error (SSE)</code>，该误差以像素为单位。</p><p>瓦片的几何误差定义了该瓦片的选择指标。它的值是一个非负数，来指定瓦片几何图形的最简化表示时的误差（单位：米）。根图块是源几何图形的最简化版本，其几何误差最大。然后，每个连续级别的子级将具有比其父级低的几何误差，而叶子图块的几何误差为 0 或接近 0。</p><p>在客户端实现中，几何误差与其他屏幕空间指标一起使用（例如，瓦片到相机的距离，屏幕大小和分辨率），以计算当瓦片被渲染而子瓦片不需要渲染时需要引入的几何误差（SSE）。如果引入的几何误差（SSE）超过了所允许的最大值，则将优化瓦片并考虑渲染其子级。</p><p>几何误差是根据诸如点密度，米为单位的瓦片大小，或该图块特有的其他因素之类的度量标准制定的。通常，较高的几何误差意味着更积极地细化图块，并且将更快地加载和渲染子图块。</p><hr><p><a id="细化/优化（Refinement）" name="细化/优化（Refinement）"></a></p><h4 id="细化-优化（Refinement）"><a href="#细化-优化（Refinement）" class="headerlink" title="细化/优化（Refinement）"></a>细化/优化（Refinement）</h4><p>优化决定了较低分辨率的父瓦片被选择渲染的子级时渲染的过程。允许的细化类型为<code>替换（"REPLACE"）</code>和<code>添加（"ADD"）</code>。如果瓦片具有“替换”的细化配置，则将渲染子瓦片代替父瓦片，即不再渲染父瓦片。如果瓦片具有“添加”的细化配置，则除了父瓦片之外，还将渲染子瓦片。</p><p>区块集可以仅使用替换优化，仅添加改进或添加和替换优化的任意组合。</p><p>Tileset 的根图块需要细化类型；对于所有其他磁贴，它是可选的。如果省略，则 tile 会继承其父级的优化类型。</p><hr><p><a id="边界盒/边界体（Boundingvolumes）" name="边界盒/边界体（Boundingvolumes）"></a></p><h4 id="边界盒-边界体（Bounding-volumes）"><a href="#边界盒-边界体（Bounding-volumes）" class="headerlink" title="边界盒/边界体（Bounding volumes）"></a>边界盒/边界体（Bounding volumes）</h4><p>边界盒定义了包围图块或图块内容的空间范围。为了支持各种数据集的紧密拟合体积，例如规则划分的地形，未与纬度或经度线对齐的城市，或任意点云，边界盒类型包括有向边界框，边界球，和由最小、最大纬度，经度和高度定义的边界区。</p><hr><p><a id="边界盒（Box）" name="边界盒（Box）"></a></p><h5 id="边界盒（Box）"><a href="#边界盒（Box）" class="headerlink" title="边界盒（Box）"></a>边界盒（Box）</h5><p><code>boundingVolume.box</code>属性是由 12 个数字组成的数组，在右手 3 轴（x，y，z）笛卡尔坐标系中定义的一个有向包围盒，其中 z 轴是。前三个元素定义框中心的 x，y 和 z 值。接下来的三个元素（索引为 3、4 和 5）定义了 x 轴方向和一半长度（half-length）。接下来的三个元素（索引 6、7 和 8）定义 y 轴方向和一半长度（half-length）。最后三个元素（索引 9、10 和 11）定义 z 轴方向和一半长度（half-length）。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/BoundingBox.jpg" alt=""></p><pre class="line-numbers language-json"><code class="language-json"><span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token property">"box"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token number">10</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="边界球（Sphere）" name="边界球（Sphere）"></a></p><h5 id="边界球（Sphere）"><a href="#边界球（Sphere）" class="headerlink" title="边界球（Sphere）"></a>边界球（Sphere）</h5><p><code>boundingVolume.sphere</code>属性是由 4 个数字组成的数组定义的边界球。前三个元素在右手 3 轴（x，y，z）笛卡尔坐标系中定义球体中心的 x，y 和 z 值，其中 z 轴朝上。最后一个元素（索引为 3）以米为单位定义半径。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/BoundingSphere.jpg" alt=""></p><pre class="line-numbers language-json"><code class="language-json"><span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token property">"sphere"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token number">141.4214</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="边界区（Region）" name="边界区（Region）"></a></p><h5 id="边界区（Region）"><a href="#边界区（Region）" class="headerlink" title="边界区（Region）"></a>边界区（Region）</h5><p><code>boundingVolume.region</code>属性是一个由 6 个数字组成的数组，定义了由纬度，经度和高度坐标的地理边界区，使用<code>[west, south, east, north, minimum height, maximum height]</code>的顺序。纬度和经度是在 <a href="http://spatialreference.org/ref/epsg/4979/" target="_blank" rel="noopener">EPSG 4979</a> 中定义的 WGS 84 基准，以弧度表示。高度在 <a href="http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf" target="_blank" rel="noopener">WGS 84 椭球</a>上方（或下方）以米为单位。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/BoundingRegion.jpg" alt=""></p><pre class="line-numbers language-json"><code class="language-json"><span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token property">"region"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    -<span class="token number">1.3197004795898053</span><span class="token punctuation">,</span>    <span class="token number">0.6988582109</span><span class="token punctuation">,</span>    -<span class="token number">1.3196595204101946</span><span class="token punctuation">,</span>    <span class="token number">0.6988897891</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">20</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="观察请求盒/体（Viewerrequestvolume）" name="观察请求盒/体（Viewerrequestvolume）"></a></p><h4 id="观察请求盒-体（Viewer-request-volume）"><a href="#观察请求盒-体（Viewer-request-volume）" class="headerlink" title="观察请求盒/体（Viewer request volume）"></a>观察请求盒/体（Viewer request volume）</h4><p>瓦片的 观察请求盒/体（Viewer request volume） 可以用于组合异构数据集，也可以与外部数据集组合。</p><p>以下示例是一个在<code>b3dm</code>瓦片中的建筑物，并在建筑物中包含了在<code>pnts</code>瓦片中的点云。点云瓦片的<code>boundingVolume</code>是半径为 <code>1.25</code> 的边界球。它还有一个更大的，半径为 <code>15</code> 的<code>viewerRequestVolume</code>边界球配置。由于 <code>geometricError</code> 值为零，因此当观察者位于由<code>viewerRequestVolume</code>所定义的大的边界球内时，始终会渲染点云的内容。</p><p>简单来说，<code>viewerRequestVolume</code>是一个比<code>boundingVolume</code>优先级更高的显示配置，当视角进入<code>viewerRequestVolume</code>中是，瓦片就会显示，就不必须通过<code>boundingVolume</code>和<code>geometricError</code>来配置了。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      <span class="token property">"transform"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token number">4.843178171884396</span><span class="token punctuation">,</span>        <span class="token number">1.2424271388626869</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        -<span class="token number">0.7993325488216595</span><span class="token punctuation">,</span>        <span class="token number">3.1159251367235608</span><span class="token punctuation">,</span>        <span class="token number">3.8278032889280675</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">0.9511533376784163</span><span class="token punctuation">,</span>        -<span class="token number">3.7077466670407433</span><span class="token punctuation">,</span>        <span class="token number">3.2168186118075526</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">1215001.7612985559</span><span class="token punctuation">,</span>        -<span class="token number">4736269.697480114</span><span class="token punctuation">,</span>        <span class="token number">4081650.708604793</span><span class="token punctuation">,</span>        <span class="token number">1</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"box"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.701</span><span class="token punctuation">,</span> <span class="token number">3.738</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.72</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">13.402</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>      <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"building.b3dm"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      <span class="token property">"transform"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token number">0.968635634376879</span><span class="token punctuation">,</span>        <span class="token number">0.24848542777253732</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        -<span class="token number">0.15986650990768783</span><span class="token punctuation">,</span>        <span class="token number">0.6231850279035362</span><span class="token punctuation">,</span>        <span class="token number">0.7655606573007809</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">0.19023066741520941</span><span class="token punctuation">,</span>        -<span class="token number">0.7415493329385225</span><span class="token punctuation">,</span>        <span class="token number">0.6433637229384295</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">1215002.0371330238</span><span class="token punctuation">,</span>        -<span class="token number">4736270.772726648</span><span class="token punctuation">,</span>        <span class="token number">4081651.6414821907</span><span class="token punctuation">,</span>        <span class="token number">1</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token property">"viewerRequestVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"sphere"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"sphere"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1.25</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"points.pnts"</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="变换（Transforms）" name="变换（Transforms）"></a></p><h4 id="变换（Transforms）"><a href="#变换（Transforms）" class="headerlink" title="变换（Transforms）"></a>变换（Transforms）</h4><p><a id="瓦片变换（Tiletransforms）" name="瓦片变换（Tiletransforms）"></a></p><h5 id="瓦片变换（Tile-transforms）"><a href="#瓦片变换（Tile-transforms）" class="headerlink" title="瓦片变换（Tile transforms）"></a>瓦片变换（Tile transforms）</h5><p>为了支持局部坐标系（例如，可以在城市数据集内部加载自定义坐标系的建筑数据集，并建筑数据集内部加载自定义坐标系的点云数据集），每个数据都有可选的<code>transform</code>属性。</p><p><code>transform</code> 属性是一个 4x4 仿射变换矩阵（affine transformation matrix），以列优先顺序存储，从数据的本地坐标系转换到父数据的坐标系，或者到数据集根数据的变换。</p><blockquote><p><em>*仿射变换：保持原来的线共点、点共线的关系不变，保持原来相互平行的线仍然平行，保持原来的中点仍然是中点，保持原来在一条直线上各个线段之间的比例关系不变。但是仿射变换不能保持原来的线段长度不变，也不能保持原来的夹角角度不变。</em></p></blockquote><p><code>transform</code>属性适用于</p><ul><li><code>tile.content</code><ul><li>每个要素的位置。</li><li>每个要素的法线均应通过逆转置的左上 3x3 矩阵进行变换，以在使用 scale 时 transform 考虑正确的矢量变换。（Each feature’s normal should be transformed by the top-left 3x3 matrix of the inverse-transpose of transform to account for <a href="http://www.realtimerendering.com/resources/RTNews/html/rtnews1a.html#art4" target="_blank" rel="noopener">correct vector transforms when scale is used</a>.）</li><li><code>tile.boundingVolume</code>，但 <code>tile.boundingVolume.region</code> 类型定义除外，该类型以 EPSG：4979 坐标系为准。</li></ul></li><li><code>tile.boundingVolume</code>，但 <code>tile.boundingVolume.region</code> 类型定义除外，该类型以 EPSG：4979 坐标系为准。</li><li><code>tile.viewerRequestVolume</code>，但 <code>tile.viewerRequestVolume.region</code> 类型定义除外，该类型以 EPSG：4979 坐标系为准。</li></ul><p><code>transform</code>属性不适用于<code>geometricError</code>，例如，由<code>transform</code>定义的比例缩放(scale)不会缩放几何误差的值，几何误差始终以米为单位定义。</p><p>当<code>transform</code>没有定义，则默认为单位矩阵：</p><pre><code>[  1.0, 0.0, 0.0, 0.0,  0.0, 1.0, 0.0, 0.0,  0.0, 0.0, 1.0, 0.0,  0.0, 0.0, 0.0, 1.0]</code></pre><p>从每个数据的局部坐标系到数据集全局坐标系的转换是通过对数据集自上而下的遍历，将子<code>transform</code>和父<code>transform</code>进行后乘（post-multiplying）运算得到的（例如计算机图形学中的传统场景图或节点层次结构）。</p><hr><p><a id="glTF变换（glTFtransforms）" name="glTF变换（glTFtransforms）"></a></p><h5 id="glTF-变换（glTF-transforms）"><a href="#glTF-变换（glTF-transforms）" class="headerlink" title="glTF 变换（glTF transforms）"></a>glTF 变换（glTF transforms）</h5><p><a href="/2021/04/23/3d-tiles-batched-3d-model-specification">批处理 3D 模型（Batched 3D Model）</a>和<a href="/2021/04/23/3d-tiles-instanced-3d-model-specification">实例 3D 模型（Instanced 3D Model）</a> 数据嵌入在 glTF 中，glTF 有其自己的节点层次结构，并使用 y 轴朝上的坐标系。所有指定于数据（a tile format）和<code>tile.transform</code>属性的转换都会被应用。</p><hr><p><strong>glTF 节点层次结构（glTF node hierarchy）</strong></p><p>首先，根据<a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#transformations" target="_blank" rel="noopener">glTF 规范</a>应用 glTF 节点层次结构转换。</p><hr><p><strong>y 轴向上到 z 轴向上</strong></p><p>接下来，为了与 3D Tiles 坐标系的 z 轴保持一致，必须在运行时将 glTF 从 y 轴朝上转换为 z 轴朝上。这是通过将模型绕 x 轴旋转 π/ 2 弧度来完成的。等效地，应用以下矩阵变换（此处为行优先顺序）：</p><pre><code>[  1.0, 0.0,  0.0, 0.0,  0.0, 0.0, -1.0, 0.0,  0.0, 1.0,  0.0, 0.0,  0.0, 0.0,  0.0, 1.0]</code></pre><p>总的来说，变换的顺序为：</p><ol><li>glTF 节点层次结构（glTF node hierarchy）</li><li>y 轴向上到 z 轴向上</li><li>任何数据类型特定的变换。<ul><li>批处理 3D 模型要素表可以定义<code>RTC_CENTER</code>用于转换模型的顶点。</li><li>实例化 3D 模型要素表定义了每个实例的位置，法线和比例。用于创建按实例的 4x4 仿射变换矩阵，来应用于每个实例。</li></ul></li><li>瓦片变换</li></ol><blockquote><p>实现说明：使用固定的 z 轴向上的源数据，例如 WGS 84 坐标或 z 轴向上自定义坐标系中的数据源时，常见的工作流程是：<br>包括位置和法线的表面数据（Mesh data）不做修改，仍保持 z 向上。<br>根节点矩阵指定了列优先的从到 z 轴向上到 y 轴向上的变换。y 轴向上的 glTF 坐标系要求使用此类变化。<br>在运行时，glTF 被上面的变换转回。转换抵消了。（At runtime the glTF is transformed back from y-up to z-up with the matrix above. Effectively the transforms cancel out.）<br>glTF 根节点示例：</p><pre><code>"nodes": [ {   "matrix": [1,0,0,0,0,0,-1,0,0,1,0,0,0,0,0,1],   "mesh": 0,   "name": "rootNode" }]</code></pre></blockquote><hr><p><a id="实例" name="实例"></a></p><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><p>为数据集计算变换的例子：</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/tileTransform.png" alt=""></p><p>每个 Tile 的变换为：</p><ul><li><code>TO</code>: <code>[T0]</code></li><li><code>T1</code>: <code>[T0][T1]</code></li><li><code>T2</code>: <code>[T0][T2]</code></li><li><code>T3</code>: <code>[T0][T1][T3]</code></li><li><code>T4</code>: <code>[T0][T1][T4]</code></li></ul><p>在变换之前， Tile 内容中的位置和法线也可以有 Tile 指定的转换来应用，（之前表示应用仿射变换之前）。例：</p><ul><li><code>b3dm</code>和<code>i3dm</code>嵌入 glTF，glTF 定义了自己的节点层次结构和坐标系。<code>tile.transform</code>在这些变换之后执行。</li><li><code>i3dm</code>的要素表定义了每个实例的位置，法线和比例。用于每个实例按照 4x4 仿射变换矩阵创建，这些变换在<code>tile.transform</code>之前。</li><li>压缩的属性，如<code>i3dm</code>和<code>pnts</code>要素表中的<code>POSITION_QUANTIZED</code>，<code>pnts</code>中的<code>NORMAL_OCT16P</code>会在应用任何其他变换之前被解压缩。</li></ul><p>因此，以上示例的完整计算转换为：</p><ul><li><code>TO</code>: <code>[T0]</code></li><li><code>T1</code>: <code>[T0][T1]</code></li><li><code>T2</code>: <code>[T0][T2][pnts-specific transform, including RTC_CENTER (if defined)]</code></li><li><code>T3</code>: <code>[T0][T1][T3][b3dm-specific transform, including RTC_CENTER (if defined), coordinate system transform, and glTF node hierarchy]</code></li><li><code>T4</code>: <code>[T0][T1][T4][i3dm-specific transform, including per-instance transform, coordinate system transform, and glTF node hierarchy]</code></li></ul><hr><p><a id="瓦片JSON" name="瓦片JSON"></a></p><h4 id="瓦片-JSON"><a href="#瓦片-JSON" class="headerlink" title="瓦片 JSON"></a>瓦片 JSON</h4><p>瓦片 JSON 对象由以下属性组成。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/tile.png" alt=""></p><p>以下示例展示了一个非叶子瓦片。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"region"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      -<span class="token number">1.2419052957251926</span><span class="token punctuation">,</span>      <span class="token number">0.7395016240301894</span><span class="token punctuation">,</span>      -<span class="token number">1.2415404171917719</span><span class="token punctuation">,</span>      <span class="token number">0.7396563300150859</span><span class="token punctuation">,</span>      <span class="token number">0</span><span class="token punctuation">,</span>      <span class="token number">20.4</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">43.88464075650763</span><span class="token punctuation">,</span>  <span class="token property">"refine"</span> <span class="token operator">:</span> <span class="token string">"ADD"</span><span class="token punctuation">,</span>  <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"region"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        -<span class="token number">1.2418882438584018</span><span class="token punctuation">,</span>        <span class="token number">0.7395016240301894</span><span class="token punctuation">,</span>        -<span class="token number">1.2415422846940714</span><span class="token punctuation">,</span>        <span class="token number">0.7396461198389616</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">19.4</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"2/0/0.b3dm"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>...<span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>boundingVolume</code>定义瓦片的封闭体，并且被用来确定哪些瓦片在运行时进行渲染。上面的示例使用一个<code>region</code>边界体，也可以使用<a href="#边界盒/边界体（Boundingvolumes）" class="self">其他边界体</a>，例如<code>box</code>或<code>sphere</code>。</p><p><code>geometricError</code>属性是一个非负数，用于定义误差（以米为单位），用来决定渲染此瓦片但不渲染其子瓦片。在运行时，几何误差用于计算屏幕空间误差（SSE），即以像素为单位的误差。SSE 确定某个瓦片是否对于当前视图足够详细，或者是否应考虑渲染其子视图。详见<a href="#几何误差（Geometric error）" class="self">几何误差</a>。</p><p>可选<code>viewerRequestVolume</code>属性（上面未显示）使用与<code>boundingVolume</code>配置参数，在执行瓦片内容的请求前，观察者位于<code>viewerRequestVolume</code>内，并且<code>viewerRequestVolume</code>优先于<code>geometricError</code>。详见<a href="#观察请求盒/体（Viewerrequestvolume）" class="self">观察请求盒/体</a>。</p><p><code>refine</code> 属性是一个字符串，用<code>"REPLACE"</code>或<code>"ADD"</code>。数据集（tileset）的根图块需要设置；对于其他瓦片，它是可选的。数据集可以使用<code>添加</code>和<code>替换</code>的任意组合。<code>refine</code> 省略该属性时，从父瓦片继承的。详见<a href="#细化/优化（Refinement）" class="self">细化/优化</a>。</p><p><code>content</code> 属性是一个对象，其中包含有关瓦片渲染内容的元数据。 <code>content.uri</code> 是一个 uri，指向瓦片的二进制内容（<a href="#瓦片格式规范" class="self">规范的文件类型</a>），或另一个数据集 JSON 以创建数据集(tileset)的数据集(tileset)（<a href="#外部数据集（Externaltilesets）" class="self">外部数据集</a>）。</p><p><code>content.uri</code>中的文件扩展名不是必须的。瓦片内容格式由文件头中的<code>magic</code>字段指定，或者为 JSON，将其指定为外部数据集。</p><p><code>content.boundingVolume</code>属性定义一个可选的<a href="#边界盒/边界体（Boundingvolumes）" class="self">边界体</a>，类似于顶级的<code>boundingVolume</code>属性。但是与顶级<code>boundingVolume</code>属性不同，<code>content.boundingVolume</code>是一个包裹瓦片内容的紧密封闭的包围体。<code>boundingVolume</code>提供空间连续性，<code>content.boundingVolume</code>实现严格地视图视锥剔除（view frustum culling），排除可能不在视域范围内的内容。如果未定义，则瓦片的边界体仍用于剔除（请参见<a href="#网格（Grids）" class="self">网格</a>）。</p><p>下面的截图显示了 Canary Wharf 的根图块的边界体积。 <code>boundingVolume</code> 以红色显示，将整个区域的数据集包围起来；<code>content.boundingVolume</code> 以蓝色显示，仅将根图块中的四个要素（模型）封闭起来。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/contentsBox.png" alt=""></p><p>可选的 <code>transform</code> 属性（上面列出）定义 4×4 的仿射变换矩阵，该矩阵变换瓦片的 <code>content</code>，<code>boundingVolume</code> 和 <code>viewerRequestVolume</code>。</p><p><code>children</code>属性是定义一组子瓦片的对象数组。每个子瓦片的内容都被其父瓦片的<code>boundingVolume</code>完全包围，通常 <code>geometricError</code> 小于其父级的 <code>geometricError</code>。对于叶瓦片，此数组的长度为零，children 可以不定义。请参阅下面的<a href="#TilesetJSON" class="self">Tileset JSON</a>部分。</p><p>完整的 json 定义</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"$schema"</span><span class="token operator">:</span> <span class="token string">"http://json-schema.org/draft-04/schema"</span><span class="token punctuation">,</span>  <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"tile.schema.json"</span><span class="token punctuation">,</span>  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Tile"</span><span class="token punctuation">,</span>  <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"object"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"A tile in a 3D Tiles tileset."</span><span class="token punctuation">,</span>  <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"The bounding volume that encloses the tile."</span><span class="token punctuation">,</span>      <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"boundingVolume.schema.json"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"viewerRequestVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Optional bounding volume that defines the volume the viewer must be inside of before the tile's content will be requested and before the tile will be refined based on geometricError."</span><span class="token punctuation">,</span>      <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"boundingVolume.schema.json"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"number"</span><span class="token punctuation">,</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"The error, in meters, introduced if this tile is rendered and its children are not. At runtime, the geometric error is used to compute screen space error (SSE), i.e., the error measured in pixels."</span><span class="token punctuation">,</span>      <span class="token property">"minimum"</span><span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"refine"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Specifies if additive or replacement refinement is used when traversing the tileset for rendering.  This property is required for the root tile of a tileset; it is optional for all other tiles.  The default is to inherit from the parent tile."</span><span class="token punctuation">,</span>      <span class="token property">"enum"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"ADD"</span><span class="token punctuation">,</span> <span class="token string">"REPLACE"</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"transform"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"array"</span><span class="token punctuation">,</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"A floating-point 4x4 affine transformation matrix, stored in column-major order, that transforms the tile's content--i.e., its features as well as content.boundingVolume, boundingVolume, and viewerRequestVolume--from the tile's local coordinate system to the parent tile's coordinate system, or, in the case of a root tile, from the tile's local coordinate system to the tileset's coordinate system.  transform does not apply to geometricError, nor does it apply any volume property when the volume is a region, defined in EPSG:4979 coordinates."</span><span class="token punctuation">,</span>      <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"number"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"minItems"</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>      <span class="token property">"maxItems"</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>      <span class="token property">"default"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">1.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">0.0</span><span class="token punctuation">,</span>        <span class="token number">1.0</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Metadata about the tile's content and a link to the content. When this is omitted the tile is just used for culling. This is required for leaf tiles."</span><span class="token punctuation">,</span>      <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"tile.content.schema.json"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"array"</span><span class="token punctuation">,</span>      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"An array of objects that define child tiles. Each child tile content is fully enclosed by its parent tile's bounding volume and, generally, has a geometricError less than its parent tile's geometricError. For leaf tiles, the length of this array is zero, and children may not be defined."</span><span class="token punctuation">,</span>      <span class="token property">"items"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"tile.schema.json"</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token property">"uniqueItems"</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"extensions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"extension.schema.json"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"extras"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"$ref"</span><span class="token operator">:</span> <span class="token string">"extras.schema.json"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"required"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"boundingVolume"</span><span class="token punctuation">,</span> <span class="token string">"geometricError"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"additionalProperties"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="TilesetJSON" name="TilesetJSON"></a></p><h3 id="Tileset-JSON"><a href="#Tileset-JSON" class="headerlink" title="Tileset JSON"></a>Tileset JSON</h3><p>3D Tiles 使用一个主 tileset JSON 文件作为定义数据集（Tileset）的入口。入口和外部 tileset JSON 文件都不需要遵循任何命名规则。</p><p>这是一个 tileset JSON 的数据集</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"asset"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0"</span><span class="token punctuation">,</span>    <span class="token property">"tilesetVersion"</span><span class="token operator">:</span> <span class="token string">"e575c6f1-a45b-420a-b172-6449fa6e0a59"</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"properties"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"Height"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"minimum"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>      <span class="token property">"maximum"</span><span class="token operator">:</span> <span class="token number">241.6</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">494.50961650991815</span><span class="token punctuation">,</span>  <span class="token property">"root"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"region"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        -<span class="token number">0.0005682966577418737</span><span class="token punctuation">,</span>        <span class="token number">0.8987233516605286</span><span class="token punctuation">,</span>        <span class="token number">0.00011646582098558159</span><span class="token punctuation">,</span>        <span class="token number">0.8990603398325034</span><span class="token punctuation">,</span>        <span class="token number">0</span><span class="token punctuation">,</span>        <span class="token number">241.6</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">268.37878244706053</span><span class="token punctuation">,</span>    <span class="token property">"refine"</span><span class="token operator">:</span> <span class="token string">"ADD"</span><span class="token punctuation">,</span>    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"0/0/0.b3dm"</span><span class="token punctuation">,</span>      <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"region"</span><span class="token operator">:</span> <span class="token punctuation">[</span>          -<span class="token number">0.0004001690908972599</span><span class="token punctuation">,</span>          <span class="token number">0.8988700116775743</span><span class="token punctuation">,</span>          <span class="token number">0.00010096729722787196</span><span class="token punctuation">,</span>          <span class="token number">0.8989625664878067</span><span class="token punctuation">,</span>          <span class="token number">0</span><span class="token punctuation">,</span>          <span class="token number">241.6</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"children"</span><span class="token operator">:</span> <span class="token punctuation">[</span>..<span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Tilset JSON 有四个顶级属性：<code>asset</code>，<code>properties</code>，<code>geometricError</code>，和<code>root</code>。</p><p><code>asset</code> 是一个包含有关整个数据集的元数据对象。<code>asset.version</code> 属性是一个定义 3D Tiles 版本的字符串，指定 tilset 的 JSON 模式和基本的 tile 格式。 <code>tilesetVersion</code> 属性是一个可选字符串，用于定义特定应用程序的 tileset 版本，例如，表示 tilset 是否被更新。</p><p><code>properties</code> 是一个对象，包含数据集中每个要素属性。这个 tileet JSON 代码段适用于 3D 建筑物，因此每个瓦片均具有建筑物模型，并且每个建筑物模型均具有 Height 属性（详见<a href="/2021/04/23/3d-tiles-batch-table-specification">批处理表(Batch Table)</a>）。<code>properties</code>中的名称与每个要素的属性名称匹配，其定义 minimum 和 maximum 的数字值，这些值对于创建样式色带非常有用。</p><p><code>geometricError</code> 是一个非负数，用于定义误差（以米为单位），该值确定是否渲染图块。在运行时，几何误差用于计算屏幕空间误差（SSE），即以像素为单位的误差。如果 SSE 不超过所需的最小值，则不会渲染数据集，并且不会对其瓦片进行渲染。详见<a href="#几何误差（Geometric error）" class="self">几何误差（Geometric error）</a>。</p><p><code>root</code> 是一个使用上一节中描述的瓦片 JSON 定义根图块的对象。<code>root.geometricError</code>与 tilset 顶级的<code>geometricError</code>不同。<code>geometricError</code>在运行时根据 SSE 决定根瓦片是否渲染;<code>root.geometricError</code>在运行时根据 SSE 决定根瓦片的子集是否渲染。</p><hr><p><a id="外部数据集（Externaltilesets）" name="外部数据集（Externaltilesets）"></a></p><h4 id="外部数据集（External-tilesets）"><a href="#外部数据集（External-tilesets）" class="headerlink" title="外部数据集（External tilesets）"></a>外部数据集（External tilesets）</h4><p>创建树的子节点，数据的<code>content.uri</code>可以指向一个外部数据集（另一个 数据集 JSON 文件的 uri）。例如，可以将每个城市存储在一个数据集中，然后组成一个全球数据集。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/tilesets.png" alt=""></p><p>当瓦片指向外部数据集时，瓦片：</p><ul><li>不能有子级；<code>tile.children</code> 必须为 <code>undefined</code> 或空数组。</li><li>不能有循环，例如，通过指向包含该图块的同一图块文件或指向另一个图块集文件，然后再指向包含该图块的初始文件，来创建循环。</li><li>会同时通过瓦片的 <code>transform</code> 和根瓦片的<code>transform</code>进行变换。例如，在下面的数据集引用外部数据集，<code>T3</code> 计算变换为 <code>[T0][T1][T2][T3]</code>。</li></ul><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/tileTransformExternalTileset.png" alt=""></p><hr><p><a id="边界体空间连续性（Boundingvolumespatialcoherence）" name="边界体空间连续性（Boundingvolumespatialcoherence）"></a></p><h4 id="边界体空间连续性（Bounding-volume-spatial-coherence）"><a href="#边界体空间连续性（Bounding-volume-spatial-coherence）" class="headerlink" title="边界体空间连续性（Bounding volume spatial coherence）"></a>边界体空间连续性（Bounding volume spatial coherence）</h4><p>如上所述，树具有空间连贯性。每个瓦片都有一个完全包围其内容的边界体，子瓦片的内容完全位于父级的边界体之内。但这并不意味着子级的边界体完全在其父级的边界体之内。例如：</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/parentBoundingSphere.jpg" alt="地形数据的边界球"></p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/childBoundingSphere.jpg" alt="4个子瓦片的边界球。子级的内容完全在父级的边界球之内，但是子项的边界球并不在父级的边界球内，因为它们不紧密适配。"></p><hr><p><a id="空间数据结构（Spatialdatastructures）" name="空间数据结构（Spatialdatastructures）"></a></p><h4 id="空间数据结构（Spatial-data-structures）"><a href="#空间数据结构（Spatial-data-structures）" class="headerlink" title="空间数据结构（Spatial data structures）"></a>空间数据结构（Spatial data structures）</h4><p>3D Tiles 结合了详细层次结构（HLOD）的概念，以实现空间数据的最佳呈现。数据集由树结构组成，由<code>root</code>定义，并递归其<code>children</code>瓦片组成，并可以按不同类型的空间数据结构进行组织。</p><p>运行时引擎是通用的，可以渲染 tilset 定义的任何树。任意组合的瓦片格式和优化（refinement）方法组合都可以使用，从而可以灵活地支持异构数据集。详见<a href="#细化/优化（Refinement）" class="self">细化/优化（Refinement）</a>。</p><p>数据集可以使用类似于栅格和矢量切片方案的 2D 空间切片方案（例如 Web 地图切片服务（WMTS）或 XYZ 方案），该二维空间切片方案以多级别（LOD）（或缩放级别）提供预定义的切片。但是，由于数据集的内容通常是不一致的，或者可能不容易仅在二维上组织，因此其他空间数据结构可能更理想。</p><p>下面包括对 3D Tiles 如何表示各种空间数据结构的简要说明。</p><hr><p><a id="四叉树（Quadtrees）" name="四叉树（Quadtrees）"></a></p><h5 id="四叉树（Quadtrees）"><a href="#四叉树（Quadtrees）" class="headerlink" title="四叉树（Quadtrees）"></a>四叉树（Quadtrees）</h5><p>当每个瓦片具有四个统一细分的子级（例如，使用中心纬度和经度）时，将创建一个四叉树，类似于典型的 2D 地理空间切片方案。空的子图块可以省略。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/quadtree.png" alt="传统四叉树细分"></p><p>3D Tiles 可以使用四叉树变体，例如非均匀细分和非紧密的边界体（例如，与边界不同，对稀疏数据集来说，父级的 25％是浪费的）。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/quadtree-tight.png" alt="四叉树，子级有更紧密的边界"></p><p>3D Tiles 还支持其他四叉树变形，例如<a href="http://www.tulrich.com/geekstuff/partitioning.html" target="_blank" rel="noopener">松散四叉树</a>，其中子瓦片相互重叠，但仍保持空间连贯性，即，父瓦片完全包围了其所有子级。这种方法对于避免在瓦片之间分割要素（例如 3D 模型）很有用。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/quadtree-overlap.png" alt="不均匀且重叠的四叉树。"></p><hr><p><a id="K-d树（K-dtrees，K维树）" name="K-d树（K-dtrees，K维树）"></a></p><h5 id="K-d-树（K-d-trees，K-维树）"><a href="#K-d-树（K-d-trees，K-维树）" class="headerlink" title="K-d 树（K-d trees，K 维树）"></a>K-d 树（K-d trees，K 维树）</h5><p>当瓦片具有两个由平行于 x，y 或 z 轴（或纬度，经度，高度）的分割面分隔的子代时，会创建 kd 树。随着树级别的递增，拆分轴通常是循环旋转的（可以参考平衡 K-d 树理解），可以选择中位数，表面积启发法（surface area heuristics）或其他方法来选择拆分平面。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/kdtree.png" alt="k-d树示例，非均匀切分"></p><p>注意，k-d 树不像典型的 2D 地理空间切片方案那样具有统一的均匀细分，因此可以为稀疏和非均匀分布的数据集创建更加平衡的树。</p><p>3D Tiles 支持 k-d 树变体，例如<a href="http://www.crs4.it/vic/cgi-bin/bib-page.cgi?id=%27Goswami:2013:EMF%27" target="_blank" rel="noopener">多路 kd 树</a>，其中树的每个叶子上有多个拆分轴。这样就有<code>n</code>个子级，而不是每个瓦片有两个。</p><hr><p><a id="八叉树（Octrees）" name="八叉树（Octrees）"></a></p><h5 id="八叉树（Octrees）"><a href="#八叉树（Octrees）" class="headerlink" title="八叉树（Octrees）"></a>八叉树（Octrees）</h5><p>八叉树通过扩展四叉树使用三个正交拆分平面将图块细分为八个子级。像四叉树一样，3D Tiles 允许对八叉树变体，例如不均匀的细分，非紧密的边界体和重叠的子代。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/octree.png" alt="传统八叉树细分"></p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/pointcloud-octree.jpg" alt="使用添加模式优化（additive refinement）"></p><hr><p><a id="网格（Grids）" name="网格（Grids）"></a></p><h5 id="网格（Grids）"><a href="#网格（Grids）" class="headerlink" title="网格（Grids）"></a>网格（Grids）</h5><p>3D Tiles 通过支持任意数量的子瓦片来实现均匀，不均匀和重叠的网格。例如，这是剑桥的不均匀重叠网格的俯视图：</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/3d-tiles/grid.png" alt=""></p><p>3D Tiles 利用了空瓦片：那些具有边界体但没有内容的瓦片。由于瓦片的<code>content</code>不必须要被定义的属性，因此可以使用空的非叶子节点的瓦片来分层剔除，以加速非均匀网格。本质上，这会创建一个四叉树或八叉树，而没有层次的详细信息（HLOD）。</p><hr><p><a id="扩展和附加功能" name="扩展和附加功能"></a></p><h3 id="扩展和附加功能"><a href="#扩展和附加功能" class="headerlink" title="扩展和附加功能"></a>扩展和附加功能</h3><p>（Specifying extensions and application specific extras）<br>3D Tiles 定义了扩展，以允许新功能扩展基本规范，包括附加应用程序特定元数据。</p><hr><p><a id="扩展" name="扩展"></a></p><h4 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h4><p>扩展允许使用新功能扩展基本规范。可以将可选的 <code>extensions</code> 字典属性添加到任何 3D Tiles JSON 对象，该对象包含扩展名和扩展特定的对象。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"transform"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token number">4.843178171884396</span><span class="token punctuation">,</span>    <span class="token number">1.2424271388626869</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    -<span class="token number">0.7993325488216595</span><span class="token punctuation">,</span>    <span class="token number">3.1159251367235608</span><span class="token punctuation">,</span>    <span class="token number">3.8278032889280675</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0.9511533376784163</span><span class="token punctuation">,</span>    -<span class="token number">3.7077466670407433</span><span class="token punctuation">,</span>    <span class="token number">3.2168186118075526</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">1215001.7612985559</span><span class="token punctuation">,</span>    -<span class="token number">4736269.697480114</span><span class="token punctuation">,</span>    <span class="token number">4081650.708604793</span><span class="token punctuation">,</span>    <span class="token number">1</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"box"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.701</span><span class="token punctuation">,</span> <span class="token number">3.738</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.72</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">13.402</span><span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>  <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"building.b3dm"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"extensions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"VENDOR_collision_volume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token property">"box"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.8</span><span class="token punctuation">,</span> <span class="token number">3.8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">13.5</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据集或子级的外部数据集中使用的所有扩展，都必须在入口 tileset JSON 的顶级<code>extensionsUsed</code>数组属性中列出，例如：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"extensionsUsed"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"VENDOR_collision_volume"</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>所有扩展中，需要加载和渲染数据集或子级的外部数据集时，也必须在入口 tileset JSON 的顶级<code>extensionsRequired</code>数组属性中列出，<code>extensionsRequired</code>数组是<code>extensionsUsed</code>数组的子级。<code>extensionsRequired</code>中列出的值在<code>extensionsUsed</code>中也必须存在。</p><hr><p><a id="附加功能" name="附加功能"></a></p><h4 id="附加功能"><a href="#附加功能" class="headerlink" title="附加功能"></a>附加功能</h4><p><code>extras</code>属性允许将特定于应用程序的元数据添加到任何 3D Tiles JSON 对象。以下示例显示了一个具有附加应用程序特定名称属性的 tile 对象。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"transform"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token number">4.843178171884396</span><span class="token punctuation">,</span>    <span class="token number">1.2424271388626869</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    -<span class="token number">0.7993325488216595</span><span class="token punctuation">,</span>    <span class="token number">3.1159251367235608</span><span class="token punctuation">,</span>    <span class="token number">3.8278032889280675</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">0.9511533376784163</span><span class="token punctuation">,</span>    -<span class="token number">3.7077466670407433</span><span class="token punctuation">,</span>    <span class="token number">3.2168186118075526</span><span class="token punctuation">,</span>    <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token number">1215001.7612985559</span><span class="token punctuation">,</span>    -<span class="token number">4736269.697480114</span><span class="token punctuation">,</span>    <span class="token number">4081650.708604793</span><span class="token punctuation">,</span>    <span class="token number">1</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"boundingVolume"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"box"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.701</span><span class="token punctuation">,</span> <span class="token number">3.738</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.72</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">13.402</span><span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"geometricError"</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>  <span class="token property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"uri"</span><span class="token operator">:</span> <span class="token string">"building.b3dm"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"extras"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Empire State Building"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="瓦片格式规范" name="瓦片格式规范"></a></p><h2 id="瓦片格式规范"><a href="#瓦片格式规范" class="headerlink" title="瓦片格式规范"></a>瓦片格式规范</h2><p>每个瓦片的<code>content.uri</code>属性可以是 uri 二进制 blob，其中包含用于渲染瓦片的 3D 内容的信息。内容是下表中列出的一种格式的实例。</p><table><thead><tr><th align="center">格式</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center"><a href="/2021/04/23/3d-tiles-batched-3d-model-specification">批处理 3D 模型 (Batched 3D Model (b3dm))</a></td><td align="center">异构 3D 模型。例如带纹理的地形和表面，3D 建筑外部和内部，大型模型。</td></tr><tr><td align="center"><a href="/2021/04/23/3d-tiles-instanced-3d-model-specification">实例 3D 模型 (Instanced 3D Model (i3dm))</a></td><td align="center">3D 模型实例。例如树木，风车，螺栓。</td></tr><tr><td align="center"><a href="/2021/04/23/3d-tiles-point-cloud-specification">点云 (Point Cloud (pnts))</a></td><td align="center">大量的点。</td></tr><tr><td align="center"><a href="/2021/04/23/3d-tiles-composite-specification">复合对象 (Composite (cmpt))</a></td><td align="center">将不同格式的图块合并为一个图块。</td></tr></tbody></table><p>tilset 可以包含 tile 格式的任意组合。3D Tiles 还支持不同格式在一个 Composite 瓦片中的组合。</p><hr><p><a id="声明式样式规范" name="声明式样式规范"></a></p><h2 id="声明式样式规范"><a href="#声明式样式规范" class="headerlink" title="声明式样式规范"></a>声明式样式规范</h2><p>3D Tiles 包含使用 JSON 定义的简洁声明式样式以及用一部分 JavaScript 增强的样式编写表达式。</p><p>样式定义要素如何显示，例如 <code>show</code> 和 <code>color</code>（RGB 和透明度），在要素属性上使用表达式。</p><p>下面的示例将高度超过 90 的要素涂为红色，将其他涂为白色。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"color"</span><span class="token operator">:</span> <span class="token string">"(${Height} > 90) ? color('red') : color('white')"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>更多内容，详见<a href="/2021/04/23/3d-tiles-styling-specification">3D Tiles 样式</a>规范。</p><hr><p><a id="属性参考" name="属性参考"></a></p><h2 id="属性参考"><a href="#属性参考" class="headerlink" title="属性参考"></a>属性参考</h2><ul><li><p><a href="#reference-tileset" class="self"><code>Tileset</code></a></p><ul><li><a href="#reference-asset" class="self"><code>Asset</code></a></li><li><a href="#reference-bounding-volume" class="self"><code>Bounding Volume</code></a></li><li><a href="#reference-extension" class="self"><code>Extension</code></a></li><li><a href="#reference-extras" class="self"><code>Extras</code></a></li><li><a href="#reference-properties" class="self"><code>Properties</code></a></li><li><a href="#reference-tile" class="self"><code>Tile</code></a><ul><li><a href="#reference-tile-content" class="self"><code>Content</code></a></li></ul></li></ul></li></ul><hr><p><a id="reference-tileset" name="reference-tileset"></a></p><h3 id="Tileset"><a href="#Tileset" class="headerlink" title="Tileset"></a>Tileset</h3><p>一个 3D Tiles 数据集。</p><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><table><thead><tr><th></th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td><strong>asset</strong></td><td><code>object</code></td><td>整个数据集的元数据 tileset.</td><td>:white_check_mark: Yes</td></tr><tr><td><strong>properties</strong></td><td><code>any</code></td><td>功能属性的元数据字典对象</td><td>No</td></tr><tr><td><strong>geometricError</strong></td><td><code>number</code></td><td>决定是否渲染此瓦片的误差值，以米为单位。在运行时，用于计算屏幕空间误差（SSE），以像素为单位</td><td>:white_check_mark: Yes</td></tr><tr><td><strong>root</strong></td><td><code>object</code></td><td>3D Tiles 数据集中的一个瓦片</td><td>:white_check_mark: Yes</td></tr><tr><td><strong>extensionsUsed</strong></td><td><code>string</code> <code>[1-*]</code></td><td>在此数据集中某处使用的 3D Tiles 扩展名</td><td>No</td></tr><tr><td><strong>extensionsRequired</strong></td><td><code>string</code> <code>[1-*]</code></td><td>需要加载的数据集的 3D Tiles 扩展名</td><td>No</td></tr><tr><td><strong>extensions</strong></td><td><code>object</code></td><td>具有扩展名的特定对象的字典对象</td><td>No</td></tr><tr><td><strong>extras</strong></td><td><code>any</code></td><td>附加于应用程序的数据</td><td>No</td></tr></tbody></table><p>不允许使用其他属性。</p><hr><p><a id="reference-asset" name="reference-asset"></a></p><h3 id="Asset"><a href="#Asset" class="headerlink" title="Asset"></a>Asset</h3><p>整个数据集的元数据</p><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><table><thead><tr><th></th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td><strong>version</strong></td><td><code>string</code></td><td>3D Tiles 版本。该版本定义了数据集 JSON 的 JSON 模式和瓦片格式的基本集合</td><td>:white_check_mark: Yes</td></tr><tr><td><strong>tilesetVersion</strong></td><td><code>string</code></td><td>此瓦片的特定于应用程序的版本，例如，用于更新现有瓦片的标识</td><td>No</td></tr><tr><td><strong>extensions</strong></td><td><code>object</code></td><td>具有扩展的特定对象的字典对象</td><td>No</td></tr><tr><td><strong>extras</strong></td><td><code>any</code></td><td>应用程序的附加数据</td><td>No</td></tr></tbody></table><p>不允许使用其他属性。</p><hr><p><a id="reference-bounding-volume" name="reference-bounding-volume"></a></p><h3 id="Bounding-Volume"><a href="#Bounding-Volume" class="headerlink" title="Bounding Volume"></a>Bounding Volume</h3><p>包围瓦片或其内容的包围盒。有且需要一个<code>box</code>，<code>region</code>或<code>sphere</code>属性。</p><h4 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h4><table><thead><tr><th></th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td><strong>box</strong></td><td><code>number</code> <code>[12]</code></td><td>由 12 个数字组成的数组，在右手 3 轴（x，y，z）笛卡尔坐标系中定义的一个有向包围盒，其中 z 轴是。前三个元素定义框中心的 x，y 和 z 值。接下来的三个元素（索引为 3、4 和 5）定义了 x 轴方向和一半长度（half-length）。接下来的三个元素（索引 6、7 和 8）定义 y 轴方向和一半长度（half-length）。最后三个元素（索引 9、10 和 11）定义 z 轴方向和一半长度（half-length）</td><td>No</td></tr><tr><td><strong>region</strong></td><td><code>number</code> <code>[6]</code></td><td>由 6 个数字组成的数组，定义了由纬度，经度和高度坐标的地理边界区，使用<code>[west, south, east, north, minimum height, maximum height]</code>的顺序。纬度和经度是在 <a href="http://spatialreference.org/ref/epsg/4979/" target="_blank" rel="noopener">EPSG 4979</a> 中定义的 WGS 84 基准，以弧度表示。高度在 <a href="http://earth-info.nga.mil/GandG/publications/tr8350.2/wgs84fin.pdf" target="_blank" rel="noopener">WGS 84 椭球</a>上方（或下方）以米为单位</td><td>No</td></tr><tr><td><strong>sphere</strong></td><td><code>number</code> <code>[4]</code></td><td>由 4 个数字组成的数组定义的边界球。前三个元素在右手 3 轴（x，y，z）笛卡尔坐标系中定义球体中心的 x，y 和 z 值，其中 z 轴朝上。最后一个元素（索引为 3）以米为单位定义半径</td><td>No</td></tr><tr><td><strong>extensions</strong></td><td><code>object</code></td><td>具有扩展的特定对象的字典对象</td><td>No</td></tr><tr><td><strong>extras</strong></td><td><code>any</code></td><td>应用程序的附加数据</td><td>No</td></tr></tbody></table><p>不允许使用其他属性。</p><hr><p><a id="reference-extension" name="reference-extension"></a></p><h3 id="Extension"><a href="#Extension" class="headerlink" title="Extension"></a>Extension</h3><p>具有扩展的特定对象的字典对象。</p><p>允许其他属性。</p><p>属性类型：<code>object</code></p><hr><p><a id="reference-extras" name="reference-extras"></a></p><h3 id="Extras"><a href="#Extras" class="headerlink" title="Extras"></a>Extras</h3><p>应用程序的附加数据。</p><p>JSON 样式：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"$schema"</span><span class="token operator">:</span> <span class="token string">"http://json-schema.org/draft-04/schema"</span><span class="token punctuation">,</span>  <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Extras"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Application-specific data."</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a id="reference-properties" name="reference-properties"></a></p><h3 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h3><p>功能属性的元数据字典对象。</p><h4 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h4><table><thead><tr><th></th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td><strong>maximum</strong></td><td><code>number</code></td><td>数据集中所有要素此属性的最大值</td><td><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8">✅</span> Yes</td></tr><tr><td><strong>minimum</strong></td><td><code>number</code></td><td>数据集中所有要素此属性的最小值</td><td><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8">✅</span> Yes</td></tr><tr><td><strong>extensions</strong></td><td><code>object</code></td><td>具有扩展的特定对象的字典对象</td><td>No</td></tr><tr><td><strong>extras</strong></td><td><code>any</code></td><td>应用程序的附加数据</td><td>No</td></tr></tbody></table><p>不允许使用其他属性。</p><hr><p><a id="reference-tile" name="reference-tile"></a></p><h3 id="Tile"><a href="#Tile" class="headerlink" title="Tile"></a>Tile</h3><p>3D Tiles 数据集中的一个瓦片。</p><h4 id="属性（上面有一章专门讲这些属性，就不翻译了）"><a href="#属性（上面有一章专门讲这些属性，就不翻译了）" class="headerlink" title="属性（上面有一章专门讲这些属性，就不翻译了）"></a>属性（上面有一章专门讲这些属性，就不翻译了）</h4><table><thead><tr><th></th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td><strong>boundingVolume</strong></td><td><code>object</code></td><td>A bounding volume that encloses a tile or its content. Exactly one <code>box</code>, <code>region</code>, or <code>sphere</code> property is required.</td><td><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8">✅</span> Yes</td></tr><tr><td><strong>viewerRequestVolume</strong></td><td><code>object</code></td><td>A bounding volume that encloses a tile or its content. Exactly one <code>box</code>, <code>region</code>, or <code>sphere</code> property is required.</td><td>No</td></tr><tr><td><strong>geometricError</strong></td><td><code>number</code></td><td>The error, in meters, introduced if this tile is rendered and its children are not. At runtime, the geometric error is used to compute screen space error (SSE), i.e., the error measured in pixels.</td><td><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8">✅</span> Yes</td></tr><tr><td><strong>refine</strong></td><td><code>string</code></td><td>Specifies if additive or replacement refinement is used when traversing the tileset for rendering. This property is required for the root tile of a tileset; it is optional for all other tiles. The default is to inherit from the parent tile.</td><td>No</td></tr><tr><td><strong>transform</strong></td><td><code>number</code> <code>[16]</code></td><td>A floating-point 4x4 affine transformation matrix, stored in column-major order, that transforms the tile’s content–i.e., its features as well as content.boundingVolume, boundingVolume, and viewerRequestVolume–from the tile’s local coordinate system to the parent tile’s coordinate system, or, in the case of a root tile, from the tile’s local coordinate system to the tileset’s coordinate system. transform does not apply to geometricError, nor does it apply any volume property when the volume is a region, defined in EPSG:4979 coordinates.</td><td>No, default: <code>[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]</code></td></tr><tr><td><strong>content</strong></td><td><code>object</code></td><td>Metadata about the tile’s content and a link to the content.</td><td>No</td></tr><tr><td><strong>children</strong></td><td><code>array[]</code></td><td>An array of objects that define child tiles. Each child tile content is fully enclosed by its parent tile’s bounding volume and, generally, has a geometricError less than its parent tile’s geometricError. For leaf tiles, the length of this array is zero, and children may not be defined.</td><td>No</td></tr><tr><td><strong>extensions</strong></td><td><code>object</code></td><td>Dictionary object with extension-specific objects.</td><td>No</td></tr><tr><td><strong>extras</strong></td><td><code>any</code></td><td>Application-specific data.</td><td>No</td></tr></tbody></table><hr><p><a id="reference-tile-content" name="reference-tile-content"></a></p><h3 id="Tile-Content"><a href="#Tile-Content" class="headerlink" title="Tile Content"></a>Tile Content</h3><p>有关瓦片内容和该内容链接的元数据。</p><h4 id="属性-4"><a href="#属性-4" class="headerlink" title="属性"></a>属性</h4><table><thead><tr><th></th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td><strong>boundingVolume</strong></td><td><code>object</code></td><td>包围瓦片或其内容的包围盒。有且需要一个<code>box</code>，<code>region</code>或<code>sphere</code>属性</td><td>No</td></tr><tr><td><strong>uri</strong></td><td><code>string</code></td><td>指向图块内容的 uri。如果 uri 是相对的，则它是相对于引用的 tilset JSON 文件</td><td><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8">✅</span> Yes</td></tr><tr><td><strong>extensions</strong></td><td><code>object</code></td><td>具有扩展的特定对象的字典对象</td><td>No</td></tr><tr><td><strong>extras</strong></td><td><code>any</code></td><td>应用程序的附加数据</td><td>No</td></tr></tbody></table><p>不允许使用其他属性。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 3D Tiles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3D Tiles </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cesium+Vue加载大型场景和大量3DTile数据示例</title>
      <link href="/2021/02/03/cesium-vue-big-model-example/"/>
      <url>/2021/02/03/cesium-vue-big-model-example/</url>
      
        <content type="html"><![CDATA[<p><a href="http://117.139.247.104:60001/jt-earth-cesium-example/" target="_blank" rel="noopener">点击跳转</a></p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2021-04/jt-cesium-vue.jpg" alt="首页"></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网页开启设计模式 &amp;#91 速记 &amp;#93</title>
      <link href="/2021/01/07/web-design-mode/"/>
      <url>/2021/01/07/web-design-mode/</url>
      
        <content type="html"><![CDATA[<p><code>document.designMode = 'off'</code></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>科普-海平面高、GPS高、基准面高的区别和定义</title>
      <link href="/2020/11/25/Mean-SeaLevel-GPS-TheGeoid/"/>
      <url>/2020/11/25/Mean-SeaLevel-GPS-TheGeoid/</url>
      
        <content type="html"><![CDATA[<p>从业这么久了，很多很多（包括行业内）人，根本搞不清楚海平面高、GPS高、基准面高的区别，这里翻译和补充说明一下。</p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>原文出自<a href="https://www.esri.com/news/arcuser/0703/geoid1of3.html" target="_blank" rel="noopener">https://www.esri.com/news/arcuser/0703/geoid1of3.html</a>，我只是进行了翻译和针对国内情况的补充。原文作者：Witold Fraczek, Esri Applications Prototype Lab。以下正文：</p><p>通常，研究和技术的努力会带来意外的积极成果。当欧洲探险家开始寻找通向印度的捷径时，他们发现了新世界。当葡萄球菌细菌培养物被普通霉菌错误地污染时，霉菌和细菌菌落之间的空白区域会得出结论，即霉菌青霉素会产生抑制细菌生长的化合物。这一偶然发现促进了青霉素的发展。</p><p>众所周知，地球上没有完美的几何形状，大地水准面用来描述地球独特且不规则的形状。但是，直到最近（原文发表时间：2003年7月）才观察到由全球平均海平面（MSL：the global mean sea level）造成的海面有更明显的不规则性。这些不规则性比专家的预测高出一个数量级。受地球引力的控制，这些不规则现象形成了非常平缓但又庞大的“丘陵”和“山谷”。这一惊人发现是通过使用GPS来实现的，GPS是美国国防部设计的一项技术，旨在彻底改变美国海军和空军的导航技术。GPS已经做到了，而且还能做到更多。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid1.gif" alt="大地水准面近似于平均海平面。根据假设的等势引力表面计算椭球的形状。该数学模型与实际对象之间存在显着差异。即使是数学上最复杂的大地水准面也只能近似地球的真实形状。"></p><h2 id="什么是平均海平面？"><a href="#什么是平均海平面？" class="headerlink" title="什么是平均海平面？"></a>什么是平均海平面？</h2><p>几代人以来，表达地形或测深标高的唯一方法是将其与海平面相关联。大地测量学家曾经认为，海洋与地球的重力平衡，并形成了完美的规则图形。MSL通常被描述为潮汐数据，它是在特定的19年周期内观察到的每小时水位升高的算术平均值。该定义将月球和太阳引力变化影响引起的潮汐高潮和低潮进行平均。</p><p>MSL定义为局部区域的零海拔。高程引用的零表面称为垂直基准。对于地图制作者来说不幸的是，海平面并不是一个简单的表面。由于海面符合地球的重力场，因此MSL的丘陵和山谷与陆地表面相似，但更平滑。但是，西班牙定义的零海拔与加拿大定义的零海拔不同，这就是为什么本地定义的垂直基准彼此不同的原因。</p><p>MSL表面处于重力平衡状态。它可以看作是在各大洲下延伸，是大地水准面的近似值。根据定义，大地水准面描述了地球的不规则形状，并且是用于测量高程的真正零表面。由于无法直接观察到大地水准面，因此无法直接测量大地水准面上方或下方的高度，并且无法通过进行重力测量和对表面进行数学建模来推断。以前，无法精确测量大地水准面，因此MSL可以粗略地估算它。尽管出于实际目的，假定在海岸线处的大地水准面和MSL表面基本相同，但在某些地点，大地水准面实际上可能与MSL相差几米。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid2.gif" alt="GPS高度测量的准确性取决于几个因素，但最关键的一个因素是地球形状的“不完美”。高度可以通过两种方式测量。GPS使用参考椭圆形上方的高度（h），该高度近似于地球表面。传统的正交高程（H）是称为大地水准面的假想表面上方的高度，它由地球的重力确定并由MSL近似。两个高度之间的有符号差（椭球和大地水准面之间的差）是大地水准面高度（N）。上图显示了不同模型之间的关系，并解释了两者在空间上几乎不匹配的原因。"></p><h2 id="不同的测量值"><a href="#不同的测量值" class="headerlink" title="不同的测量值"></a>不同的测量值</h2><p>GPS改变了任何地点的高度测量方式。GPS在其水平和垂直基准面上均使用椭球坐标系，椭球体或扁平的球体用于表示地球的几何模型。</p><p>从概念上讲，这种精确计算的椭球体（称为扁圆椭球体）旨在复制MSL作为主要的大地测量参考或垂直基准。如果使用此椭球垂直基准，则椭球上方的高度将与MSL不同，并且大多数位置的直接高程读数都将很尴尬。造成这种情况的部分原因是，GPS的海拔高度定义不涉及MSL，而是涉及称为参考椭球的重力表面。由于参考椭球旨在紧密接近MSL，因此当两个数字相差很大时，令人惊讶。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid3.jpg" alt="整体起伏的表面是根据高空观测和从TOPEX / POSEIDON卫星获得的非常精确的测量结果（最多2厘米）计算得出的。该数据用地球大地测量模型（EGM96）表示，该模型也称为地球重力势的球谐模型。"></p><p>TOPEX / POSEIDON卫星于1992年发射，专门设计用于执行非常精确的高空观测。这些测量结果表明，人为误差和GPS错误都不是造成椭球和MSL测量值之间有时存在重大差异的原因。实际上，由地球海平面产生的三维表面在几何上是不正确的，并且无法通过数学方法计算出其明显的不规则性。这解释了基于椭球的GPS高程读数与精确地形图上显示的高程之间的区别。</p><p>对加利福尼亚州雷德兰兹市Esri总部的海拔读数进行了简短检查，就证明了这些差异。坎普斯高程显示在地形四边形地图和高分辨率数字高程模型（DEM）上，该区域位于MSL上方约400米处。但是，对于相同位置的精确测量后，未经调整的GPS读数通常显示海拔为368米。</p><p>为什么相距32米？GPS接收器使用由世界大地测量系统（WGS84）椭球估计的理论海平面，它并不完全遵循理论MSL。用椭圆形近似的MSL与重力或地球的质心有关。WGS84椭球和大地水准面之间的差异随位置而异。继续此示例，尤卡帕（Yucaipa）（位于雷德兰兹以东不到10英里的城市）的海拔读数相差31.5米。</p><p>（补充）中国国内根据目前的经验值来看，这个差异也在30米左右。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid4.jpg" alt="该地图显示了可能在WGS84椭球的理论表面以下或理论和几何上正确的海平面（以蓝色显示）以下的海平面的地球区域。蓝色和绿色之间的鲜明对比表明椭球和大地水准面在哪里相交。大陆显示为不透明，剩下的被水覆盖的区域揭示了相对于WGS84椭球，海平面实际上处于零海拔的位置。"></p><p>大地水准面和椭球体随着大地水准面的波动起伏相交。波动起伏是由几种现象引起的，其中最重要的是地球非均质性引起的重力异常的存在。地壳中的岩浆密度分布不​​均匀。在密度较大的区域，它可能会更高，因此会变凉。密度较小的区域相应地较低且较热。稠密的岩浆施加更强的拉力，导致水团的堆积。对于这些卷是否移动或移动速度知之甚少。如果这些位置确实移动，它们的移动将与其他地质事件的移动速度相同（即非常缓慢）。</p><p>从太空获得的精确测量值将应用于GPS读数。这些测量基于椭球表面，该椭球表面是从三维笛卡尔坐标系获得的数学上生成的地球模型。GPS接收器只能提供椭圆（几何）高度。</p><p>但是，大多数用户期望与MSL相关的准确的海拔读数。因此，较新的GPS设备基于使用地理坐标作为输入的公式，表格和矩阵的组合，将“正交”（地理）高度测量结果输出为“幕后”计算结果。提供了从粗糙或精细DEM矩阵中获取的地理位置的适当高度，而不是z值（或高度）的实际测量值。一些接收器使用大地水准面高度的近似值，以根据椭球高度估算正高。还有一些单位，使用较旧的技术作业，提供基于椭球体的z值改正读数。</p><h2 id="全球大地水准面定义-Geoid99"><a href="#全球大地水准面定义-Geoid99" class="headerlink" title="全球大地水准面定义-Geoid99"></a>全球大地水准面定义-Geoid99</h2><p>GPS需要一个全球定义的大地水准面，以便GPS接收器可以计算所需的正确z值作为全局垂直基准的参考面。（美国）国家大地测量局（National Geodetic Survey）开发了Geoid99，这是一种具有亚米级精度的模型。它被用作零表面以在全球范围内建立一致且准确的高程。但是，尽管达到了令人印象深刻的准确性水平，但由于重力效应，Geoid99的某些部分仍偏离了MSL。</p><p>由美国国家航空航天局戈达德太空飞行中心，美国国家影像和制图局（NIMA）和俄亥俄州立大学合作开发的地球大地测量模型（EGM96）已用于计算精确度优于一米的大地水准面波动（除缺乏准确的表面重力数据的区域）。该表面的值显示每个位置的MSL与用作GPS高程读数参考的椭圆形之间的差值。换句话说，EGM96显示出海洋表面的引力确实是多么不均匀。大地水准面相对于WGS84椭球的最大起伏范围为192米。最大的异常现象是在印度东南部发现的，该大地水准面位于椭球以下105米，并且在印度尼西亚东部发现了最大的膨胀。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid5.jpg" alt="这张地图显示了一个没有重力异常的世界。假设地球内部质量的均匀分布将改变海洋和陆地的轮廓。东南亚区域描绘了这种推测性海岸线。注意当前海洋与理论海洋之间的差异。"></p><h1 id="“如何”模拟"><a href="#“如何”模拟" class="headerlink" title="“如何”模拟"></a>“如何”模拟</h1><p>如果没有重力异常，大陆海岸线将如何变化？简短的答案是，它们看起来就像地球是椭球一样。最大的起伏集中在印度洋北部和印度尼西亚群岛内。因此，将出现目前在澳大利亚北部的阿拉法拉海和卡彭特里亚湾所覆盖的地区。相反，其他地区，如恒河和雅鲁藏布江等南亚主要河流三角洲形成的低地，以及印度河，伊洛瓦底江和湄公河的三角洲，也将下沉。</p><p>作为一项智力练习，请想象一下地球是一个椭球体和一个椭球体的几何完美形状。为了可视化这些“假设”场景，使用表示距地球中心的距离的栅格生成了计算机模拟，并使用ArcGIS Spatial Analyst扩展程序中的栅格计算器生成了该模拟。通过删除EGM96识别出的重力异常来修改地球仪的标准数字高程模型。椭球和椭球的这些几何上正确的表示被用于生成称为SPHEROID DEM和ELLIPSOID DEM的GIS模拟。随附的插图显示了这些形状以及其他场景对陆地和海洋分布的影响。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid6.jpg" alt="该地图显示了基于球形地球的假设的陆面和海洋的近似轮廓，该轮廓假定将保留当前的地形。"></p><h2 id="SPHEROID-DEM（球形DEM）"><a href="#SPHEROID-DEM（球形DEM）" class="headerlink" title="SPHEROID DEM（球形DEM）"></a>SPHEROID DEM（球形DEM）</h2><p>SPHEROID DEM是基于以下假设创建的：地球的形状，或更准确地说，以MSL表示的地球表面的形状是球形。换句话说，连接质心和假设的等势引力表面的地球半径在地球上各处都相同。半径设置为6,367,473米，这是从纬度为45度的椭圆参考面到地球中心的距离。</p><p>这种几何形状改变为重力改变后的椭球形会导致全球海洋发生变化。极地带距离地球中心相对较远，而这些新的更高的海拔高度将迫使海水流向赤道。同样，赤道区域将相对更靠近地球中心，并且会受到重力的强烈影响。赤道带重力的增加会把海水拉向赤道，形成一个全球性的赤道海洋。</p><h2 id="ELLIPSOID-DEM（椭球DEM）"><a href="#ELLIPSOID-DEM（椭球DEM）" class="headerlink" title="ELLIPSOID DEM（椭球DEM）"></a>ELLIPSOID DEM（椭球DEM）</h2><p>ELLIPSOID DEM将地球描述为椭球。尽管沿着每个纬度从椭球表面到地球中心的距离都是相同的，但是每个纬度都有其自己的唯一值，即从每个极点到赤道逐渐增加。为了从另一个角度看待这个椭圆形的地球（其物理形状以表面上任何点到地球质量中心的距离为特征），使用WGS84基准定义生成了一个网格。每个网格单元值代表从表面到地球质心的距离（以米为单位）。应用了三角函数的复杂组合来创建椭球的表示形式。然后将代表地球当前浮雕的DEM添加到椭圆形栅格中。</p><p>WGS84椭球的长轴和短轴之间的差为42,770米。赤道半径与两极之一的半径长度之差为21,385米-仅占半径的0.33％。从几何学上讲，地球的“扁平化”相对来说微不足道，但是就地理而言，它具有巨大的影响。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid8.jpg" alt="该地图显示了距地球质心的距离。以红色突出显示的区域表示距离地球质心最远的山脉，并且是地球表面上引力最低的区域。"></p><h2 id="如果地球静止不动"><a href="#如果地球静止不动" class="headerlink" title="如果地球静止不动"></a>如果地球静止不动</h2><p>如果地球停止自转并且离心作用不再迫使海洋在赤道周围积聚，将会发生什么？看来世界海洋将分裂为两个极地海洋，而赤道区域将完全干燥。为了对此假设建模，指定了6,371,146米的值（距地球中心的距离表示参考椭球上的海平面的近似高度），以将水与土地分开。对于此“假设假设”模拟，海平面的升高是基于这样的假设，即海水量将与今天的水平大致相同。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid7.jpg" alt="如果地球实际上静止不动怎么办？数据近似于理论高程模型，其高程相对于距地球中心的距离。GPS将其直接仰角读数参考此形状。上面的ellipsoid_dem网格的像元值是GPS的直接读数。显示的GPS读数基于附加的重力校正，因为大地水准面的形状基于重力（正负）。"></p><h2 id="冰川融化"><a href="#冰川融化" class="headerlink" title="冰川融化"></a>冰川融化</h2><p>回到地球的大地水准面表示法，再进行一次模拟，模拟所有冰川融化的地球。如果全球变暖导致南极和格陵兰的大型冰川（目前覆盖所有土地的大约10％）融化，那么该模拟可能会预测未来只有几百年的距离。如果这些冰川中的水全部释放，MSL将比当前水位上升约80米。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/2020-11/geoid9.jpg" alt="这张地图说明了如果所有冰川融化会发生什么情况。此正交曲面网格的像元值与MSL相关。"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>GIS使探索地球形状的不同概念化的影响以及对各种全球条件进行建模成为可能。</p><h2 id="理论结论"><a href="#理论结论" class="headerlink" title="理论结论"></a>理论结论</h2><p>GPS高=椭球高=大地高：点到椭球面的距离。<br>大地水准面高=正高：点到大地水准面的距离，大地水准面=重力等位面，无法全部测量。<br>似大地水准面高=正常高：点到似大地水准面的距离，由于大地水准面无法测量，只能尽可能多的选点进行测量，生成似大地水准面。在海面上可以认为似大地水准面和大地水准面重合，而越是起伏大的地区，地球质量越不均匀，差异就越大，需要更多的控制点校正。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 科普 </category>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIS </tag>
            
            <tag> 科普 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DJI照片元数据主要信息列表</title>
      <link href="/2020/11/25/DJI-XMP-Meta-Data-Info-Explain/"/>
      <url>/2020/11/25/DJI-XMP-Meta-Data-Info-Explain/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>ModifyDate=”2018-08-09”</td><td>照片修改日期</td></tr><tr><td>CreateDate=”2018-08-09”</td><td>照片创建日期</td></tr><tr><td>Make=”DJI”</td><td>制造商</td></tr><tr><td>Model=”FC6310R”</td><td>相机型号</td></tr><tr><td>format=”image/jpg”</td><td>照片格式</td></tr><tr><td>AbsoluteAltitude=”+150.09”</td><td>相机的绝对高度，基于使用的椭球模型（通常为WGS84或CGCS2000）。</td></tr><tr><td>RelativeAltitude=”+109.86”</td><td>基于原点（起飞点）的摄像机的相对高度。</td></tr><tr><td>GpsLatitude=”22.63093244”</td><td>相机位置的纬度，在北正南负，单位：度。</td></tr><tr><td>GpsLongtitude=”113.93793694”</td><td>相机位置的经度，单位：度。</td></tr><tr><td>GimbalRollDegree=”+0.00”</td><td>云台侧倾角（在东北地面框架中，北为真北）</td></tr><tr><td>GimbalYawDegree=”-38.00”</td><td>云台偏航角（在东北地面框架中，北为真北）</td></tr><tr><td>GimbalPitchDegree=”-89.90”</td><td>云台俯仰角（在东北地面框架中，北为真北）</td></tr><tr><td>FlightRollDegree=”+4.70”</td><td>无人机侧倾角（在东北地面框架中，北为真北</td></tr><tr><td>FlightYawDegree=”-36.10”</td><td>无人机偏航角（在东北地面框架中，北为真北）</td></tr><tr><td>FlightPitchDegree=”+0.80”</td><td>无人机云台俯仰角（在东北地面框架中，北为真北）</td></tr><tr><td>FlightXSpeed=”+6.60”</td><td>北方地面速度（m / s）</td></tr><tr><td>FlightYSpeed=”-5.20”</td><td>东方地面速度（m / s）</td></tr><tr><td>FlightZSpeed=”+0.00”</td><td>垂直地面速度（m / s）</td></tr><tr><td>CalibratedFocalLength=”3666.666504”</td><td>镜头的设计焦距，单位：像素。</td></tr><tr><td>CalibratedOpticalCenterX=”2736.000000”</td><td>光学设计位置的X轴坐标中心，单位：像素。</td></tr><tr><td>CalibratedOpticalCenterY=”1824.000000”</td><td>光学设计位置的Y轴坐标中心，单位：像素。</td></tr><tr><td>RtkFlag=”50”</td><td>RTK状态。（前面文章有说明）<a href="/2020/11/05/DJI-PPK-Format-Meaning/">大疆/千寻卫星后处理解算信息说明</a></td></tr><tr><td>RtkStdLon=”0.01160”</td><td>照片记录的标准偏差（以米为单位）在经度方向上的位置。当标准图像的偏差大于0.1，为建议不要使用此照片。</td></tr><tr><td>RtkStdLat=”0.01095”</td><td>照片记录的标准偏差（以米为单位）在纬度方向上的位置。当标准图像的偏差大于0.1，为建议不要使用此照片。</td></tr><tr><td>RtkStdHgt=”0.02918”</td><td>照片记录的标准偏差（以米为单位）在高度方向上的位置。当标准图像的偏差大于0.1，为建议不要使用此照片。</td></tr><tr><td>DewarpData= “… …”</td><td>畸变纠正参数。（前面文章有说明）<a href="/2020/09/29/camera-calibrate/">相机内参和畸变校正参数说明</a></td></tr></tbody></table><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>metashape-cluster</title>
      <link href="/2020/11/10/metashape-cluster/"/>
      <url>/2020/11/10/metashape-cluster/</url>
      
        <content type="html"><![CDATA[<p>1.所有电脑在同一局域网，设置固定IP地址，使用千兆交换机（如果只有两台设备，可以采用网线直连）。<br>2.共享网络文件夹，右键需共享的工程目录文件夹，选择属性-共享，选择everyone，点击共享。选择高级共享，打勾共享文件夹，点击权限，选择everyone，权限选择完全控制。<br>3.打开软件，菜单栏工具——偏好设置——网络，勾选network，填入服务端IP地址（不能使用127.0.0.1）和项目所在目录（就是上面共享的目录）。<br>4.作为服务端的电脑，打开cmd，输入（不能出现中文字符）：<code>“C\Program Files\Agisoft\Metashape Pro\Metashape.exe” --server --control 192.168.0.1:5840 --dispatch 192.168.0.1:5841</code>。也可以把这段话保存成：server.bat文件，打开就自动执行了。<br>5.作为节点的电脑，打开cmd，输入（不能出现中文字符）：<code>"C:\Program Files\Agisoft\Metashape Pro\Metashape.exe" --node --dispatch 192.168.0.1:5841 --root \\DESKTOP-PC\Cluster</code>，–dispatch参数要一样，–root就是保存项目所有文件的共享文件夹，共享目录名用计算机名的形式，别用ip形式。同样也可以保存成：node.bat，方便使用。<br>6.打开Agisoft Network Monitor，输入主机的ip和端口，点击connect，就可以查看连接的电脑了。<br>7.打开软件，按照正常流程创建工程后保存，一定要保存到共享目录下面。之后进行运算的时候软件会询问是否通过集群进行计算。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Agisoft photoscan/metashape 使用教程</title>
      <link href="/2020/11/10/metashape-workflow/"/>
      <url>/2020/11/10/metashape-workflow/</url>
      
        <content type="html"><![CDATA[<p>Photoscan，新版本改名叫Metashape了，相较于context capture（smart3d）进行空三计算效果更好，速度更快，配置更灵活，空三结果可以导入context capture进行三维重建。因此，我经常使用Metashape进行空三处理和DOM生成，然后再用cc进行三维重建，可以显著提高处理速度。而且两个软件都支持集群处理，所需环境保持一致也不会冲突。下面开始作业流程。</p><h2 id="导入照片，POS，准确性调整"><a href="#导入照片，POS，准确性调整" class="headerlink" title="导入照片，POS，准确性调整"></a>导入照片，POS，准确性调整</h2><p>1.如果您在EXIF标签中存储了位置精度：<br>转到“工具”菜单-&gt;“首选项…”-&gt;“高级”选项卡，然后选中“从XMP元数据加载相机位置精度”。<br>2.在Metashape中添加照片：“工作流程”-&gt;“添加照片…”。<br>3.如果是没有POS的照片：<br>导入相机位置。通过单击“参考”窗口中的“导入”按钮导入POS。确保为文件选择正确的列。如果文件包含角度数据，请选中“加载角度”复选框，然后选择右列。选择存储相机位置的坐标系。如果您有精度估算，也可以加载它们。<br>4.如果您的相机相对无人机机头存在旋转，则需要在“工具”-&gt;“相机校准…”下指定。在“GPS/INS偏移”标签下，将“偏转（度）”​​指定为90或您旋转的角度。<br>5.检查设置。单击“参考”窗口中的“设置”按钮。如果您使用的是方向数据，但尚未导入方向精度，则建议您在不确定是否具有比其更好的精度的情况下，将精度提高到10-20度。</p><h2 id="照片质量"><a href="#照片质量" class="headerlink" title="照片质量"></a>照片质量</h2><p>1.Metashape可以自动估计照片质量。<br>建议禁用质量值小于0.5个单位的图像，并将其排除在摄影测量处理之外。<br>2.通过在参考窗口中右键单击照片，选择“估计图像质量…”，然后选择“所有相机”，可以估计图像质量。<br>3.要显示照片的估计图像质量，请在“照片”窗格中将查看模式更改为“详细信息”。<br>4.您现在可以按“质量”列进行排序。选择质量低于0.5的照片并将其禁用。</p><h2 id="对齐照片"><a href="#对齐照片" class="headerlink" title="对齐照片"></a>对齐照片</h2><p>1.对齐您的照片：“工作流程”-&gt;“对齐照片…”。将“精度”设置为“高”（只需要DOM、DSM、DEM，不需要高精度模型的时候，用“低”就完全够了），将“成对预选”设置为“参考”。您也可以使用“最高”，但是会花费更长的时间。阅读手册中的准确度等级是什么意思。可能有必要调整“关键点”和“联系点”限制，以加快处理速度。“自适应相机模型拟合”将使Metashape根据其可靠性估算值来选择应包含在调整中的相机参数。<br>2.对齐完成后，浏览照片，然后依次取消选中和禁用照片块。完成此操作后，运行“优化摄像机…”。勾选：f，cx，cy，k1，k2，k3，p1，p2。<br>3.在继续之前，请复制您的块。如果在以下步骤中出现问题，则可以返回到副本。<br>4.使用手动选择工具删除稀疏点云中明显的离群点。然后运行“优化相机…”（勾选：f，cx，cy，k1，k2，k3，p1，p2）。<br>5.使用“模型”菜单下的“逐步选择…”。向过滤器推荐一定的值是很困难的，最好的方法是遍历这些过滤器以实现误差很小的点云。指定的值应视为建议值，并且取决于数据的质量。使用以下过滤器：</p><ul><li>图像计数。如果您的数据应该覆盖两张以上的照片（例如，打开的区域和清晰的区域），请使用此选项。然后，您可以使用图像计数=2，对于地面植被比较多的数据，请跳过这一步。使用与以前相同的参数运行“优化摄像机…”。</li><li>重建不确定性（几何形状）。使用滑块调整合适的值以选择不确定性高的点。推荐值：50到25。按OK，然后按键盘上的Delete删除点。使用与以前相同的参数运行“优化摄像机…”。重复至少2次。</li><li>投影精度（像素匹配误差）。使用滑块调整合适的值以选择不确定性高的点。推荐值：10到8。按OK，然后按键盘上的Delete删除点。使用与以前相同的参数运行“优化摄像机…”。重复此过滤器和优化过程至少2次。</li><li>选中所有参数后，“优化相机…”。</li><li>如果您有地面控制点（GCP），请先将其导入，然后再继续进行下一步（重新投影错误）。请参阅下文，了解如何导入GCP。</li><li>重投影误差（像素残留误差）。使用滑块调整合适的值以选择不确定性高的点。推荐值：1到0.5。按OK，然后通过按键盘上的Delete删除点。选中所有参数，运行“优化摄像机…”。重复至少2次。</li></ul><h2 id="地面控制点（GCP）"><a href="#地面控制点（GCP）" class="headerlink" title="地面控制点（GCP）"></a>地面控制点（GCP）</h2><p>仅当您已采集地面控制点时才执行此步骤。<br>1.如果地面控制点（GCP）与图像位于不同的坐标系中，则现在需要在导入之前将项目转换为与GCP相同的坐标系。单击“参考”窗口中的“转换”按钮即可完成此操作。（新版本已经支持照片、地面控制点采用各自独立的坐标系）<br>2.通过单击“参考”窗口中的“导入”按钮导入GCP。<br>3.每个GCP（甚至照片）的精度可以通过三种不同的方式设置：<br>x，y和z的精度为0.1m：0.1。<br>x和y的精度为0.1m，z精度为0.5m：0.1/0.5。<br>x的精度为0.1m，y的精度为0.2m，z的精度为0.5m：0.1/0.2/0.5。<br>4.刺点。您可以右键单击GCP，然后选择“按选择过滤照片…”。您可以使用“向上翻页”和“向下翻页”键在照片之间切换。将每个标记至少放置在两张照片中。时常运行“优化相机…”以改善未放置标记的位置。<br>5.“优化相机…”。如果您的GCP精度很高，则应先取消选中所有照片，然后再单击“优化相机…”。确保已检查所有要使用的GCP，并且它们具有正确的精度设置。对于使用DJI无人驾驶飞机拍摄的照片，其海拔质量不佳，因此，在运行“优化相机…”并进行处理之前，应始终取消选中照片（至少适用于2018年之前的DJI无人机）。<br>6.完成上述步骤后，GCP中的误差应该很小（如果使用RTK GNSS接收器，则误差约为5-20厘米）。</p><h2 id="密集点云和正射照片"><a href="#密集点云和正射照片" class="headerlink" title="密集点云和正射照片"></a>密集点云和正射照片</h2><p>1.现在，您可以执行以下命令来执行批处理脚本，也可以一个接一个地运行它们。<br>2.建立密集的云（如果不进行模型重建可以不进行这一步）。使用“高”质量（很少使用“超高”，因为它需要很长时间，并且通常照片的质量不高。请阅读手册中的更多内容）。将深度过滤设置为“轻微”。<br>3.构建网格（通常从稀疏云中生成）。<br>4.平滑网格（工具-&gt;网格-&gt;平滑网格）。<br>5.使用稀疏云中的网格创建正射照片。<br>6.例如，将正照片导出为tif。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大疆/千寻卫星后处理解算信息说明</title>
      <link href="/2020/11/05/DJI-PPK-Format-Meaning/"/>
      <url>/2020/11/05/DJI-PPK-Format-Meaning/</url>
      
        <content type="html"><![CDATA[<p>大疆PPK文件也是用的千寻解算，格式一样。</p><table><thead><tr><th>列字段</th><th>单位</th><th>说明</th></tr></thead><tbody><tr><td>Station</td><td>-</td><td>轨迹点序列</td></tr><tr><td>Timestamp(ms)</td><td>毫秒</td><td>UTC时间戳</td></tr><tr><td>GPSWeek</td><td>-</td><td>GPS周</td></tr><tr><td>TOW(s)</td><td>秒</td><td>周内秒</td></tr><tr><td>Latitude(deg)</td><td>度</td><td>纬度</td></tr><tr><td>Longitude(deg)</td><td>度</td><td>经度</td></tr><tr><td>H-Ell(m)</td><td>米</td><td>椭球高程</td></tr><tr><td>X(m)</td><td>米</td><td>高斯平面坐标系 X（如果指定『中央子午线』则有此输出字段）</td></tr><tr><td>Y(m)</td><td>米</td><td>高斯平面坐标系 Y（如果指定『中央子午线』则有此输出字段）</td></tr><tr><td>SDNorth(m)</td><td>米</td><td>北方向标准差</td></tr><tr><td>SDEast(m)</td><td>米</td><td>东方向标准差</td></tr><tr><td>SDHeight(m)</td><td>米</td><td>高程标准差</td></tr><tr><td>Q</td><td>-</td><td>解算质量标志位：1：固定解(大疆：50)；2：浮点解(大疆：34)；3：单点解(大疆：16)；4：未解出(大疆：0)；</td></tr></tbody></table><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>相机内参和畸变校正参数说明</title>
      <link href="/2020/09/29/camera-calibrate/"/>
      <url>/2020/09/29/camera-calibrate/</url>
      
        <content type="html"><![CDATA[<p>以大疆Phantom4RTK为例，以记事本方式打开任意一张照片，搜索<code>DewarpData</code>，可以看到校正参数：<code>drone-dji:DewarpData=" 2020-05-13;3714.070000000000,3707.070000000000,-8.280000000000,-17.520000000000,-0.279234000000,0.125598000000,0.001187790000,-0.000255019000,-0.041078200000"</code></p><p>值顺序为：<code>calibrate_date;fx,fy,cx,cy,k1,k2,p1,p2,k3</code></p><p>分别的意思：</p><table><thead><tr><th>字段</th><th>说明</th><th></th></tr></thead><tbody><tr><td>calibrate_date</td><td>校正时间</td><td></td></tr><tr><td>fx</td><td>以像素为单位标定出的焦距x坐标</td><td>相机像素焦距则为： (fx + fy) / 2 像素</td></tr><tr><td>fy</td><td>以像素为单位标定出的焦距y坐标</td><td>相机毫米焦距则为：（Phantom4rtk一像元尺寸2.4微米）(fx + fy) / 2 * (2.4 * 0.001) 毫米</td></tr><tr><td>cx</td><td>以像素为单位标定出的像主点（原点为影像中心）x坐标</td><td>建图软件（Pix4D、Context Capture等）默认原点为影像左上角，所以要换算到影像中心。以Phantom4rtk为例，若照片比例为3:2，则像素为5472 * 3648。（4:3同理，像素为4864 * 3648）</td></tr><tr><td>cy</td><td>以像素为单位标定出的像主点（原点为影像中心）y坐标</td><td>像主点x = 5472 / 2 + cx；像主点y = 3648 / 2 + cy。</td></tr><tr><td>k1</td><td>径向畸变校正参数k1</td><td></td></tr><tr><td>k2</td><td>径向畸变校正参数k2</td><td></td></tr><tr><td>k3</td><td>径向畸变校正参数k3</td><td></td></tr><tr><td>p1</td><td>切向畸变校正参数p1</td><td></td></tr><tr><td>p2</td><td>切向畸变校正参数p2</td><td></td></tr></tbody></table><p><a href="/html/calibrate/">在线畸变参数计算器</a></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DJI大疆PPK后差分处理文件导入像控预处理</title>
      <link href="/2020/09/22/dji-ppk-file-process/"/>
      <url>/2020/09/22/dji-ppk-file-process/</url>
      
        <content type="html"><![CDATA[<div class="container">      <div class="prefix">        <p>影像文件名前缀</p>        <input id="prefix" name="prefix" type="text">      </div>      <div class="file">        <p>选择大疆PPK原始文件[result.csv]</p>        <input accept=".csv" id="contained" name="csvfile" type="file">      </div>  </div>  <script>      function handleUpload(e) {        var file = e.target.files[0]        fileReader.readAsText(file)      }      function handleCsv(csv) {        let lines = csv.split(/[\n]/)        let count = lines.length        let output = []        let prefix = document.querySelector('#prefix').value        for (let i = 1; i < count; i++) {          let line = lines[i]          if (line === '' || line === null || line === undefined) {            break          }          let datas = line.split(',')          let id = datas[0]          let latitude = datas[3]          let longitude = datas[4]          let height = datas[5]          let Q = datas[9]          if (Q !== '50') {            alert('Some data not fixed!')          }          output.push(id)          output.push(',')          output.push(latitude)          output.push(',')          output.push(longitude)          output.push(',')          output.push(height)          output.push(',')          output.push(prefix)          output.push(id.padStart(4, '0'))          output.push('.JPG')          output.push('\r\n')        }        return output.join('')      }      function saveFile(data, filename) {        var file = new Blob([data])        console.log(file)        if (window.navigator.msSaveOrOpenBlob) {          // IE10+          window.navigator.msSaveOrOpenBlob(file, filename)        } else {          // Others          var a = document.createElement('a'),            url = URL.createObjectURL(file)          a.href = url          a.download = filename          document.body.appendChild(a)          a.click()          setTimeout(function () {            document.body.removeChild(a)            window.URL.revokeObjectURL(url)          }, 0)        }      }      let fileReader = new FileReader()      fileReader.onload = function () {        let result = this.result        let newCsv = handleCsv(result)        let nowDate = new Date()        let year = nowDate.getFullYear()        let month = (nowDate.getMonth() + 1).toString().padStart(2, '0')        let day = nowDate.getDate().toString().padStart(2, '0')        let dateStr = year + '-' + month + '-' + day        saveFile(newCsv, 'result_JTEdited' + dateStr + '.csv')      }      let contained = document.querySelector('#contained')      contained.addEventListener('change', handleUpload)  </script><p>显示效果不好，点击下面打开单独的网页</p><p><a href="/html/ppk/">独立网页的版本</a></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QGIS将文件夹中的所有Esri Shape转换为KML文件的python处理代码</title>
      <link href="/2020/09/22/qgis-shp2kml-py/"/>
      <url>/2020/09/22/qgis-shp2kml-py/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> osdir <span class="token operator">=</span> r<span class="token string">'C:\Users\YourFolderPathContainShapefile'</span>toDir <span class="token operator">=</span> r<span class="token string">'C:\Users\YourFolderPathKMLWillOutput'</span>crs <span class="token operator">=</span> QgsCoordinateReferenceSystem<span class="token punctuation">(</span><span class="token number">4326</span><span class="token punctuation">)</span>list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token keyword">for</span> l <span class="token keyword">in</span> list<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token operator">not</span> l<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'.shp'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    inPath <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dir<span class="token punctuation">,</span> l<span class="token punctuation">)</span>    vl <span class="token operator">=</span> QgsVectorLayer<span class="token punctuation">(</span>inPath<span class="token punctuation">,</span> l<span class="token punctuation">,</span> <span class="token string">'ogr'</span><span class="token punctuation">)</span>    valid <span class="token operator">=</span> vl<span class="token punctuation">.</span>isValid<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token operator">not</span> vl<span class="token punctuation">.</span>isValid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>inPath<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'invalid'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    toFile <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>toDir<span class="token punctuation">,</span> l<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'.shp'</span><span class="token punctuation">,</span> <span class="token string">'.kml'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    QgsVectorFileWriter<span class="token punctuation">.</span>writeAsVectorFormat<span class="token punctuation">(</span>vl<span class="token punctuation">,</span> toFile<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span> crs<span class="token punctuation">,</span> <span class="token string">'kml'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QGIS添加各大地图服务的插件</title>
      <link href="/2020/09/22/qgis-add-map-services/"/>
      <url>/2020/09/22/qgis-add-map-services/</url>
      
        <content type="html"><![CDATA[<p>在插件中搜索并安装<strong>QuickMapServices</strong>插件，然后打开插件的<code>Settings -&gt; More Services</code>，点击<code>Get contributed pack</code>获得所有服务，就可以用添加添加各种地图服务了。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>华测、中海达等用RTK进行PPK后差分解算测量</title>
      <link href="/2020/09/04/rtk-ppk/"/>
      <url>/2020/09/04/rtk-ppk/</url>
      
        <content type="html"><![CDATA[<p>华测、中海达等这些厂商都开始提供PPK后差分解算软件了。使用很简单，先得到1个（3个最好）的已知点，然后RTK设置为静态模式架设不动。无人机或者其他设备用PPK模型进行测绘，之后就可以用软件解算了。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大疆精灵Phantom4RTK PPK文件说明</title>
      <link href="/2020/09/04/phantom4RTK-ppk-file-formate/"/>
      <url>/2020/09/04/phantom4RTK-ppk-file-formate/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>EVENTLOG.bin</strong> 二进制格式的曝光时间戳记录文件</li><li><strong>PPKRAW.bin</strong> RTCM3.2MSM5格式的移动端卫星观测值数据及星历数据</li><li><strong>PPKRAW.sig</strong> 官方没解释，猜测是signature。身份校验文件，用于校验是否为该飞行器生成的数据，如为非该飞行器生成的数据将无法加载。</li><li><strong>Rinex.obs</strong> 实施转码出的Rinex观测值文件</li><li><strong>Timestamps.MRK</strong> ASCII格式的明码曝光时间戳，每张照片拍照时刻定位结果，拍照时刻定位状态，定位标准差，拍照时刻等记录文件。格式说明：</li></ul><p><strong>第一列</strong><br>照片的编号<br><strong>第二列</strong><br>每张照片曝光时刻的UTC时间，以GPS时间格式表示时的周内秒部分。<br><strong>第三列</strong><br>每张照片曝光时刻的UTC时间，以GPS时间格式表示时的GPS周部分。<br><strong>第四列</strong><br>每张照片曝光时刻瞬间天线相位中心到相机CMOS传感器中心的在北方向（N）的偏差，单位为毫米，CMOS中心在天线相位中心偏北方向为正，偏南方向为负。<br><strong>第五列</strong><br>每张照片曝光时刻瞬间天线相位中心到相机CMOS传感器中心的在东方向（E）的偏差，单位为毫米，CMOS中心在天线相位中心偏东方向为正，偏西方向为负。<br><strong>第六列</strong><br>每张照片曝光时刻瞬间天线相位中心到相机CMOS传感器中心的在垂直方向（V）的偏差，单位为毫米，CMOS中心在天线相位中心偏下为正，偏上为负。<br><strong>第七列</strong><br>曝光时刻获取的CMOS中心的实时位置纬度（Lat），单位为度。当飞机定位处于RTK模式下时，此时的位置为RTK位置加上曝光时刻天线相位中心到CMOS中心的位置，精度为RTK精度（厘米级）；当飞机定位处于GPS模式下时，此时的位置为GPS单点定位位置加上曝光时刻天线相位中心到CMOS中心的位置，精度为GPS单点定位的精度（米级）<br><strong>第八列</strong><br>曝光时刻获取的CMOS中心的实时位置经度（Lon），单位为度。<br><strong>第九列</strong><br>曝光时刻获取的CMOS中心的实时高度，单位为米。该高度为大地高（俗称椭球高），（用户自行定义其椭球模型，默认为WGS84，用户可以通过接入不同的CORS站系统/基准，设定其为其他椭球，如CGCS2000）表面的高度。注意，此高度并非基于国家85高程基准或56高程基准（正常高），也并非基于全球范围内比较通用的EGM96/2008高程基准（正高）。<br><strong>第十至十二列</strong><br>北、东、天三个方向定位结果的标准差，表征在三个方向上定位的相对精度。单位为米<br><strong>第十三列（很常用）</strong><br>RTK状态位：</p><ul><li>0-无定位</li><li>16-单点定位模式</li><li>34-RTK浮点解</li><li>50-RTK固定解<br>当某张照片标志位不为50的时候，不推荐使用此照片直接进行建图。</li></ul><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>无人机多层航线建模失败解决方案</title>
      <link href="/2020/09/04/uav-multi-height-route/"/>
      <url>/2020/09/04/uav-multi-height-route/</url>
      
        <content type="html"><![CDATA[<p>  无人机航测的过程中，经常会碰到空中环境太恶劣，无法正常飞行的情况。一般的做法都是先做一个超高空飞行，保证覆盖范围和整体约束，然后对特征地物、居民地、建筑物等，进行超低空飞行作为补充，这样就避开了空中混乱的位置。但问题是超高空和超低空之间重叠率很难保证，导致建模的时候经常遇到问题。最常见的就是只使用高空照片做特征点匹配，低空的高清晰度照片被抛弃；或者高低空照片混用，一块模糊一块清晰，成像不统一。针对这种情况，一般有几种解决方案：</p><p>1.建模时从高空照片中剔除低空覆盖的部分。（边缘还是要留下，保证有重叠率来识别）<br>2.条件允许时扩大低空航线范围，提高低空重叠率。<br>3.高低空照片分别建模，建模完成以后再合模。<br>4.如果用context capture建模，手动添加连接点强制匹配。<br>5.如果用context capture建模，建模参数设置为高特征点匹配。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>地面采样距离(GSD)计算器</title>
      <link href="/2020/08/14/gsd-calculator/"/>
      <url>/2020/08/14/gsd-calculator/</url>
      
        <content type="html"><![CDATA[<div class="jt-gsd-container">    <div id="app"></div></div><script src="/html/gsd/js/chunk-vendors.d1da7d0f.js"></script><script src="/html/gsd/js/app.0f29bf05.js"></script><link href="/html/gsd/css/chunk-vendors.be6d2af9.css" rel="stylesheet"><link href="/html/gsd/css/app.74224f25.css" rel="stylesheet"><p><a href="/html/gsd/">独立网页的版本</a></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>qgis速记</title>
      <link href="/2020/08/12/post/"/>
      <url>/2020/08/12/post/</url>
      
        <content type="html"><![CDATA[<p>按照几何位置排序，其中45代表东北方向，其他方向排序可以自己指定，y正轴（北）方向为0度，顺时针旋转</p><pre><code>sin(45) * x(centroid($geometry)) + cos(45) * y(centroid($geometry))</code></pre><p>字段长度不足补0，3是长度，0是不足的左侧补0</p><pre><code>lpad("你的字段名", 3, '0')</code></pre><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jenkins从github拉取nuxt项目部署到docker, windows平台</title>
      <link href="/2020/06/10/nuxt-docker/"/>
      <url>/2020/06/10/nuxt-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>开发环境：win10</li><li>服务器 docker 宿主环境：win10</li><li>docker 环境：linux</li><li>jenkins 部署环境：docker</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>jenkins 插件：github、git、publish over ssh。<br><em>提前要在全局工具配置里面配置 git，系统配置里面配置 github server、publish over SSH。这常用工具网上都有教程，不单独说了。有一个坑是，publish over SSH 连接 OpenSSH for windows，我用 key 始终不行， 点下面高级，用户名密码模式搞定的。</em></li><li>服务器 win10：<a href="https://github.com/PowerShell/openssh-portable" target="_blank" rel="noopener">OpenSSH for windows</a><br><em>这个需要在你的 win10 服务器上配置，网上很多，我也是照着网上做的。</em></li><li>docker：node 镜像<br><em>我用的 node 官方镜像生产的自己的镜像，你可以用自己习惯的。把 node 容器运行起来，<code>docker exec -it YourName /bin/bash</code>进入容器，执行<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>配置淘宝源，新建 <code>/app</code>文件夹，之后代码构建和发布就都放这里了。然后把这个容器打包成镜像，名字随便，就叫<code>mynode:latest</code>（仓库：版本）。</em></li></ul><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ul><li><p>jenkins：<br>1.新建任务。<br>2.勾选 github 项目：填写地址：<a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:YourName/YourProject.git。<br>3.源码管理：选择 git，url 和上面一样，设置 Credentials，如果是 public 项目就不用设置。<br>4.轮询 SCM 或者 GitHub hook 自己看着办。<br>5.构建：选择执行 shell，命令写：<code>tar -zcvf frontend.tar.gz *</code>，意思是把所有代码打包到<code>frontend.tar.gz</code>。<br>6.构建：选择 Send files or execute commands over SSH。<br>6.1 SSH Server 选择之前配置好的。<br>6.2 Source files：<code>frontend.tar.gz</code>。<br>6.3 Remote directory：<code>/</code>（注意这个根目录是你之前配置好的 SSH Server 连接到的目录，比如你之前配置的<code>/d:/docker/</code>，那么这里就会把 frontend.tar.gz 上传到 d:/docker/frontend.tar.gz。windows SSH 连接 D 盘就是这么写的<code>/D:/</code>前面有个<code>/</code>）<br>6.4 Exec command：<code>frontend.bat</code>。意思就是执行远端 windows 服务器上的<code>frontend.bat</code>文件，所以去远端服务器的<code>C:\Users\Administrator</code>下新建这个<code>frontend.bat</code>文件，Administrator 是你登录的用户名。连接默认就固定这个目录，我尝试了几个办法想把文件放 D 盘执行的，但一直不行，放弃了，<code>frontend.bat</code>里面写什么下面说。<br>7.保存。</p></li><li><p>nuxt 项目：<br>1.上传代码的时候忽略<code>.nuxt node_modules 等等</code>这些文件，没啥好说的。<br>2.根目录添加<code>Dockerfile</code>。写入：</p></li></ul><pre><code>FROM mynode:latestWORKDIR /appCOPY . /appRUN cnpm install \    &amp;&amp; npm run buildEXPOSE 3000CMD ["npm", "run", "start"]</code></pre><p>简单解释一下，用 mynode （上面准备工作弄好了的）构建新镜像，设置工作目录<code>/app</code>，把当前所有文件拷贝到<code>/app</code>，（在工作目录）执行<code>cnpm install</code> 和 <code>npm run build</code>， 对外访问端口 3000，容器开始运行后（在工作目录）执行<code>npm run start</code>。<br>这里构建发布容器，设置依赖，运行就弄好了。之后就是去 windows 服务器上执行脚本，每次构建之前删除旧的，运行新的。</p><ul><li>服务器脚本（frontend.bat）：<br>直接上内容：</li></ul><pre><code>d:                     # 切换到d盘cd docker              # 到d:/docker这个文件夹rd /S /Q frontend      # 删除d:/docker下，frontend这个文件夹mkdir frontend         # 新建 frontend 文件夹tar -xvf frontend.tar.gz -C ./frontend  # 解压jenkins打包上传过来的文件到frontend文件夹cd frontend            # 到d:/docker/frontend这个文件夹docker stop frontend      # 停止已运行容器docker rm -v frontend     # 删除已存在容器docker image rm frontend  # 删除镜像docker build -t frontend:latest . # 运行Dockerfile打包生成新镜像：frontend:latest，注意最后有一个点，表示用当前目录下的Dockerfile来执行的docker run -itd --restart=always --name frontend -p 3000:3000 frontend:latest   # 运行容器</code></pre><p>到这里就全部完成了。去 jenkins 立即构建就 ok 了。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git commit规范化，设置Commitizen，符合Angular的规范</title>
      <link href="/2020/05/15/git-commitizen/"/>
      <url>/2020/05/15/git-commitizen/</url>
      
        <content type="html"><![CDATA[<h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p><a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noopener">commitizen地址</a><br><a href="https://github.com/commitizen/cz-conventional-changelog" target="_blank" rel="noopener">cz-conventional-changelo地址：规范要求，不同的适配器要求不同</a><br><a href="https://github.com/ajoslin/conventional-changelog" target="_blank" rel="noopener">conventional-changelog地址：生成changelog.md</a></p><pre><code>npm install -g commitizennpm install -g cz-conventional-changelognpm install -g conventional-changelog-clicommitizen init cz-conventional-changelog --save-dev --save-exact</code></pre><p>如果已经有其他适配器了，会报错，用  <code>--force</code> 替换掉，即：</p><pre><code>commitizen init cz-conventional-changelog --save-dev --save-exact --force</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>以后提交代码就用<code>git cz -m</code>替代<code>git commit -m</code>就好了，或者不输入message跟着提示走就没问题。<br>type值：  </p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>feat</td><td>新增一个功能</td></tr><tr><td>fix</td><td>修复一个Bug</td></tr><tr><td>docs</td><td>文档变更</td></tr><tr><td>style</td><td>代码格式（不影响功能，例如空格、分号等格式修正）</td></tr><tr><td>refactor</td><td>代码重构</td></tr><tr><td>perf</td><td>改善性能</td></tr><tr><td>test</td><td>测试</td></tr><tr><td>build</td><td>变更项目构建或外部依赖（例如scopes: webpack、gulp、npm等）</td></tr><tr><td>ci</td><td>更改持续集成软件的配置文件和package中的scripts命令，例如scopes: Travis, Circle等</td></tr><tr><td>chore</td><td>变更构建流程或辅助工具</td></tr><tr><td>revert</td><td>代码回退</td></tr></tbody></table><p>生成changelog：<br><code>conventional-changelog -p angular -i CHANGELOG.md -s</code></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker速查表</title>
      <link href="/2020/05/15/docker-cheat-sheet/"/>
      <url>/2020/05/15/docker-cheat-sheet/</url>
      
        <content type="html"><![CDATA[<h2 id="容器（Container）"><a href="#容器（Container）" class="headerlink" title="容器（Container）"></a>容器（Container）</h2><h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/create" target="_blank" rel="noopener"><code>docker create</code></a> 创建容器但不启动它。</li><li><a href="https://docs.docker.com/engine/reference/commandline/rename/" target="_blank" rel="noopener"><code>docker rename</code></a> 用于重命名容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/run" target="_blank" rel="noopener"><code>docker run</code></a> 一键创建并同时启动该容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/rm" target="_blank" rel="noopener"><code>docker rm</code></a> 删除容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/update/" target="_blank" rel="noopener"><code>docker update</code></a> 调整容器的资源限制。</li></ul><h4 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h4><p><code>docker run --rm</code> 临时容器，容器停止之后删除它。<br><code>docker run -d container_id</code>，<code>-d</code> 表示自动将容器与终端分离（也就是说在后台运行容器，并输出容器 ID）<br><code>docker run -p container_id</code>，<code>-p</code> 表示指定端口映射，格式：主机（宿主）端口:容器端口</p><h3 id="启动和停止"><a href="#启动和停止" class="headerlink" title="启动和停止"></a>启动和停止</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/start" target="_blank" rel="noopener"><code>docker start</code></a> 启动已存在的容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/stop" target="_blank" rel="noopener"><code>docker stop</code></a> 停止运行中的容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/restart" target="_blank" rel="noopener"><code>docker restart</code></a> 重启容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/pause/" target="_blank" rel="noopener"><code>docker pause</code></a> 暂停运行中的容器，将其「冻结」在当前状态。</li><li><a href="https://docs.docker.com/engine/reference/commandline/unpause/" target="_blank" rel="noopener"><code>docker unpause</code></a> 结束容器暂停状态。</li><li><a href="https://docs.docker.com/engine/reference/commandline/wait" target="_blank" rel="noopener"><code>docker wait</code></a> 阻塞地等待某个运行中的容器直到停止。</li><li><a href="https://docs.docker.com/engine/reference/commandline/kill" target="_blank" rel="noopener"><code>docker kill</code></a> 向运行中的容器发送 SIGKILL 指令。</li><li><a href="https://docs.docker.com/engine/reference/commandline/attach" target="_blank" rel="noopener"><code>docker attach</code></a> 连接到运行中的容器。</li></ul><h3 id="信息"><a href="#信息" class="headerlink" title="信息"></a>信息</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/ps" target="_blank" rel="noopener"><code>docker ps</code></a> 查看运行中的所有容器。</li><li><a href="https://docs.docker.com/engine/reference/commandline/logs" target="_blank" rel="noopener"><code>docker logs</code></a> 从容器中读取日志。（你也可以使用自定义日志驱动，不过在 1.10 中，它只支持 <code>json-file</code> 和 <code>journald</code>）。</li><li><a href="https://docs.docker.com/engine/reference/commandline/inspect" target="_blank" rel="noopener"><code>docker inspect</code></a> 查看某个容器的所有信息（包括 IP 地址）。</li><li><a href="https://docs.docker.com/engine/reference/commandline/events" target="_blank" rel="noopener"><code>docker events</code></a> 从容器中获取事件 (events)。</li><li><a href="https://docs.docker.com/engine/reference/commandline/port" target="_blank" rel="noopener"><code>docker port</code></a> 查看容器的公开端口。</li><li><a href="https://docs.docker.com/engine/reference/commandline/top" target="_blank" rel="noopener"><code>docker top</code></a> 查看容器中活动进程。</li><li><a href="https://docs.docker.com/engine/reference/commandline/stats" target="_blank" rel="noopener"><code>docker stats</code></a> 查看容器的资源使用量统计信息。</li><li><a href="https://docs.docker.com/engine/reference/commandline/diff" target="_blank" rel="noopener"><code>docker diff</code></a> 查看容器文件系统中存在改动的文件。</li></ul><h4 id="常用参数-1"><a href="#常用参数-1" class="headerlink" title="常用参数"></a>常用参数</h4><p><code>docker ps -a</code> 显示所有容器，包括运行中和已停止的。<br><code>docker stats --all</code> 同样将显示所有容器，默认仅显示运行中的容器。</p><h3 id="导入-导出"><a href="#导入-导出" class="headerlink" title="导入 / 导出"></a>导入 / 导出</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/cp" target="_blank" rel="noopener"><code>docker cp</code></a> 在容器和本地文件系统之间复制文件或目录。</li><li><a href="https://docs.docker.com/engine/reference/commandline/export" target="_blank" rel="noopener"><code>docker export</code></a> 将容器的文件系统打包为归档文件流 (tarball archive stream) 并输出至标准输出 (STDOUT)。</li></ul><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/exec" target="_blank" rel="noopener"><code>docker exec</code></a> 在容器内执行命令。</li></ul><p>例如，进入正在运行的 <code>foo</code> 容器，并连接 (attach) 到一个新的 Shell 进程：<code>docker exec -it foo /bin/bash</code>。</p><h2 id="镜像-Images"><a href="#镜像-Images" class="headerlink" title="镜像(Images)"></a>镜像(Images)</h2><h3 id="生命周期-1"><a href="#生命周期-1" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/images" target="_blank" rel="noopener"><code>docker images</code></a> 查看所有镜像。</li><li><a href="https://docs.docker.com/engine/reference/commandline/import" target="_blank" rel="noopener"><code>docker import</code></a> 从归档文件创建镜像。</li><li><a href="https://docs.docker.com/engine/reference/commandline/build" target="_blank" rel="noopener"><code>docker build</code></a> 从 Dockerfile 创建镜像。</li><li><a href="https://docs.docker.com/engine/reference/commandline/commit" target="_blank" rel="noopener"><code>docker commit</code></a> 为容器创建镜像，如果容器正在运行则会临时暂停。</li><li><a href="https://docs.docker.com/engine/reference/commandline/rmi" target="_blank" rel="noopener"><code>docker rmi</code></a> 删除镜像。</li><li><a href="https://docs.docker.com/engine/reference/commandline/load" target="_blank" rel="noopener"><code>docker load</code></a> 从标准输入 (STDIN) 加载归档包 (tar archive) 作为镜像，包括镜像本身和标签 (tags, 0.7 起)。</li><li><a href="https://docs.docker.com/engine/reference/commandline/save" target="_blank" rel="noopener"><code>docker save</code></a> 将镜像打包为归档包，并输出至标准输出 (STDOUT)，包括所有的父层、标签和版本 (parent layers, tags, versions, 0.7 起)。</li></ul><h3 id="其它信息"><a href="#其它信息" class="headerlink" title="其它信息"></a>其它信息</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/history" target="_blank" rel="noopener"><code>docker history</code></a> 查看镜像的历史记录。</li><li><a href="https://docs.docker.com/engine/reference/commandline/tag" target="_blank" rel="noopener"><code>docker tag</code></a> 给镜像打标签命名（本地或者仓库均可）。</li></ul><h2 id="网络-Networks"><a href="#网络-Networks" class="headerlink" title="网络(Networks)"></a>网络(Networks)</h2><h3 id="生命周期-2"><a href="#生命周期-2" class="headerlink" title="生命周期"></a>生命周期</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/network_create/" target="_blank" rel="noopener"><code>docker network create</code></a></li><li><a href="https://docs.docker.com/engine/reference/commandline/network_rm/" target="_blank" rel="noopener"><code>docker network rm</code></a></li></ul><h3 id="其它信息-1"><a href="#其它信息-1" class="headerlink" title="其它信息"></a>其它信息</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/network_ls/" target="_blank" rel="noopener"><code>docker network ls</code></a></li><li><a href="https://docs.docker.com/engine/reference/commandline/network_inspect/" target="_blank" rel="noopener"><code>docker network inspect</code></a></li></ul><h3 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h3><ul><li><a href="https://docs.docker.com/engine/reference/commandline/network_connect/" target="_blank" rel="noopener"><code>docker network connect</code></a></li><li><a href="https://docs.docker.com/engine/reference/commandline/network_disconnect/" target="_blank" rel="noopener"><code>docker network disconnect</code></a></li></ul><h2 id="仓库-Repository"><a href="#仓库-Repository" class="headerlink" title="仓库(Repository)"></a>仓库(Repository)</h2><ul><li><a href="https://docs.docker.com/engine/reference/commandline/login" target="_blank" rel="noopener"><code>docker login</code></a> 登入仓管中心。</li><li><a href="https://docs.docker.com/engine/reference/commandline/logout" target="_blank" rel="noopener"><code>docker logout</code></a> 登出仓管中心。</li><li><a href="https://docs.docker.com/engine/reference/commandline/search" target="_blank" rel="noopener"><code>docker search</code></a> 从仓管中心检索镜像。</li><li><a href="https://docs.docker.com/engine/reference/commandline/pull" target="_blank" rel="noopener"><code>docker pull</code></a> 从仓管中心拉取镜像到本地。</li><li><a href="https://docs.docker.com/engine/reference/commandline/push" target="_blank" rel="noopener"><code>docker push</code></a> 从本地推送镜像到仓管中心。</li></ul><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git速查表</title>
      <link href="/2020/05/14/git-cheat-sheet/"/>
      <url>/2020/05/14/git-cheat-sheet/</url>
      
        <content type="html"><![CDATA[<p>git 从远程拉取代码、推代码的步骤</p><p>如果是几个人共同管理项目，并且你的队友在你之前推过代码，那你就需要 git pull 一下，把代码拉到本地，解决一下冲突，再执行以下步骤，将本地代码推到远程仓库。</p><blockquote><p>git status            #git仓库状态</p></blockquote><blockquote><p>git add *             #更新的代码添加到暂存区</p></blockquote><blockquote><p>git commit -m “msg”   #将暂存区的更新提交到仓库区</p></blockquote><blockquote><p>git pull              #先git pull,拉取远程仓库所有分支更新并合并到本地</p></blockquote><blockquote><p>git push origin master    #将本地分支的更新全部推送到远程仓库</p></blockquote><blockquote><p>git reset –mixed [哈希码]    #回滚到这个哈希码，将本地归档区和缓冲区也进行回滚</p></blockquote><blockquote><p>git reset –hard [哈希码]     #使用强制还原这个哈希码</p></blockquote><blockquote><p>git reset –soft [哈希码]     #回滚到这个哈希码，只将本地归档区回滚</p></blockquote><blockquote><p>git revert [哈希码]           #只是针对这个哈希码版本进行删除回滚操作</p></blockquote><blockquote><p>git log               #查看日志</p></blockquote><blockquote><p>git reflog            #查看操作记录，能找到之前的操作记录和哈希码</p></blockquote><p>多分支开发</p><blockquote><p>git branch -v         #查看我们当前有哪些分支？</p></blockquote><blockquote><p>git branch [name]   #创建name分支</p></blockquote><blockquote><p>git checkout [name] #切换到name分支</p></blockquote><blockquote><p>git checkout -b [name]  #创建并切换到name分支</p></blockquote><blockquote><p>git merge [name] 将name分支合并到master分支</p></blockquote><p>查看远端</p><blockquote><p>git remove -v</p></blockquote><p>添加多个远端</p><blockquote><p>git remote set-url –add origin <a href="http://xxxxx/xxx/adsdsdsdcelery-demo.git" target="_blank" rel="noopener">http://xxxxx/xxx/adsdsdsdcelery-demo.git</a></p></blockquote><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>几何算法延伸</title>
      <link href="/2020/05/10/spatial-calculate-extend/"/>
      <url>/2020/05/10/spatial-calculate-extend/</url>
      
        <content type="html"><![CDATA[<h3 id="线平行"><a href="#线平行" class="headerlink" title="线平行"></a>线平行</h3><p>$$<br>A_xB_y = A_yB_x<br>$$</p><p>$$<br>\frac{A_x}{A_y} = \frac{B_x}{B_y}<br>$$</p><p>$$<br>\frac{A_x}{A_y} = \frac{B_x}{B_y} = \frac{B_z}{B_z}<br>$$</p><h3 id="线垂直"><a href="#线垂直" class="headerlink" title="线垂直"></a>线垂直</h3><p>$$<br>A_xB_x + A_yB_y = 0<br>$$</p><p>$$<br>A_xB_x + A_yB_y + A_zB_z = 0<br>$$</p><h2 id="向量-vec-A-vec-B-夹角方向（叉乘）"><a href="#向量-vec-A-vec-B-夹角方向（叉乘）" class="headerlink" title="向量 $\vec A$ $\vec B$ 夹角方向（叉乘）"></a>向量 $\vec A$ $\vec B$ 夹角方向（<strong>叉乘</strong>）</h2><p>$\vec A$ $\times$ $\vec B$ &gt; 0 , $\vec A$在$\vec B$的顺时针方向。<br>$\vec A$ $\times$ $\vec B$ &lt; 0 , $\vec A$在$\vec B$的逆时针方向。<br>$\vec A$ $\times$ $\vec B$ = 0 , $\vec A$ $\vec B$共线。</p><h2 id="判断凸多边形"><a href="#判断凸多边形" class="headerlink" title="判断凸多边形"></a>判断凸多边形</h2><p>根据上面方向的性质，可以推论出来。<br>以多边形相邻两条边为向量进行叉积和，如果全部大于零则是凸多边形，如果全部为零则共线，否则就是凹多边形。</p><h2 id="计算任意多边形面积"><a href="#计算任意多边形面积" class="headerlink" title="计算任意多边形面积"></a>计算任意多边形面积</h2><h3 id="计算三角形面积"><a href="#计算三角形面积" class="headerlink" title="计算三角形面积"></a>计算三角形面积</h3><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/tri.jpg" alt="计算三角形面积"><br>根据上一篇几何基础，向量叉乘结果为带符号的平行四边形面积，那么三角形的面积为：<br>$$<br>Area = \frac{\vec {AB} \times \vec {AC}}{2}<br>$$<br>面积结果为带符号的值，正面积则ABC成左手系，负面积则ABC成右手系。 </p><h3 id="计算任意凹凸多边形面积"><a href="#计算任意凹凸多边形面积" class="headerlink" title="计算任意凹凸多边形面积"></a>计算任意凹凸多边形面积</h3><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/area.jpg" alt="计算任意多边形面积"><br>计算多边形面积就是把多边形切分为多个三角形计算就好了。<br>由于面积计算的结果是带符号的，因此，此结果对于凹凸多边形都是有效。<br>甚至可以选取多边形外的一个点，来构建三角形计算，也是同样有效的，像这样：<br><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/area2.jpg" alt="外部选点"><br>当然一般不会选择外部的点。  </p><h3 id="计算带孔多边形的面积"><a href="#计算带孔多边形的面积" class="headerlink" title="计算带孔多边形的面积"></a>计算带孔多边形的面积</h3><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/area3.jpg" alt="孔洞多边形"><br>当多边形存在“孔洞”时， 第一层孔洞的环序是与外环序一定是相反的，因此孔洞的面积和外环的面积结果也是相反的，直接相加即可。多层孔洞当然也是一样的道理。<br><strong>注意</strong>  </p><ol><li>环序是很重要的，同一层环进行面积计算的时候，要始终保持同一个方向的环序进行计算。  </li><li>不同文件格式要求的最外部环序是不一样的，因此不要认为外环总是和大部分情况一样是逆时针的。  </li></ol><p><em>扩展</em><br>1.ESRI shapefile：外层环序为顺时针。<br>2.<a href="http://www.opengeospatial.org/standards/sfs" target="_blank" rel="noopener">OGC规范</a>：此标准未定义多边形旋转；实际的多边形旋转可以沿顺时针或逆时针方向进行。<br>3.<a href="https://docs.oracle.com/cd/B10501_01/appdev.920/a96630/sdo_objgeom.htm#BGHFDDBF" target="_blank" rel="noopener">Oracle</a>：Exterior ring boundaries must be oriented counterclockwise, and interior ring boundaries must be oriented clockwise.（外部环边界必须逆时针定向，而内部环边界必须顺时针定向。）<br>4.<a href="https://docs.microsoft.com/en-us/archive/blogs/edkatibah/working-with-invalid-data-and-the-sql-server-2008-geography-data-type-part-1b" target="_blank" rel="noopener">SQL Server</a>： If SQL Server finds outer rings oriented in a clockwise direction, it will re-orient such rings to counter-clockwise - the direction required for outer rings in the Geography data type. The same goes for inner rings (holes), which SQL Server will orient to clockwise.（如果SQL Server找到沿顺时针方向定向的外环，则它将重新定位此类环为逆时针方向-Geography数据类型中外环所需的方向。内环（孔）也是如此，SQL Server会将其定位为顺时针方向。）<br>5.<a href="https://postgis.net/docs/ST_ForceRHR.html" target="_blank" rel="noopener">PostGIS</a>：Forces the orientation of the vertices in a polygon to follow a Right-Hand-Rule, in which the area that is bounded by the polygon is to the right of the boundary. In particular, the exterior ring is orientated in a clockwise direction and the interior rings in a counter-clockwise direction.（强制多边形中顶点的方向遵循“右手规则”，其中多边形所包围的区域在边界的右边。特别地，外环沿顺时针方向定向，而内环沿逆时针方向定向。）</p><h2 id="判断多边形的环序"><a href="#判断多边形的环序" class="headerlink" title="判断多边形的环序"></a>判断多边形的环序</h2><h3 id="面积法"><a href="#面积法" class="headerlink" title="面积法"></a>面积法</h3><p>多边形面积为正：逆时针；面积为负：顺时针； </p><h3 id="凸多边形"><a href="#凸多边形" class="headerlink" title="凸多边形"></a>凸多边形</h3><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/director.jpg" alt="凸多边形计算环序方向"><br>任取一点叉乘：<br>$$<br>\vec {AB} \times \vec{BC}<br>$$<br>值为正：逆时针；值为负：顺时针。</p><h3 id="极点法"><a href="#极点法" class="headerlink" title="极点法"></a>极点法</h3><p>选择多边形上的某个极点（x最大、x最小、y最大、y最小），这个极点则一定在凸包上，计算叉积得到环序方向，和上面凸多边形算法结论一致。</p><h2 id="计算多边形质心"><a href="#计算多边形质心" class="headerlink" title="计算多边形质心"></a>计算多边形质心</h2><h3 id="三角形"><a href="#三角形" class="headerlink" title="三角形"></a>三角形</h3><p>三角形 $\triangle ABC$ 质心计算公式：<br>$$<br>Centroid_x = \frac{A_x + B_x + C_x}{3}<br>$$<br>$$<br>Centroid_y = \frac{A_y + B_y + C_y}{3}<br>$$</p><h3 id="任意多边形"><a href="#任意多边形" class="headerlink" title="任意多边形"></a>任意多边形</h3><p>任意平面多边形，若能被拆分为 $i$个简单图形，每个简单图形的质心为：$C_i$，面积为：$A_i$。则质心Centroid的坐标$(Centroid_x, Centroid_y)$，满足以下公式：<br>$$<br>Centroid_x = \frac{\sum {C_i}_x A_i}{\sum A_i}<br>$$<br>$$<br>Centroid_y = \frac{\sum {C_i}_y A_i}{\sum A_i}<br>$$</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 几何计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 几何计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几何算法基础</title>
      <link href="/2020/05/10/spatial-calculate-basic/"/>
      <url>/2020/05/10/spatial-calculate-basic/</url>
      
        <content type="html"><![CDATA[<h4 id="加"><a href="#加" class="headerlink" title="加"></a>加</h4><p>$$<br>\vec A + \vec B = (A_x + B_x, A_y + B_y, A_z + B_z)<br>$$</p><h4 id="减"><a href="#减" class="headerlink" title="减"></a>减</h4><p>$$<br>\vec A - \vec B = (A_x - B_x, A_y - B_y, A_z - B_z)<br>$$</p><h4 id="模"><a href="#模" class="headerlink" title="模"></a>模</h4><p>$$<br>\left| \vec A \right| = \sqrt[]{ A_x^2 + A_y^2 + A_z^2 }<br>$$</p><h4 id="数乘（伸缩，换向）"><a href="#数乘（伸缩，换向）" class="headerlink" title="数乘（伸缩，换向）"></a>数乘（伸缩，换向）</h4><p>$$<br>k \vec A = (kA_x, kA_y, kA_z)<br>$$</p><h4 id="点乘"><a href="#点乘" class="headerlink" title="点乘"></a>点乘</h4><p>$$<br>\vec A \cdot \vec B = \sum A_i B_i = A_xB_x + A_yB_y + A_zB_z<br>$$</p><p>$$<br>\vec A \cdot \vec B = \left| \vec A \right| \left| \vec B \right| \cos \theta<br>$$</p><p>结果是一个<strong>标量</strong>（数）<br>几何意义：1.降维，2.$\vec B$在$\vec A$上的投影</p><p>$$<br>\left| \vec B \right| \cos \theta<br>$$  </p><h5 id="点乘延伸："><a href="#点乘延伸：" class="headerlink" title="点乘延伸："></a>点乘延伸：</h5><p>$$<br>\left| \vec A \cdot \vec B \right| \le \left| \vec A \right| \left| \vec B \right|<br>$$<br>等号只在$\vec A$与$\vec B$共线时成立.</p><p>$$<br>\vec A \cdot \vec B = \vec B \cdot \vec A<br>$$</p><p>$\vec A \cdot \vec B &gt; 0$，夹角在 $0^\circ$ 到 $90^\circ$ 之间<br>$\vec A \cdot \vec B = 0$，垂直<br>$\vec A \cdot \vec B &lt; 0$，夹角在 $90^\circ$ 到 $180^\circ$ 之间</p><h4 id="叉乘"><a href="#叉乘" class="headerlink" title="叉乘"></a>叉乘</h4><p>$$<br>\vec A \times \vec B = \left| \vec A \right| \left| \vec B \right| \sin \theta<br>$$</p><p>二维：<br>$$<br>\vec A \times \vec B = A_xB_y - B_xA_y<br>$$</p><p>三维：<br>$$<br>\vec A \times \vec B = A_yB_z- B_yA_z + A_zB_x - A_xB_z+ A_xB_y - A_yB_x<br>$$</p><p>几何意义：<br>二维：<br>$<br>(0,0) \quad (A_x, A_y) \quad (B_x, B_y) \quad ((A+B)_x, (A+B)_y)<br>$<br>构成的平行四边形带符号的面积<br>三维：<br>$\vec A \times \vec B$ 结果的向量，垂直于 $\vec A$ 和 $\vec B$ 构成的平面</p><h5 id="叉乘延伸："><a href="#叉乘延伸：" class="headerlink" title="叉乘延伸："></a>叉乘延伸：</h5><p>$$<br>\left| \vec A \times \vec B \right| = \left| \vec A \right| \left| \vec B \right| \sin \theta<br>$$</p><p>$$<br>\vec A \times \vec B = - \vec B \times \vec A<br>$$</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 几何计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 几何计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加数学公式支持</title>
      <link href="/2020/05/10/hexo-LaTex/"/>
      <url>/2020/05/10/hexo-LaTex/</url>
      
        <content type="html"><![CDATA[<p>为后面的文档做准备，添加数学公式的支持。<br>网上一堆更新渲染插件的办法，我都准备用了。幸好先看完了文章，后面要改node_modules里面的源码，这怎么可能！<br>我不能把node_modules上传到github吧，不上传又怎么同步呢。后来看了一下，hexo-theme-matery做好了插件，那就简单了：<br>themes/hexo-theme-matery/_config.yml中：</p><blockquote><p>mathjax:<br>   enable: true  </p></blockquote><p>完工～<br>就是这么简单，然后每篇要用到公式的文档，头上修改<code>mathjax: true</code>就好了。</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a><em>示例</em></h4><p>$\cos$   </p><p>$x_i^2$  </p><p>$|x+y|$  </p><p>$\sqrt[3]{x+y}$  </p><p>$\int_{r=1}^\infty$</p><p>$\frac{\partial x}{\partial y}$  </p><p>$$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.$$</p><p>$\alpha$  $\beta$  $\theta$</p><p>$\sum_{r=1}^n$</p><p>$\prod_{i=1}^{K}$</p><p>$$<br>\begin{bmatrix} a &amp; b &amp; c &amp; d &amp; e\\ f &amp; g &amp; h &amp; i &amp; j \\ k &amp; l &amp; m &amp; n &amp; o \\ p &amp; q &amp; r &amp; s &amp; t \end{bmatrix}<br>$$</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>全国甲乙丙级测绘资质单位名单</title>
      <link href="/2020/05/09/surveying-qualification/"/>
      <url>/2020/05/09/surveying-qualification/</url>
      
        <content type="html"><![CDATA[<h2 id="全国甲乙丙级测绘资质单位名单："><a href="#全国甲乙丙级测绘资质单位名单：" class="headerlink" title="全国甲乙丙级测绘资质单位名单："></a>全国甲乙丙级测绘资质单位名单：</h2><p>甲级：1326个</p><p>乙级：5081个</p><p>丙级：8790个</p><p><a href="https://github.com/tanghaojie/PublicData/tree/master/SurveyingQualificationOfChinaMainland" target="_blank" rel="noopener">点击查看和下载</a></p><p>详细信息压缩包解压密码：关注公众号[桀士]，回复“资质”获取密码。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy爬虫使用</title>
      <link href="/2020/05/09/scrapy-tutorial/"/>
      <url>/2020/05/09/scrapy-tutorial/</url>
      
        <content type="html"><![CDATA[<h2 id="飞速起步"><a href="#飞速起步" class="headerlink" title="飞速起步"></a>飞速起步</h2><ul><li><p>安装scrapy<br><code>pip install Scrapy</code>（<em>类unix记得加 <code>sudo</code></em>）<br>安装完成以后，到命令行输入<code>Scrapy</code>，查看是否安装成功。  </p><h2 id="准备和配置"><a href="#准备和配置" class="headerlink" title="准备和配置"></a>准备和配置</h2></li><li><p><code>scrapy startproject [name]</code>创建项目。</p></li><li><p>项目文件说明</p><blockquote><p>items.py：数据模型，类似于dto、orm中的model<br>spiders：爬虫程序<br>middlewares.py：模型中的中间件<br>pipelines.py：管道，对item进行处理，类似于很多服务器的请求管道<br>settings.py：程序设置,主要是一些优先级设置,优先级越高,值越小<br>scrapy.cfg：配置</p></blockquote></li><li><p>基础设置<br>settings.py中，找到<code>ROBOTSTXT_OBEY = True</code>，改为<code>ROBOTSTXT_OBEY = False</code>或者把他注释了<br>这东西的意思是：每个网站可以在根目录下放一个robots.txt的文件，文件里面告诉了爬虫哪些网址是可以爬的，当然这就是个君子协议，靠你自己选择是不是要遵守。  </p></li><li><p>设置UTF-8：<br>settings.py中，添加一行：<code>FEED_EXPORT_ENCODING = 'utf-8'</code></p></li><li><p>生成爬虫<br>命令行输入：<code>scrapy genspider [文件名] [网址]</code>，生成爬虫文件。可以在spiders文件夹下面看到。  </p><h2 id="开始代码"><a href="#开始代码" class="headerlink" title="开始代码"></a>开始代码</h2></li><li><p>item：自己写一个item  </p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">yourItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>  info1 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>  info2 <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>info1、info2，就是数据模型对应的字段，看scrapy.Item的源码，实际上就是个dict<br>所以可以这样理解：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  info1<span class="token operator">:</span> None<span class="token punctuation">,</span>  info2<span class="token operator">:</span> None<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>spider</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> name<span class="token punctuation">.</span>items <span class="token keyword">import</span> yourItem<span class="token keyword">class</span> <span class="token class-name">YourSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>  name <span class="token operator">=</span> <span class="token string">'yourname'</span>  allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'xxx.com'</span><span class="token punctuation">]</span>  start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://xxx.com/yyy/zzz'</span><span class="token punctuation">]</span>  <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>      info1 <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#第一个</span>      info2 <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div/a/text()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#extract 永远返回一个数组</span>      item <span class="token operator">=</span> yourItem<span class="token punctuation">(</span><span class="token punctuation">)</span>      item<span class="token punctuation">[</span><span class="token string">'info1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info1      item<span class="token punctuation">[</span><span class="token string">'info2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info2      <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没啥好说的，就是爬取信息，然后设置item的属性就好。  </p></li><li><p>可以爬了！！<br>命令行输入：<code>scrapy crawl yourname -o filename.csv</code>，yourname 对应 YourSpider 这个类的name变量值。就会爬取数据放到 filename.csv 中，还有其他格式，自己研究。</p></li><li><p>pipelines<br>如果你不想用scrapy默认的保存文件方法，那么就自定义一个保存文件的管道：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">YourPipeline</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true"># 伪代码</span>      <span class="token comment" spellcheck="true"># open file</span>      <span class="token comment" spellcheck="true"># file.write(item.info1)</span>      <span class="token comment" spellcheck="true"># file.write(item.info2)   </span>      <span class="token comment" spellcheck="true"># save and close file  </span>      <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后到settings.py，输入： </p><pre><code>ITEM_PIPELINES = {  'name.pipelines.YourPipeline': 300,}</code></pre><p>启动当前管道配置优先级，数字越小，优先级越靠前，然后就只需要输入<code>scrapy crawl yourname</code>就可以运行和保存了</p></li><li><p>调试<br>我用万能vscode：新建调试配置文件，输入</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.2.0"</span><span class="token punctuation">,</span>  <span class="token property">"configurations"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>          <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Scrapy"</span><span class="token punctuation">,</span>          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"python"</span><span class="token punctuation">,</span>          <span class="token property">"request"</span><span class="token operator">:</span> <span class="token string">"launch"</span><span class="token punctuation">,</span>          <span class="token property">"module"</span><span class="token operator">:</span> <span class="token string">"scrapy"</span><span class="token punctuation">,</span>          <span class="token property">"args"</span><span class="token operator">:</span> <span class="token punctuation">[</span>              <span class="token string">"crawl"</span><span class="token punctuation">,</span>              <span class="token string">"yourname"</span>          <span class="token punctuation">]</span>      <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>搞定！</p></li></ul><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> scrapy </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QGIS plugin开发使用</title>
      <link href="/2020/04/12/qgis-plugin/"/>
      <url>/2020/04/12/qgis-plugin/</url>
      
        <content type="html"><![CDATA[<h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><p>1.刚来就不建议看文档手动创建plugin了，python很熟悉的人可以看文档试试，否则还是别手动创建了，几乎所有的开发者都是通过<code>Plugin Builder</code>这个Plugin来创建的Plugin，安装好了以后，打开Plugin Builder，根据提示输入内容，一直下一步就创建好了。<br>2.用 <code>pyrcc5 -o resources.py resources.qrc</code>命令，把resources.qrc资源文件转换成py文件，主程序test.py文件中已经自动引入了。如果没有<code>pyrcc5</code>命令，执行<code>pip install PyQt5</code>安装PyQt。<br>3.把整个生成的文件夹，拷贝到，<code>~\AppData\Roaming\QGIS\QGIS3\profiles\default\python\plugins</code> 下面，所有的plugin其实都在这里。<br>4.打开qgis插件–已安装，勾选test插件，就可以看到菜单上多了按钮，点击就能打开了。</p><h4 id="以上最原始的demo就能够看见了，下面说说怎么自己写代码"><a href="#以上最原始的demo就能够看见了，下面说说怎么自己写代码" class="headerlink" title="以上最原始的demo就能够看见了，下面说说怎么自己写代码"></a>以上最原始的demo就能够看见了，下面说说怎么自己写代码</h4><p>5.插件有一个test_dialog.py文件，里面最关键的一句代码应该是<code>FORM_CLASS, _ = uic.loadUiType(os.path.join(os.path.dirname(__file__), 'Test_dialog_base.ui'))</code>，这就是加载转换.ui文件给pyqt用的。<br>6.生成的插件文件，包含了Test_dialog_base.ui，就是界面文件。安装QGIS的时候自带了Qt Designer，用Designer就可以打开就能看到和编辑了，这里从左边拖一个Push Button进去，后面用。编辑完成界面，去QGIS里面，取消勾选，在重新选中，就重新加载插件了，能够看出来结果。这里推荐一个插件 <code>Plugin Reloader</code>，不用每次去取消重勾选，它可以帮我们重加载插件。<br>7.点击事件，在.ui文件对应的.py文件的构造函数，<code>__init__</code>中，加上<code>self.pushButton.clicked.connect(self.pushButtonClicked)</code>，文件头导入<code>from PyQt5.QtWidgets import QMessageBox</code>然后定义方法：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">pushButtonClicked</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    QMessageBox<span class="token punctuation">.</span>warning<span class="token punctuation">(</span>None<span class="token punctuation">,</span> <span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'测试'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>8.去QGIS里面reload插件，点击按钮就能看到结果了。<br>9.更多的东西就自己尝试咯，你已经入门了。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> QGIS </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QGIS </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp快速实践</title>
      <link href="/2020/04/10/fast-uniapp/"/>
      <url>/2020/04/10/fast-uniapp/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>之前给文保局做了GIS系统和物联网监控系统效果不错，现在想弄个erp，问了一下业务规模，几乎约等于“零”。咋办，单一业务线走到底呗。本来说最近一直在搞flutter，就用flutter给他们弄一个，app和web（beta）一套直接就生成了。方便快速（省事）。结果呢，人家要用微信小程序…哎，甲方是爸爸。<br>结合已有技术经验和业务规模（如果有的话{笑}），还要考虑可能出现的业务平台变更这种吊炸天需求，调研了几个平台，这里我列一下：</p><blockquote><p>1.微信小程序原生：难用的ide，技术栈就是web变种。<br>2.H5+app：原生代码少不了，Android和iOS要单独适配，涉及到兼容性的问题。<br>3.mpvue：美团搞的，基于Vue.js的小程序开发框架，小程序和H5一套搞定型。<br>4.uni-app：Dcloud搞的，也是基于Vue.js的框架，iOS、Android、H5、各种小程序一套搞定型。</p></blockquote><p>对比了一下，微信小程序原生、H5+app，我直接就放弃了，微信小程序那个IDE简直不要太难用，而且改平台就是重写代码；H5+app一个人弄太费事不说，缺少优化可能效果也一般，虽然有原生app的超高天花板，但是谁叫咱就一个人，还要快速出活呢；mpvue本来我是准备选的，小程序+H5，基本上都能干了，后面要改原生app的话，我就套webview的壳，关键是开源免费，怪就怪在开源吧，我上github看了下commits和issues，最近的commit是八个月前了…issues也有点混乱的感觉，加上之前爆出美团的KPI事件，我觉得为了我的KPI和头发，还是算了吧。都说到这了，还有的选吗？最开始我是觉得uniapp商业话太严重（推广），加上不开源，还是有些顾虑的，但是好像现在是（部分）开源了？推广说明官方很重视，那。。还说什么呢，淦</p><h2 id="淦"><a href="#淦" class="headerlink" title="淦"></a>淦</h2><p>因为微信小程序和uniapp都没搞过，花时间分别看了下文档，都是web变种，会web就会开发。主要是熟悉下整体的框架，为啥这样设计，有哪些个组件分别能干啥事，有哪些API。细节千万别看，太花时间，而且你肯定记不住，所以就直接上手吧。<br>uniapp支持Weex，在app端，用vue页面的话就是用webview渲染的，用nvue的话就是用原生渲染。(｡･∀･)ﾉﾞ嗨，等于说码量还是不小啊，坑还是多啊。不过uniapp支持<code>#ifdef #endif</code>条件编译语法，这个没啥好说的，写后端的都知道，赞一个。<br>然后就是写项目了，如果看了微信小程序文档和uniapp的文档，你就会发现，其实就是个web前端的东西，无非就是语法变了一点，配置文件针对多端合并重封装了，写代码的时候要注意兼容，一个ui组件把几个端都同时考虑进来，用条件编译。就行了，就是这么简单，快速实践就介绍完了（其实是不知道说啥了）。（逃）</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> uniapp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页插件</title>
      <link href="/2020/04/03/weatherPlugin/"/>
      <url>/2020/04/03/weatherPlugin/</url>
      
        <content type="html"><![CDATA[<h2 id="天气"><a href="#天气" class="headerlink" title="天气"></a>天气</h2><p>中国天气网：<a href="https://cj.weather.com.cn/plugin/pc" target="_blank" rel="noopener">https://cj.weather.com.cn/plugin/pc</a><br>生成插件放到： themes/matery/layout/layout.ejs</p><h2 id="动态诗词"><a href="#动态诗词" class="headerlink" title="动态诗词"></a>动态诗词</h2><p>今日诗词：<a href="https://www.jinrishici.com/" target="_blank" rel="noopener">https://www.jinrishici.com/</a><br>一言: <a href="https://hitokoto.cn/" target="_blank" rel="noopener">https://hitokoto.cn/</a></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> plugin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plugin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客地址</title>
      <link href="/2020/04/03/myblogaddress/"/>
      <url>/2020/04/03/myblogaddress/</url>
      
        <content type="html"><![CDATA[<blockquote><p><del>由于众所周知的原因，单纯把博客部署到一个地方，很可能访问不到，或者访问很慢，所以这里同时部署到 github 和 gitee，提高访问速度</del> [手动狗头]</p></blockquote><ul><li>前置条件：你会搭博客（网站）</li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>我的两个博客地址：<br><a href="https://tanghaojie.github.io/">https://tanghaojie.github.io/</a><br><a href="http://jackie_tang.gitee.io/" target="_blank" rel="noopener">http://jackie_tang.gitee.io/</a><br><br></p><hr><h2 id="gitee-pages-的一个坑"><a href="#gitee-pages-的一个坑" class="headerlink" title="gitee pages 的一个坑"></a>gitee pages 的一个坑</h2><p>每次远程部署以后，需要手动到 gitee pages 服务里面去，手动点击更新按钮才能自动更新博客。（想自动更新？gitee pages pro 了解一下）</p><h2 id="从-github-同步方式部署"><a href="#从-github-同步方式部署" class="headerlink" title="从 github 同步方式部署"></a>从 github 同步方式部署</h2><ul><li><p>在 gitee 新建仓库:<br><img src="http://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/gitee_blog.jpg" alt="就像这样配置就好"><br><em>注意点：</em><br><em>1.仓库名用 gitee 给你分配的个人地址名，可以到 个人中心–&gt;个人空间地址 中看到，不一定是你的用户名，比如我的地址是：Jackie_Tang，我的用户名是：JackieTang。因为我改过名。。。</em><br><em>2.下面选择导入已有仓库，然后填入 github 地址以后，仓库名会自动变成 github 仓库名，所以又需要你自己去上面改一次</em></p><br></li><li><p>点击 创建，等待 gitee 自动导入 github 仓库。</p><br></li><li><p>导入完成如图配置<br><img src="http://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/gitee_blog2.jpg" alt="配置gitee pages"><br><em>注意点：</em><br><em>1.选择使用 Https，否则会跨域</em></p></li></ul><p>以上步骤就完成了，你的博客地址为：{个人地址名}.gitee.io，以后要同步 github 的数据，只需要这样操作：<br><img src="http://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/gitee_blog3.jpg" alt="同步"></p><hr><h2 id="同步上传"><a href="#同步上传" class="headerlink" title="同步上传"></a>同步上传</h2><p>我用的 hexo，在 <code>_config.yml</code> 文件：</p><pre class="line-numbers language-json"><code class="language-json">deploy<span class="token operator">:</span> type<span class="token operator">:</span> git repo<span class="token operator">:</span>   github<span class="token operator">:</span> https<span class="token operator">:</span>//github.com/tanghaojie/tanghaojie.github.io.git   gitee<span class="token operator">:</span> https<span class="token operator">:</span>//gitee.com/Jackie_Tang/Jackie_Tang.git branch<span class="token operator">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加两个 repo 就好</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中华人民共和国省级行政区域界线标注的小tip</title>
      <link href="/2020/04/01/provincial-boundary/"/>
      <url>/2020/04/01/provincial-boundary/</url>
      
        <content type="html"><![CDATA[<p>如果大段以河道（或其他水体）为省界的，全部以实线标注会影响河流水体的连续呈现时，则用断续线表示。<br>如晋陕、晋豫黄河省界段，川藏、川滇（东段）长江省界段。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>我本人没有找到这个规定的出处，是否是国家规范不做保证。<br>但是百度地图现在看已经是这样做标注了。<br><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/provincialBoundary.jpg" alt="川藏交界"></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter定位插件location</title>
      <link href="/2020/03/31/flutter-location/"/>
      <url>/2020/03/31/flutter-location/</url>
      
        <content type="html"><![CDATA[<p>iOS没测试，Android需要用到GMS来辅助定位，所以国内不能用！不能用！！不能用！！！</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
          <category> location </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> location </tag>
            
            <tag> 定位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter加载地图的几种方式对比[测试]</title>
      <link href="/2020/03/31/flutter-load-map/"/>
      <url>/2020/03/31/flutter-load-map/</url>
      
        <content type="html"><![CDATA[<p>1.<a href="https://pub.dev/packages/flutter_map" target="_blank" rel="noopener">flutter_map</a>：Leaflet用 Flutter的实现，主要用于加载瓦片地图和简单注记，复杂的几何要素可以用插件的形式，但要自己实现代码。没有自带定位的功能，要自己处理。综合来看，只用瓦片地图，定位这些基础功能的话，可以选这个，团队强大的话，复杂功能也可以自己搞插件。天花板挺高的。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/flutter_map.jpg" alt="flutter_map，自己加了定位"></p><p>2.<a href="https://pub.dev/packages/webview_flutter" target="_blank" rel="noopener">webview_flutter</a>：fluter官方出品的webview插件，没什么好说的，网页能干的事他都能干。最大的问题是目前还是预览版，官方说因为用了新的机制，具体什么机制我也没看，能不能实现官方没说，deadline也没说，有点不让人放心。</p><p>3.<a href="https://pub.dev/packages/flutter_webview_plugin" target="_blank" rel="noopener">flutter_webview_plugin</a>：网上综合推荐比较多的一个插件了，就是调用native webview，稳定性，兼容性肯定没问题。但是由于接入原生，导致webview始终在最上层，会覆盖在所有 Flutter widget之上，灵活性牺牲很大。最新的说明里写了，要把这个插件合并到上面提到的官方插件里面去了。所以基本上不用选了。</p><p><img src="https://gitee.com/Jackie_Tang/Jackie_Tang/raw/master/my_images/webviewplugin.jpg" alt="flutter_webview_plugin,注意右上角debug标识都被覆盖了"></p><p>4.其他库：比如说高德amap，百度地图，这类就局限平台了。</p><hr><p>目前就测试了这几种地图使用方式，总的来说，有团队，有时间，能自己研发的，可以上。不然的话还是用混合开发吧，flutter还需要给他些时间来成熟。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
          <category> map </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> map </tag>
            
            <tag> webview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter Doctor：Android license status unknown</title>
      <link href="/2020/03/27/post/"/>
      <url>/2020/03/27/post/</url>
      
        <content type="html"><![CDATA[<p>执行：</p><pre><code>flutter doctor --android-licenses</code></pre><p>之后一路同意就好了。</p><p>如果显示：</p><pre><code>&gt; Android sdkmanager tool not found (PATH)</code></pre><p>1.打开Android SDK Manager<br>2.选SDK Tools<br>3.把下面的，Hide Obsolete Packages，取消勾选<br>4.打勾Android SDK Tools (Obsolete)<br>5.确定安装</p><p>Flutter团队知道这个问题，官方建议就是这么处理，后续版本会解决的。</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> Android </tag>
            
            <tag> iOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>office2016零售版转VOL版</title>
      <link href="/2020/03/19/office2016ToVol/"/>
      <url>/2020/03/19/office2016ToVol/</url>
      
        <content type="html"><![CDATA[<p>以下代码复制为：.bat文件</p><pre class="line-numbers language-shell"><code class="language-shell">@ECHO OFF&PUSHD %~DP0setlocal EnableDelayedExpansion&color 3e & cd /d "%~dp0"title office2016 retail转换vol版%1 %2mshta vbscript:createobject("shell.application").shellexecute("%~s0","goto :runas","","runas",1)(window.close)&goto :eof:runasif exist "%ProgramFiles%\Microsoft Office\Office16\ospp.vbs" cd /d "%ProgramFiles%\Microsoft Office\Office16"if exist "%ProgramFiles(x86)%\Microsoft Office\Office16\ospp.vbs" cd /d "%ProgramFiles(x86)%\Microsoft Office\Office16":WHclsecho.echo 选择需要转化的office版本序号echo.echo --------------------------------------------------------------------------------echo 1. 零售版 Office Pro Plus 2016 转化为VOL版echo.echo 2. 零售版 Office Visio Pro 2016 转化为VOL版echo.echo 3. 零售版 Office Project Pro 2016 转化为VOL版echo.echo. --------------------------------------------------------------------------------set /p tsk="请输入需要转化的office版本序号【回车】确认（1-3）: "if not defined tsk goto:errif %tsk%==1 goto:1if %tsk%==2 goto:2if %tsk%==3 goto:3:errgoto:WH:1clsecho 正在安装 KMS 许可证...for /f %%x in ('dir /b ..\root\Licenses16\proplusvl_kms*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulecho 正在安装 MAK 许可证...for /f %%x in ('dir /b ..\root\Licenses16\proplusvl_mak*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:2clsecho 正在安装 KMS 许可证...for /f %%x in ('dir /b ..\root\Licenses16\visio???vl_kms*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulecho 正在安装 MAK 许可证...for /f %%x in ('dir /b ..\root\Licenses16\visio???vl_mak*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:3clsecho 正在安装 KMS 许可证...for /f %%x in ('dir /b ..\root\Licenses16\project???vl_kms*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulecho 正在安装 MAK 许可证...for /f %%x in ('dir /b ..\root\Licenses16\project???vl_mak*.xrm-ms') do cscript ospp.vbs /inslic:"..\root\Licenses16\%%x" >nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:eecho.echo 转化完成，按任意键退出！pause >nulexit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>让填写秘钥时，输入 XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue use video.js support flash rtmp</title>
      <link href="/2020/03/12/vueVideo/"/>
      <url>/2020/03/12/vueVideo/</url>
      
        <content type="html"><![CDATA[<p>在Vue中使用video.js，兼容flash视频，研究了一天，简单记录一下。<br>1.包安装</p><pre class="line-numbers language-shell"><code class="language-shell">npm install --save videojsnpm install --save videojs-flash //如果需要用flash的话<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.实现vue-video.vue文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>video ref<span class="token operator">=</span><span class="token string">"videoPlayer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"video-js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>video<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> videojs <span class="token keyword">from</span> <span class="token string">'video.js'</span><span class="token keyword">import</span> <span class="token string">'videojs-flash'</span>                                <span class="token comment" spellcheck="true">// if use flash</span><span class="token keyword">import</span> SWF_PATH <span class="token keyword">from</span> <span class="token string">'videojs-swf/dist/video-js.swf'</span>  <span class="token comment" spellcheck="true">// if use flash</span><span class="token keyword">import</span> <span class="token string">'video.js/dist/video-js.min.css'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>      type<span class="token punctuation">:</span> Object<span class="token punctuation">,</span>      <span class="token keyword">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      player<span class="token punctuation">:</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>flash <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>           <span class="token comment" spellcheck="true">// if use flash</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>flash<span class="token punctuation">.</span>swf <span class="token operator">=</span> SWF_PATH <span class="token comment" spellcheck="true">// if use flash</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>player <span class="token operator">=</span> <span class="token function">videojs</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>videoPlayer<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>player<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.使用</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>vue<span class="token operator">-</span>video <span class="token punctuation">:</span>options<span class="token operator">=</span><span class="token string">"videoOptions"</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> vueVideo <span class="token keyword">from</span> <span class="token string">'./path/to/vue-video.vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> <span class="token string">'App'</span><span class="token punctuation">,</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span>    vueVideo  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// videoOptions标准参考 https://docs.videojs.com/</span>      videoOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        autoplay<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        controls<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        language<span class="token punctuation">:</span> <span class="token string">'zh'</span><span class="token punctuation">,</span>        width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>        height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>        sources<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            src<span class="token punctuation">:</span> <span class="token string">'rtmp://*************/live/qq'</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span> <span class="token string">'rtmp/flv'</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">// techOrder: ['flash']</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>rtmp、mp4已测试没有问题，其他格式就没测试了。<br>需要发布才能进行测试，类似file://C:/test.html这种文件形式的是无法使用的</p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> video.js </tag>
            
            <tag> rtmp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postgis和EntityFrameworkCore的关系映射，几何字段映射</title>
      <link href="/2019/12/12/entityframeworkcorewithpostgis/"/>
      <url>/2019/12/12/entityframeworkcorewithpostgis/</url>
      
        <content type="html"><![CDATA[<p><code>这篇文章主要讨论Code First模式，其他模式我不怎么用的，不敢保证</code></p><p>  现在搞开发数据库操作基本上都用Orm了吧，但是我们搞GIS的，因为涉及到空间几何字段、空间拓扑运算操作的情况，很多时候传统的Orm就解决不了了，所以很多时候要么就直接用odbc原生Sql操作了；或者是业务部分EF+空间几何Sql这么来操作。这两个方案实现起来确实没什么问题，但前者用起来实在麻烦，很多简单的东西就搞复杂了，要么统一封装一下的话就又回到Orm的路子上；后者是最灵活的一种方案了，任何需求都可以用这个办法来解决，但问题就是整个软件的框架会显得很混乱，新人来了经常问为啥要这样搞，思维切换起来很麻烦，如果要改需求还涉及到空间几何的话，那只能打一架好了…</p><p>  之前的DotnetFramework+Npgsql+EF是不支持使用PostGIS扩展的，官方一直也没明确表态后续规划什么的，直到最近在github上看到开发者说以后应该不会支持了，会把重心放到EF Core上。因此，想要直接映射几何字段几乎变成了不可能的事情。</p><blockquote><p><em>网上有用SharpMap做映射的解决方案，但是我一直没有测试成功过</em><br><em>官方的数据类型映射表里面也写了System.Data.Spatial.DbGeometry可以映射到Geometry类型。这个能在CodeFirst下识别，但生成的字段类型并不是Geometry，而是Byte[]，我也不知道哪错了，诶</em></p></blockquote><p>  直到最近我打算把平台切换到.NetCore，然后去研究了一下，整个人就豁然开朗了啊。1.微软官方明确表态实现几何类型的字段。2.Npgsql的Core版本确实在实现Postgis的东西，而且进度神速。那么，就用呗~</p><p>依赖很简单，就两个包：</p><pre class="line-numbers language-powershell"><code class="language-powershell">1<span class="token punctuation">.</span>Npgsql<span class="token punctuation">.</span>EntityFrameworkCore<span class="token punctuation">.</span>PostgreSQL2<span class="token punctuation">.</span>Npgsql<span class="token punctuation">.</span>EntityFrameworkCore<span class="token punctuation">.</span>PostgreSQL<span class="token punctuation">.</span>NetTopologySuite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后是配置，首先数据库里面要启用Postgis，简单：<code>Create Extension Postgis;</code><br>EFCore框架：</p><pre class="line-numbers language-csharp"><code class="language-csharp">dbContextOptions<span class="token punctuation">.</span><span class="token function">UseNpgsql</span><span class="token punctuation">(</span>connectionString<span class="token punctuation">,</span> o <span class="token operator">=</span><span class="token operator">></span> o<span class="token punctuation">.</span><span class="token function">UseNetTopologySuite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这在哪自己找一下</span><span class="token comment" spellcheck="true">//这在你的DbContext里面</span><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">void</span> <span class="token function">OnModelCreating</span><span class="token punctuation">(</span>ModelBuilder builder<span class="token punctuation">)</span><span class="token punctuation">{</span>    builder<span class="token punctuation">.</span><span class="token function">HasPostgresExtension</span><span class="token punctuation">(</span><span class="token string">"postgis"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//启用postgis扩展，需要手动写扩展名也是有原因的哦</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>齐活了，就这么简单。<br>使用的话就很简单了：</p><pre class="line-numbers language-csharp"><code class="language-csharp"><span class="token keyword">using</span> NetTopologySuite<span class="token punctuation">.</span>Geometries<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestGeometry</span><span class="token punctuation">{</span>  <span class="token punctuation">[</span><span class="token function">Column</span><span class="token punctuation">(</span>TypeName <span class="token operator">=</span> <span class="token string">"geometry (MultiLineString)"</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//可以指定类型、维度、坐标系</span>  <span class="token keyword">public</span> MultiLineString Geom <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有了这个后续的操作就简单多了：</p><pre class="line-numbers language-csharp"><code class="language-csharp">Geom<span class="token punctuation">.</span>Area <span class="token comment" spellcheck="true">//面积</span>Geom<span class="token punctuation">.</span><span class="token function">AsBinary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//转wkb</span>Geom<span class="token punctuation">.</span><span class="token function">AsText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//同ToString()，转wkt</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就不一一列举了，官方文档很全面的。</p><p><strong>* 补充一下其他的坑吧，转 .Net Core以后，Gdal会成为一个很大的问题，这个需要好好的评估一下，Gdal目前还没有官方做Core的适配，这个影响挺大的。当然Gdal的功能也有相应各个独立的库能替换的，但始终不会像Gdal这么得心应手，一定要注意评估这一点！！！ *</strong></p><hr><p><em>版权声明：</em><br><em>除非注明，本博文章均为原创，转载请以链接形式标明本文地址。</em></p><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
          <category> GIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIS </tag>
            
            <tag> entityframework </tag>
            
            <tag> .net core </tag>
            
            <tag> postgis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站收录</title>
      <link href="/2019/10/12/website/"/>
      <url>/2019/10/12/website/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://experiments.withgoogle.com/" target="_blank" rel="noopener">Google探索实验室</a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li><li><a href=""></a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地理信息相关标准</title>
      <link href="/2019/10/12/gisstandard/"/>
      <url>/2019/10/12/gisstandard/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.opengeospatial.org/standards" target="_blank" rel="noopener">OGC</a><blockquote><p>开放地理空间信息联盟(Open Geospatial Consortium),是一个非盈利的国际标准组织，它制定了数据和服务的一系列标准，GIS厂商按照这个标准进行开发可保证空间数据的互操作。</p></blockquote></li></ol><hr><ol start="2"><li><a href="https://spatialreference.org/" target="_blank" rel="noopener">Spatial reference</a><blockquote><p>坐标系统收录、查询、上传、教育。</p></blockquote></li></ol><hr><ol start="3"><li><a href="https://gdal.org/" target="_blank" rel="noopener">GDal</a><blockquote><p>GDAL(Geospatial Data Abstraction Library)是一个在X/MIT许可协议下的开源栅格空间数据转换库。它利用抽象数据模型来表达所支持的各种文件格式。它还有一系列命令行工具来进行数据转换和处理。OGR是GDAL项目的一个分支，功能与GDAL类似，只不过它提供对矢量数据的支持。</p></blockquote></li></ol><hr><ol start="4"><li><a href="http://epsg.io/" target="_blank" rel="noopener">epsg</a><blockquote><p>全球坐标系统</p></blockquote></li></ol><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> tips </category>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> GIS </tag>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地理地图数据提供网站</title>
      <link href="/2019/10/12/gisdatawebsites/"/>
      <url>/2019/10/12/gisdatawebsites/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.osgeo.cn/data/" target="_blank" rel="noopener">OSGeo中国</a><blockquote><p>开放地理空间信息科学：技术、数据、知识共享。</p></blockquote></li></ol><hr><ol start="2"><li><a href="http://spatialhadoop.cs.umn.edu/index.html" target="_blank" rel="noopener">spatial hadoop</a><blockquote><p>一个为空间数据设计的map reduce框架，有很多超大的数据集提供下载。</p></blockquote></li></ol><hr><ol start="3"><li><a href="http://www.webmap.cn/main.do?method=index" target="_blank" rel="noopener">全国地理信息资源目录服务</a><blockquote><p>国家基础地理信息中心提供的资源查询和下载服务。</p></blockquote></li></ol><hr><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> tips </category>
          
          <category> website </category>
          
          <category> data </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> GIS </tag>
            
            <tag> website </tag>
            
            <tag> data </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些好玩的地理网站</title>
      <link href="/2019/10/12/gisForFunWebsites/"/>
      <url>/2019/10/12/gisForFunWebsites/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.openstreetmap.org" target="_blank" rel="noopener">Open Street Map</a><blockquote><p>人人都可编辑的世界地图，一个网上地图协作计划的产物。</p></blockquote></li></ol><hr><ol start="2"><li><a href="https://lines.chromeexperiments.com" target="_blank" rel="noopener">Land Lines</a><blockquote><p>Google Creative Lab 提交的一个 Chrome Experiments 项目，基于深度学习。</p></blockquote></li></ol><hr><ol start="3"><li><a href="https://geoguessr.com/" target="_blank" rel="noopener">GeoGuessr</a><blockquote><p>这是一个真实的「情景判断游戏」。开局就是随便把玩家落在 Google 街景中的某一处，你可以在街景地图中一路游走，然后根据周遭信息，判断出身处何处。</p></blockquote></li></ol><hr><ol start="4"><li><a href="https://experiments.withgoogle.com/chrome/globe" target="_blank" rel="noopener">The WebGL Globe</a><blockquote><p>The WebGL Globe 是一个使数据地理可视化的平台。利用这个项目提供的开源代码，我们可以制作属于自己的数据地球。在项目网站上有不少网友提交的实验，根据人口变化、火山活动、各地维基百科篇目等方方面面的数据产生不同的可视化地球。</p></blockquote></li></ol><hr><ol start="5"><li><a href="https://ojack.github.io/ghost-map/" target="_blank" rel="noopener">Ghost Map</a><blockquote><p>Ghost Map收录了各个城市的街道路线，将其隐藏在黑暗中。通过移动鼠标，光亮像细流入川一般流淌到附近街道上，灯火明亮，车水马龙，勾勒出这座城市的建筑与街道规划。当鼠标指针停止移动，万物歇息，一切又沉入黑暗。</p></blockquote></li></ol><hr><ol start="6"><li><a href="https://snazzymaps.com" target="_blank" rel="noopener">SNAZZY MAPS</a><blockquote><p>在线Google Maps配图。自带多种风格自由选择，而且都可以自定义。</p></blockquote></li></ol><hr><ol start="7"><li><a href="http://pixelmap.amcharts.com/" target="_blank" rel="noopener">Pixel Map</a><blockquote><p>在线像素地图生成。</p></blockquote></li></ol><hr><ol start="8"><li><a href="http://www.dituhui.com/" target="_blank" rel="noopener">地图慧</a><blockquote><p>在线地图制作，上传自己的数据，可以做热力图、流向图等等各种专题地图。</p></blockquote></li></ol><hr><ol start="9"><li><a href="https://stamen.com" target="_blank" rel="noopener">stamen</a><blockquote><p>地图与制图、数据可视化。</p></blockquote></li></ol><hr><ol start="10"><li><a href="https://www.mapbox.com/" target="_blank" rel="noopener">Map Box</a><blockquote><p>在线地图制图。</p></blockquote></li></ol><hr><ol start="11"><li><a href="http://mapstack.stamen.com/" target="_blank" rel="noopener">Map Stack</a><blockquote><p>使设计地图免费,简单,有趣。</p></blockquote></li></ol><hr><ol start="12"><li><a href="https://cadmapper.com/" target="_blank" rel="noopener">CAD Mapper</a><blockquote><p>cad su 等格式的模型下载。</p></blockquote></li></ol><hr><ol start="13"><li><a href="https://www.ageeye.cn/" target="_blank" rel="noopener">发现中国</a><blockquote><p>中国历史地图、古地图。</p></blockquote></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> tips </category>
          
          <category> website </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tips </tag>
            
            <tag> fun </tag>
            
            <tag> GIS </tag>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
